{
  "contractName": "ERC20TokenExchange",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenBuyingOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenBuyingOfferPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialOfferId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenExchangeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenFromOfferBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenFromOfferSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenSellingOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenSellingOfferPlaced",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getErc20ExchangeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20OfferCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20ExchangeAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Exchange[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20OfferAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "offerType",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Offer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "getErc20ExchangeById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Exchange",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getErc20OfferById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "offerType",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CreateERC20TokenExchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PlaceERC20TokenBuyingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PlaceERC20TokenSellingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CancelOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CancelERC20TokenBuyingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CancelOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CancelERC20TokenSellingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.OfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "BuyERC20TokenFromOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.OfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SellERC20TokenFromOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenBuyingOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenBuyingOfferPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialOfferId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenExchangeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenFromOfferBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenFromOfferSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenSellingOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenSellingOfferPlaced\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.OfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"BuyERC20TokenFromOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CancelOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CancelERC20TokenBuyingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CancelOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CancelERC20TokenSellingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CreateERC20TokenExchangeRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CreateERC20TokenExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.PlaceERC20TokenOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PlaceERC20TokenBuyingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.PlaceERC20TokenOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PlaceERC20TokenSellingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.OfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SellERC20TokenFromOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20ExchangeAll\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Exchange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getErc20ExchangeById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Exchange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20ExchangeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20OfferAll\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getErc20OfferById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20OfferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Exchange Contract for ERC20 Token\",\"kind\":\"dev\",\"methods\":{\"BuyERC20TokenFromOffer((uint256,uint256),address)\":{\"details\":\"someone can buy token(ERC20) from selling offerexchangeTokenId id of exchange offerId id of offer\"},\"CancelERC20TokenBuyingOffer((uint256,uint256),address)\":{\"details\":\"creator of buying offer can cancel his ERC20Token BuyingOfferexchangeTokenId id of exchange offerId id of offer\"},\"CancelERC20TokenSellingOffer((uint256,uint256),address)\":{\"details\":\"creator of selling offer can cancel his ERC20 SellingOfferexchangeTokenId id of exchange offerId id of offer\"},\"CreateERC20TokenExchange((string,address,address,uint256,uint256),address)\":{\"details\":\"Owner of token can create Exchange of ERC20exchangeTokenAddress address of exchangeToken(ERC20) offerTokenAddress address of exchangeToken(ERC20) amount amount of Exchangeprice token price of Exchange\"},\"PlaceERC20TokenBuyingOffer((uint256,uint256,uint256),address)\":{\"details\":\"someone can create buying offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange\"},\"PlaceERC20TokenSellingOffer((uint256,uint256,uint256),address)\":{\"details\":\"owner of token can create selling offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange\"},\"SellERC20TokenFromOffer((uint256,uint256),address)\":{\"details\":\"owner of token can sell token(ERC20) from buying offerexchangeTokenId id of exchange offerId id of offer\"},\"constructor\":{\"details\":\"Constructor Function\"}},\"stateVariables\":{\"_erc20ExchangeCount\":{\"details\":\"count variables for ERC20Token exchange and offer mapping\"},\"_erc20Exchanges\":{\"details\":\"variables for storing ERC20TOken Exchange and Offer\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/PRIVI/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol\":\"ERC20TokenExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/PRIVI/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol\":{\"keccak256\":\"0xae0f007fdb9e5f133840272abdb86fbe947d7ba1635b4124ddc80ab5de61d678\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6a483f064ad0a46a9051e643e6513d6675b4da1dda6c15d1746e40cd57b8fab\",\"dweb:/ipfs/QmUUyM91xyuiAXvrqyMQU2qrweekGMGSfz6vorDeP9GBnn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:21439:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:12"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:12",
                "type": ""
              }
            ],
            "src": "14:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "267:420:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "311:24:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "320:5:12"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "327:5:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "313:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "313:20:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "313:20:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "288:3:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "293:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "284:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "284:19:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "305:4:12",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "280:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:30:12"
                  },
                  "nodeType": "YulIf",
                  "src": "277:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "344:25:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:4:12",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "358:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:11:12"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "348:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "378:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "400:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "408:4:12",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "396:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:17:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "382:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "488:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "490:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "490:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "490:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "431:10:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "443:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "428:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "428:34:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "467:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "479:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "464:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "425:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:62:12"
                  },
                  "nodeType": "YulIf",
                  "src": "422:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:4:12",
                        "type": "",
                        "value": "0x40"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "532:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "519:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:24:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "519:24:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "552:15:12",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "561:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "552:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "583:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "604:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "591:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "635:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "643:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:15:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "665:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "676:2:12",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "661:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "661:18:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "648:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:57:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "624:57:12"
                }
              ]
            },
            "name": "abi_decode_struct_CancelOfferRequest",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "238:9:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "249:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "257:5:12",
                "type": ""
              }
            ],
            "src": "192:495:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "770:219:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "825:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "833:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "791:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "800:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "787:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "787:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "812:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "783:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "780:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "851:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "870:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "864:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "864:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "855:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "933:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "942:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "950:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "935:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "935:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "935:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "902:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "923:5:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "916:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "916:13:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "909:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "909:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "899:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "899:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "892:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "889:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "968:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "978:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "968:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "736:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "747:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "759:6:12",
                "type": ""
              }
            ],
            "src": "692:297:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:210:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1163:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1172:6:12"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1180:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1165:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1165:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1165:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1138:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1147:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1134:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1134:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1159:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1130:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:66:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1245:9:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1256:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_CancelOfferRequest",
                      "nodeType": "YulIdentifier",
                      "src": "1208:36:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:56:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1273:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1306:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1317:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1302:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1302:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1283:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1273:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_CancelOfferRequest_$1240_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1075:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1086:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1098:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1106:6:12",
                "type": ""
              }
            ],
            "src": "994:333:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1468:1305:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1514:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1523:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1531:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1516:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1516:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1516:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1489:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1498:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1481:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1481:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1478:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1549:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1576:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1563:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:23:12"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1553:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1595:28:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1605:18:12",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1599:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1650:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1659:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1667:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1652:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1652:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1652:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1638:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1646:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1635:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1635:14:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1632:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1685:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1699:9:12"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1710:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1695:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:22:12"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1689:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1757:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1766:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1774:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1759:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1759:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1759:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1737:7:12"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1746:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1733:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1733:16:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1751:4:12",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1729:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1729:27:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1726:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1792:35:12",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3392",
                      "nodeType": "YulIdentifier",
                      "src": "1805:20:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:22:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1796:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1836:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1865:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1852:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:16:12"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1840:8:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1897:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1906:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1914:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1899:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1899:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1899:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1883:8:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1893:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1880:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:16:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1877:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1932:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1946:2:12"
                      },
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1950:8:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:17:12"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1936:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2007:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2016:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2024:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2009:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2009:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2009:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1986:2:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1990:4:12",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1982:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1982:13:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1997:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1978:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1968:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2042:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2065:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2052:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:16:12"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2046:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2077:14:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2087:4:12",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2081:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2114:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2116:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2116:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2116:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2106:2:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2110:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2103:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2103:10:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2100:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2145:66:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2186:2:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2190:4:12",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2182:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2182:13:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2201:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2197:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2197:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2178:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2178:27:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2207:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:36:12"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2158:15:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:53:12"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "2149:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2227:5:12"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2234:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2220:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:17:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2220:17:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2283:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2292:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2300:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2285:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2285:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2285:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2260:2:12"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2264:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:11:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2269:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2252:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2252:20:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2274:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2249:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2249:33:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2246:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2335:5:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2342:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2351:2:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2355:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2347:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2347:11:12"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2360:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2318:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2318:45:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2387:5:12"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2394:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2383:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2383:14:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2399:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2379:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2379:23:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2404:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2372:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2372:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2427:5:12"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2434:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2420:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2420:20:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2420:20:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2460:5:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2467:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2456:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2456:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2495:2:12"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2499:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2491:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2491:11:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2472:18:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2472:31:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2449:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2449:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2449:55:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2524:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2531:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2520:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2520:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2559:2:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2563:2:12",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2555:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2555:11:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2536:18:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2536:31:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2513:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2513:55:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2588:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2617:2:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2621:2:12",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2613:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2613:11:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2600:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2600:25:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2577:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:49:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2577:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2646:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2653:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2642:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2642:15:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2676:2:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2680:3:12",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2672:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2672:12:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2659:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2659:26:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2635:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2635:51:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2695:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2705:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2695:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2719:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2752:9:12"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2763:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2748:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2748:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2729:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2729:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2719:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1426:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1437:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1449:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1457:6:12",
                "type": ""
              }
            ],
            "src": "1332:1441:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2895:210:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2941:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2950:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2958:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2943:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2943:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2943:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2916:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2925:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2912:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2912:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2937:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2908:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2905:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2976:66:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3023:9:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3034:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_CancelOfferRequest",
                      "nodeType": "YulIdentifier",
                      "src": "2986:36:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2986:56:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2976:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3051:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3084:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3095:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3080:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3080:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3061:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3061:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3051:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_OfferRequest_$1245_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2853:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2864:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2876:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2884:6:12",
                "type": ""
              }
            ],
            "src": "2778:327:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3242:620:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3252:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3266:7:12"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3275:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3262:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:23:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3256:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3310:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3319:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3327:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3312:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3312:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3312:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3301:2:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3305:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3297:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:12:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3294:2:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3362:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3371:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3379:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3364:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3364:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3364:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3352:2:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3356:4:12",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3348:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3348:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3345:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3397:23:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3417:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3411:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:9:12"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3401:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3429:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3451:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3459:4:12",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3447:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:17:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3433:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3539:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3541:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3541:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3541:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3482:10:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3494:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3479:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3479:34:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3518:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3530:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3515:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3476:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3476:62:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3473:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3577:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3581:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3570:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3570:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3608:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3629:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3616:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3601:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3601:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3660:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3668:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3656:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3656:15:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3690:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3701:2:12",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3686:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3686:18:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3673:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3673:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:57:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:57:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3726:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3734:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3722:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3722:15:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3756:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3767:2:12",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3752:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3752:18:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3739:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3739:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3715:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3715:57:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3715:57:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3781:16:12",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3791:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3781:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3806:50:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3839:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3850:4:12",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3835:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3835:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3816:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:40:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3806:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3200:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3211:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3223:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3231:6:12",
                "type": ""
              }
            ],
            "src": "3110:752:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3937:120:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3983:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3992:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4000:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3985:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3985:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3985:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3958:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3967:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3954:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3954:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3979:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3950:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3947:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4018:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4041:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4028:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4018:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3903:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3914:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3926:6:12",
                "type": ""
              }
            ],
            "src": "3867:190:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4143:113:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4189:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4198:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4206:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4191:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4191:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4191:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4164:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4173:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4160:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4160:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4185:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4156:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4156:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4153:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4224:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4240:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4234:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4224:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4109:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4120:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4132:6:12",
                "type": ""
              }
            ],
            "src": "4062:194:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4311:208:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4321:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4341:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4335:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:12:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4325:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4363:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4368:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4356:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4356:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4356:19:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4410:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4417:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4406:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4406:16:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4428:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4433:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4424:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4424:14:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4440:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4384:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:63:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4384:63:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4456:57:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4471:3:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4484:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4492:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4480:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4480:15:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4501:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4497:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4497:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4476:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4476:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4467:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4467:39:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4508:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4463:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:50:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4456:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4288:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4295:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4303:3:12",
                "type": ""
              }
            ],
            "src": "4261:258:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4588:552:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4598:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4624:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4618:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:12:12"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "4602:12:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4646:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4651:4:12",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4639:17:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4639:17:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4665:59:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "4695:12:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4713:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4718:4:12",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4677:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:47:12"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4669:4:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4733:45:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4765:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4772:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4761:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4761:16:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4755:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4755:23:12"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "4737:14:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4787:29:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4805:3:12",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4810:1:12",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:11:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4814:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4797:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:19:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4791:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4836:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4841:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4832:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4832:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulIdentifier",
                            "src": "4852:14:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4868:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4848:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4848:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4825:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4825:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4825:47:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4892:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:4:12",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4888:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4888:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4918:5:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4925:4:12",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4914:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4914:16:12"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4908:5:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4908:23:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4933:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4904:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4904:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4881:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4881:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4957:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4962:4:12",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4953:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4953:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4983:5:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4990:4:12",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4979:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4979:16:12"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4973:5:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4973:23:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4998:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4969:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4969:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4946:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4946:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4946:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5022:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5027:4:12",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5018:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5018:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5044:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5051:4:12",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5040:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5040:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5034:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5034:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5011:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5011:47:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5078:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5083:4:12",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5074:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5074:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5100:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5107:4:12",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5096:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5096:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5090:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5090:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5067:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5067:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5067:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5123:11:12",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5130:4:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5123:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_ERC20Exchange",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4565:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4572:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4580:3:12",
                "type": ""
              }
            ],
            "src": "4524:616:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5206:468:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5223:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5234:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5228:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5228:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5216:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5216:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5216:25:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5261:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5266:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5257:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5257:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5283:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5290:4:12",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5279:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5279:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5273:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5273:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5250:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5250:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5250:47:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5306:43:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5336:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5343:4:12",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5332:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5332:16:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5326:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5326:23:12"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "5310:12:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5369:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5374:4:12",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5365:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5365:14:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5381:4:12",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5358:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5358:28:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5358:28:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5395:59:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "5425:12:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5443:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5448:4:12",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5439:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "5407:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5407:47:12"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5399:4:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5474:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:4:12",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5470:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5500:5:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5507:4:12",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5496:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5496:16:12"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5490:5:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5490:23:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5523:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5528:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5519:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5519:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5532:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5515:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5515:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5486:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5486:49:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5463:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5463:73:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5463:73:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5556:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5561:4:12",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5552:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5552:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5578:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5585:4:12",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5574:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5574:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5568:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5568:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5545:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5545:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5545:47:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5612:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5617:4:12",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5608:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5608:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5634:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5641:4:12",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5630:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5630:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5624:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5624:23:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5601:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5601:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5601:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5657:11:12",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5664:4:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5657:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_ERC20Offer",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5183:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5190:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5198:3:12",
                "type": ""
              }
            ],
            "src": "5145:529:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5818:137:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5828:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5848:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5842:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5842:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5832:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5890:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5898:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5886:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5886:17:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5905:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5910:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5864:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:53:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5864:53:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5926:23:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5937:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5942:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5933:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5933:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5926:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5794:3:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5799:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5810:3:12",
                "type": ""
              }
            ],
            "src": "5679:276:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6152:62:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6169:3:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6174:6:12",
                        "type": "",
                        "value": "SELL"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6162:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6162:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6190:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6201:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:1:12",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6197:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6197:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6190:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6136:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6144:3:12",
                "type": ""
              }
            ],
            "src": "5960:254:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6411:61:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6428:3:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6433:5:12",
                        "type": "",
                        "value": "BUY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6421:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:18:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6421:18:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6448:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6459:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6464:1:12",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6455:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6448:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6395:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6403:3:12",
                "type": ""
              }
            ],
            "src": "6219:253:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6578:102:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6588:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6600:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6611:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6596:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6596:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6588:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6630:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6645:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6661:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6666:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6657:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6657:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6670:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6653:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6653:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6641:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6641:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6623:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6623:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6623:51:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6547:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6558:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6569:4:12",
                "type": ""
              }
            ],
            "src": "6477:203:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6842:218:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6852:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6864:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6875:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6860:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6860:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6852:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6887:29:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:3:12",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:1:12",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6901:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6901:11:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6914:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6897:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6897:19:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6891:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6932:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6947:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6955:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6943:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6943:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6979:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6990:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6975:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6975:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6999:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7007:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6995:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6968:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6968:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6968:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7031:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7042:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7027:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7027:18:12"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7047:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7020:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7020:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7020:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6795:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6806:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6814:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6822:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6833:4:12",
                "type": ""
              }
            ],
            "src": "6685:375:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7194:145:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7204:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7216:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7227:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7212:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7212:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7204:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7246:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7261:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7277:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7282:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7273:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7273:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7286:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7269:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7269:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7257:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7257:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7239:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7239:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7239:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7310:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7321:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7306:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7306:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7326:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7299:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7299:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7155:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7166:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7174:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7185:4:12",
                "type": ""
              }
            ],
            "src": "7065:274:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7557:649:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7567:12:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7577:2:12",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7571:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7588:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7606:9:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7617:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7602:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7602:18:12"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "7592:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7636:9:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7647:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7629:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7629:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7629:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7659:17:12",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "7670:6:12"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "7663:3:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7685:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7705:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7699:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7699:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7689:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7728:6:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7736:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7721:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7721:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7721:22:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7752:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7763:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7774:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7759:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7752:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7786:53:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7808:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7823:1:12",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7826:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7819:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7819:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7804:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7804:30:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7836:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7800:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7800:39:12"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "7790:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7848:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7866:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7874:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7862:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:15:12"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "7852:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7886:13:12",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "7895:4:12"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7890:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7957:220:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7978:3:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "7991:6:12"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7999:9:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "7987:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7987:22:12"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8015:2:12",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "8011:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8011:7:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7983:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7983:36:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7971:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7971:49:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7971:49:12"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8033:64:12",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8081:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8075:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8075:13:12"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "8090:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_ERC20Exchange",
                            "nodeType": "YulIdentifier",
                            "src": "8043:31:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8043:54:12"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "8033:6:12"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8110:25:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8124:6:12"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8132:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8120:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8120:15:12"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8110:6:12"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8148:19:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8159:3:12"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8164:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8155:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8155:12:12"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8148:3:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7919:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7922:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7916:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7916:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7930:18:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7932:14:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7941:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7944:1:12",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7937:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7937:9:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7932:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7912:3:12",
                    "statements": []
                  },
                  "src": "7908:269:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8186:14:12",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "8194:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8186:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7526:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7537:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7548:4:12",
                "type": ""
              }
            ],
            "src": "7344:862:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8418:646:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8428:12:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8438:2:12",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8432:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8449:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8467:9:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8478:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8463:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8463:18:12"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8453:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8497:9:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8508:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8490:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8490:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8490:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8520:17:12",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "8531:6:12"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "8524:3:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8546:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8566:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8560:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8560:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8550:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8589:6:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8597:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8582:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8582:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8582:22:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8613:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8624:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8635:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8620:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8620:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8613:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8647:53:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8669:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8684:1:12",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8687:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8680:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8680:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8665:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8665:30:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8697:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8661:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8661:39:12"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "8651:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8709:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8727:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8735:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8723:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8723:15:12"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8713:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8747:13:12",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "8756:4:12"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8751:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8818:217:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8839:3:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "8852:6:12"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8860:9:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8848:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8848:22:12"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8876:2:12",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "8872:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8872:7:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8844:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8844:36:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8832:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8832:49:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8832:49:12"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8894:61:12",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8939:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8933:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8933:13:12"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "8948:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_ERC20Offer",
                            "nodeType": "YulIdentifier",
                            "src": "8904:28:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8904:51:12"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "8894:6:12"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8968:25:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8982:6:12"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8990:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8978:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8978:15:12"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8968:6:12"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9006:19:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9017:3:12"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9022:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9013:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9013:12:12"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9006:3:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8780:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8783:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8777:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8777:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8791:18:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8793:14:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8802:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8805:1:12",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8798:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8798:9:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8793:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8773:3:12",
                    "statements": []
                  },
                  "src": "8769:266:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9044:14:12",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "9052:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9044:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8387:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8398:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8409:4:12",
                "type": ""
              }
            ],
            "src": "8211:853:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9243:302:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9260:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9271:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9253:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9253:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9253:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9294:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9305:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9290:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9290:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9310:2:12",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9283:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9283:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9283:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9333:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9344:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9329:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9329:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9349:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9322:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9322:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9322:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9404:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9415:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9400:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9400:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9420:34:12",
                        "type": "",
                        "value": "yingOffer: should be the same ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9393:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9475:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9486:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9471:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9471:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9492:10:12",
                        "type": "",
                        "value": "changeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9464:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9464:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9464:39:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9512:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9524:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9535:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9520:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9520:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9512:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9220:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9234:4:12",
                "type": ""
              }
            ],
            "src": "9069:476:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9724:301:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9741:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9752:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9734:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9734:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9734:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9775:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9786:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9771:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9771:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9791:2:12",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9764:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9764:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9764:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9814:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9825:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9810:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9810:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9830:34:12",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenBuy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9803:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9803:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9803:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9885:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9896:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9881:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9881:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9901:34:12",
                        "type": "",
                        "value": "ingOffer: you don't have enough "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9874:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9874:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9874:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9956:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9967:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9952:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9952:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9973:9:12",
                        "type": "",
                        "value": "balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9945:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9945:38:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9945:38:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9992:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10004:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10015:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10000:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10000:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9992:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9701:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9715:4:12",
                "type": ""
              }
            ],
            "src": "9550:475:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10204:298:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10221:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10232:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10214:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10214:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10214:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10255:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10266:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10251:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10251:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10271:2:12",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10244:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10244:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10244:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10294:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10305:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10290:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10290:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10310:34:12",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10283:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10283:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10283:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10365:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10376:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10361:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10361:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10381:34:12",
                        "type": "",
                        "value": "Offer: should be the same exchan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10354:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10354:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10354:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10436:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10447:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10432:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10432:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10453:6:12",
                        "type": "",
                        "value": "geId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10425:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10425:35:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10425:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10469:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10481:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10492:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10477:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10477:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10469:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10181:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10195:4:12",
                "type": ""
              }
            ],
            "src": "10030:472:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10681:310:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10698:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10709:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10691:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10691:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10691:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10732:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10743:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10728:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10728:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10748:2:12",
                        "type": "",
                        "value": "80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10721:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10721:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10721:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10771:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10782:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10767:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10767:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10787:34:12",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenSel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10760:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10760:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10760:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10842:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10853:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10838:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10838:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10858:34:12",
                        "type": "",
                        "value": "lingOffer: price can't be lower "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10831:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10831:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10831:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10913:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10924:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10909:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10909:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10930:18:12",
                        "type": "",
                        "value": "or equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10902:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10902:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10902:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10958:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10970:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10981:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10966:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10966:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10958:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10658:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10672:4:12",
                "type": ""
              }
            ],
            "src": "10507:484:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11170:299:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11187:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11198:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11180:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11180:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11180:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11221:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11232:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11217:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11217:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11237:2:12",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11210:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11210:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11210:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11260:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11271:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11256:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11256:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11276:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11249:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11249:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11249:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11331:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11342:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11327:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11327:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11347:34:12",
                        "type": "",
                        "value": "yingOffer: should be the buying "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11320:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11320:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11320:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11402:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11413:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11398:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11398:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11419:7:12",
                        "type": "",
                        "value": "offer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11391:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11391:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11391:36:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11436:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11448:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11459:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11444:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11444:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11436:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11147:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11161:4:12",
                "type": ""
              }
            ],
            "src": "10996:473:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11648:301:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11665:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11676:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11658:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11658:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11658:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11699:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11710:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11695:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11695:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11715:2:12",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11688:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11688:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11688:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11738:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11749:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11734:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11734:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11754:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11727:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11727:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11727:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11809:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11820:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11805:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11805:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11825:34:12",
                        "type": "",
                        "value": "llingOffer: should be the sellin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11798:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11798:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11798:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11880:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11891:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11876:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11876:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11897:9:12",
                        "type": "",
                        "value": "g offer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11869:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11869:38:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11869:38:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11916:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11928:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11939:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11924:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11924:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11916:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11625:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11639:4:12",
                "type": ""
              }
            ],
            "src": "11474:475:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12128:302:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12145:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12156:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12138:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12138:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12138:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12179:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12190:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12175:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12175:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12195:2:12",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12168:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12168:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12218:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12229:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12214:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12214:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12234:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12207:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12207:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12207:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12289:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12300:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12285:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12285:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12305:34:12",
                        "type": "",
                        "value": "yingOffer: you don't have enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12278:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12278:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12278:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12360:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12371:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12356:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12356:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12377:10:12",
                        "type": "",
                        "value": " balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12349:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12349:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12349:39:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12397:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12409:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12420:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12405:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12405:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12397:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12105:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12119:4:12",
                "type": ""
              }
            ],
            "src": "11954:476:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12609:298:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12626:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12637:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12619:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12619:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12619:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12660:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12671:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12656:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12656:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12676:2:12",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12649:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12649:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12649:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12699:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12710:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12695:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12695:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12715:34:12",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12688:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12688:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12688:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12770:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12781:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12766:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12766:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12786:34:12",
                        "type": "",
                        "value": "Offer: you don't have enough bal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12759:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12759:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12759:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12841:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12852:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12837:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12837:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12858:6:12",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12830:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12830:35:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12830:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12874:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12886:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12897:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12882:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12882:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12874:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12586:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12600:4:12",
                "type": ""
              }
            ],
            "src": "12435:472:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13086:302:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13103:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13114:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13096:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13096:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13096:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13137:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13148:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13133:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13133:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13153:2:12",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13126:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13126:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13126:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13176:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13187:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13172:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13172:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13192:34:12",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenSel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13165:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13165:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13165:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13247:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13258:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13243:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13243:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13263:34:12",
                        "type": "",
                        "value": "lingOffer: you don't have enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13318:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13329:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13314:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13314:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13335:10:12",
                        "type": "",
                        "value": " balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13307:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13307:39:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13307:39:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13355:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13367:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13378:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13363:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13363:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13355:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13063:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13077:4:12",
                "type": ""
              }
            ],
            "src": "12912:476:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13567:307:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13584:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13595:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13577:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13577:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13577:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13618:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13629:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13614:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13614:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13634:2:12",
                        "type": "",
                        "value": "77"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13607:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13607:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13607:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13657:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13668:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13653:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13653:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13673:34:12",
                        "type": "",
                        "value": "TokenExchange.CreateERC20TokenEx"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13646:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13646:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13646:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13728:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13739:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13724:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13724:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13744:34:12",
                        "type": "",
                        "value": "change: price can't be lower or "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13799:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13810:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13795:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13795:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13816:15:12",
                        "type": "",
                        "value": "equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13788:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13788:44:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13788:44:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13841:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13853:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13864:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13849:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13849:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13841:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13544:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13558:4:12",
                "type": ""
              }
            ],
            "src": "13393:481:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14053:295:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14070:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14081:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14063:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14063:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14063:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14104:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14115:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14100:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14100:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14120:2:12",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14093:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14093:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14093:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14143:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14154:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14139:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14139:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14159:34:12",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14132:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14132:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14132:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14214:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14225:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14210:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14210:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14230:34:12",
                        "type": "",
                        "value": "ffer: should be the selling offe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14203:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14203:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14203:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14285:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14296:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14281:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14281:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14302:3:12",
                        "type": "",
                        "value": "r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14274:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14274:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14274:32:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14315:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14327:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14338:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14323:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14323:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14315:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14030:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14044:4:12",
                "type": ""
              }
            ],
            "src": "13879:469:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14527:309:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14544:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14555:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14537:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14537:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14537:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14578:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14589:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14574:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14574:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14594:2:12",
                        "type": "",
                        "value": "79"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14567:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14567:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14567:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14617:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14628:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14613:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14613:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14633:34:12",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenBuy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14606:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14606:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14606:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14688:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14699:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14684:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14684:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14704:34:12",
                        "type": "",
                        "value": "ingOffer: price can't be lower o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14677:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14677:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14677:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14759:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14770:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14755:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14755:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14776:17:12",
                        "type": "",
                        "value": "r equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14748:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14748:46:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14748:46:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14803:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14815:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14826:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14811:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14811:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14803:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14504:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14518:4:12",
                "type": ""
              }
            ],
            "src": "14353:483:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15015:296:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15032:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15043:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15025:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15025:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15025:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15066:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15077:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15062:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15062:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15082:2:12",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15055:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15055:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15055:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15105:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15116:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15101:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15101:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15121:34:12",
                        "type": "",
                        "value": "TokenExchange.CreateERC20TokenEx"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15094:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15094:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15094:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15176:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15187:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15172:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15172:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15192:34:12",
                        "type": "",
                        "value": "change: Your balance is not enou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15247:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15258:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15243:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15243:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15264:4:12",
                        "type": "",
                        "value": "gh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15236:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15236:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15236:33:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15278:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15290:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15301:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15286:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15286:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15278:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14992:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15006:4:12",
                "type": ""
              }
            ],
            "src": "14841:470:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15490:297:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15507:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15518:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15500:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15500:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15500:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15541:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15552:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15537:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15537:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15557:2:12",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15530:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15530:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15530:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15580:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15591:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15576:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15576:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15596:34:12",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15569:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15569:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15569:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15651:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15662:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15647:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15647:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15667:34:12",
                        "type": "",
                        "value": "ffer: you don't have enough bala"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15640:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15640:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15640:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15722:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15733:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15718:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15718:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15739:5:12",
                        "type": "",
                        "value": "nce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15711:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15711:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15711:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15754:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15766:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15777:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15762:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15762:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15754:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15467:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15481:4:12",
                "type": ""
              }
            ],
            "src": "15316:471:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15966:249:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15983:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15994:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15976:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15976:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15976:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16017:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16028:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16013:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16013:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16033:2:12",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16006:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16006:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16006:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16056:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16067:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16052:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16052:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16072:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16045:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16045:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16045:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16127:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16138:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16123:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16123:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16143:29:12",
                        "type": "",
                        "value": "llingOffer: should be owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16116:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16116:57:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16116:57:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16182:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16194:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16205:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16190:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16190:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16182:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15943:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15957:4:12",
                "type": ""
              }
            ],
            "src": "15792:423:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16394:303:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16411:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16422:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16404:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16404:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16404:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16445:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16456:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16441:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16441:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16461:2:12",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16434:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16434:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16434:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16484:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16495:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16480:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16480:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16500:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16473:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16473:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16473:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16555:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16566:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16551:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16551:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16571:34:12",
                        "type": "",
                        "value": "llingOffer: should be the same e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16544:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16544:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16544:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16626:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16637:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16622:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16622:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16643:11:12",
                        "type": "",
                        "value": "xchangeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16615:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16615:40:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16615:40:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16664:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16676:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16687:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16672:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16672:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16664:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16371:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16385:4:12",
                "type": ""
              }
            ],
            "src": "16220:477:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16876:295:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16893:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16904:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16886:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16886:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16886:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16927:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16938:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16923:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16923:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16943:2:12",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16916:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16916:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16916:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16966:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16977:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16962:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16962:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16982:34:12",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16955:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16955:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16955:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17037:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17048:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17033:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17033:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17053:34:12",
                        "type": "",
                        "value": "Offer: should be the buying offe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17026:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17026:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17026:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17108:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17119:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17104:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17104:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17125:3:12",
                        "type": "",
                        "value": "r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17097:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17097:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17097:32:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17138:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17150:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17161:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17146:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17146:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17138:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16853:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16867:4:12",
                "type": ""
              }
            ],
            "src": "16702:469:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17350:303:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17367:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17378:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17360:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17360:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17360:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17401:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17412:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17397:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17397:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17417:2:12",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17390:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17390:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17390:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17440:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17451:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17436:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17436:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17456:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17429:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17429:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17429:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17511:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17522:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17507:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17507:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17527:34:12",
                        "type": "",
                        "value": "llingOffer: you don't have enoug"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17500:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17500:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17500:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17582:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17593:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17578:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17578:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17599:11:12",
                        "type": "",
                        "value": "h balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17571:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17571:40:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17571:40:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17620:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17632:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17643:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17628:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17628:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17620:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17327:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17341:4:12",
                "type": ""
              }
            ],
            "src": "17176:477:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17832:248:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17849:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17860:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17842:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17842:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17842:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17883:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17894:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17879:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17879:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17899:2:12",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17872:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17872:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17872:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17922:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17933:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17918:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17918:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17938:34:12",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17911:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17911:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17911:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17993:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18004:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17989:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17989:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18009:28:12",
                        "type": "",
                        "value": "yingOffer: should be owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17982:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17982:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17982:56:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18047:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18059:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18070:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18055:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18055:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18047:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17809:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17823:4:12",
                "type": ""
              }
            ],
            "src": "17658:422:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18259:297:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18276:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18287:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18269:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18269:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18269:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18310:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18321:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18306:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18306:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18326:2:12",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18299:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18299:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18299:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18349:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18360:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18345:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18345:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18365:34:12",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18338:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18338:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18338:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18420:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18431:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18416:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18416:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18436:34:12",
                        "type": "",
                        "value": "ffer: should be the same exchang"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18409:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18409:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18409:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18491:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18502:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18487:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18487:19:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18508:5:12",
                        "type": "",
                        "value": "eId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18480:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18480:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18480:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18523:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18535:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18546:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18531:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18531:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18523:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18236:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18250:4:12",
                "type": ""
              }
            ],
            "src": "18085:471:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18724:113:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18741:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18752:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18734:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18734:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18734:21:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18764:67:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18804:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18816:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18827:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18812:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18812:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC20Exchange",
                      "nodeType": "YulIdentifier",
                      "src": "18772:31:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18772:59:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18764:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20Exchange_$1204_memory_ptr__to_t_struct$_ERC20Exchange_$1204_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18693:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18704:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18715:4:12",
                "type": ""
              }
            ],
            "src": "18561:276:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18999:110:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19016:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19027:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19009:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19009:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19009:21:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19039:64:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19076:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19088:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19099:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19084:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19084:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC20Offer",
                      "nodeType": "YulIdentifier",
                      "src": "19047:28:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19047:56:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19039:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20Offer_$1217_memory_ptr__to_t_struct$_ERC20Offer_$1217_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18968:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18979:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18990:4:12",
                "type": ""
              }
            ],
            "src": "18842:267:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19215:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19225:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19237:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19248:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19233:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19233:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19225:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19267:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19278:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19260:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19260:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19260:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19184:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19195:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19206:4:12",
                "type": ""
              }
            ],
            "src": "19114:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19425:119:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19435:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19447:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19458:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19443:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19443:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19435:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19477:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19488:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19470:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19470:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19470:25:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19515:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19526:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19511:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19511:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19531:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19504:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19504:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19504:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19386:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19397:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19405:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19416:4:12",
                "type": ""
              }
            ],
            "src": "19296:248:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19595:207:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19605:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19621:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19615:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19615:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "19605:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19633:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "19655:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19663:4:12",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19651:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19651:17:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "19637:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19743:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19745:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19745:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19745:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19686:10:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19698:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "19683:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19683:34:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19722:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19734:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19719:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19719:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "19680:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19680:62:12"
                  },
                  "nodeType": "YulIf",
                  "src": "19677:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19781:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "19785:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19774:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19774:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19774:22:12"
                }
              ]
            },
            "name": "allocate_memory_3392",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19584:6:12",
                "type": ""
              }
            ],
            "src": "19549:253:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19852:230:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19862:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19878:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19872:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19872:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "19862:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19890:58:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "19912:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "19928:4:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19934:2:12",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19924:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19924:13:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19943:2:12",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "19939:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19939:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19920:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19920:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19908:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19908:40:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "19894:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20023:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "20025:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20025:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20025:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19966:10:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19978:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "19963:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19963:34:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "20002:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20014:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19999:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19999:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "19960:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19960:62:12"
                  },
                  "nodeType": "YulIf",
                  "src": "19957:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20061:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "20065:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20054:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20054:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20054:22:12"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19832:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19841:6:12",
                "type": ""
              }
            ],
            "src": "19807:275:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20139:116:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20198:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20200:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20200:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20200:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20170:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20163:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20163:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20156:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20156:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20178:1:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20189:1:12",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "20185:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20185:6:12"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20193:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "20181:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20181:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20175:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20175:21:12"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20152:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20152:45:12"
                  },
                  "nodeType": "YulIf",
                  "src": "20149:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20229:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20244:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20247:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "20240:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20240:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "20229:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20118:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20121:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "20127:7:12",
                "type": ""
              }
            ],
            "src": "20087:168:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20309:76:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20331:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20333:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20333:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20333:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20325:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20328:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20322:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20322:8:12"
                  },
                  "nodeType": "YulIf",
                  "src": "20319:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20362:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20374:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20377:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20370:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20370:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20362:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20291:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20294:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20300:4:12",
                "type": ""
              }
            ],
            "src": "20260:125:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20443:205:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20453:10:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20462:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "20457:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20522:63:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20547:3:12"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "20552:1:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20543:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20543:11:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "20566:3:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "20571:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "20562:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20562:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "20556:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20556:18:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20536:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20536:39:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20536:39:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20483:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20486:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20480:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20480:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "20494:19:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20496:15:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "20505:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20508:2:12",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "20501:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20501:10:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "20496:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "20476:3:12",
                    "statements": []
                  },
                  "src": "20472:113:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20611:31:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20624:3:12"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "20629:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20620:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20620:16:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20638:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20613:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20613:27:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20613:27:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20600:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20603:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20597:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20597:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "20594:2:12"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "20421:3:12",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "20426:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20431:6:12",
                "type": ""
              }
            ],
            "src": "20390:258:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20708:325:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20718:22:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20732:1:12",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "20735:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "20728:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20728:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "20718:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20749:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "20779:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20785:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20775:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20775:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "20753:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20826:31:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20828:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "20842:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20850:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "20838:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20838:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "20828:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "20806:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20799:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20799:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "20796:2:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20916:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20937:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "20944:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "20949:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "20940:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20940:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20930:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20930:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20930:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20981:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20984:4:12",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20974:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20974:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20974:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21009:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21012:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21002:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21002:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21002:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "20872:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "20895:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20903:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "20892:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20892:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "20869:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20869:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "20866:2:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "20688:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20697:6:12",
                "type": ""
              }
            ],
            "src": "20653:380:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21085:88:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21116:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21118:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21118:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21118:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21101:5:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21112:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "21108:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21108:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21098:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21098:17:12"
                  },
                  "nodeType": "YulIf",
                  "src": "21095:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21147:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21158:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21165:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21154:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21154:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "21147:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21067:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "21077:3:12",
                "type": ""
              }
            ],
            "src": "21038:135:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21210:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21227:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21234:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21239:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21230:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21230:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21220:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21220:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21220:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21267:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21270:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21260:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21260:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21260:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21291:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21294:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21284:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21284:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21284:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "21178:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21342:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21359:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21366:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21371:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21362:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21362:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21352:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21352:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21352:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21399:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21402:4:12",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21392:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21392:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21392:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21423:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21426:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21416:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21416:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21416:15:12"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "21310:127:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_struct_CancelOfferRequest(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(value, value) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_CancelOfferRequest_$1240_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_struct_CancelOfferRequest(headStart, dataEnd)\n        value1 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xa0) { revert(value0, value0) }\n        let value := allocate_memory_3392()\n        let offset_1 := calldataload(_2)\n        if gt(offset_1, _1) { revert(value0, value0) }\n        let _3 := add(_2, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        let _5 := 0x20\n        if gt(_4, _1) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _5))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _5), dataEnd) { revert(value0, value0) }\n        calldatacopy(add(array, _5), add(_3, _5), _4)\n        mstore(add(add(array, _4), _5), value0)\n        mstore(value, array)\n        mstore(add(value, _5), abi_decode_address(add(_2, _5)))\n        mstore(add(value, 64), abi_decode_address(add(_2, 64)))\n        mstore(add(value, 96), calldataload(add(_2, 96)))\n        mstore(add(value, 128), calldataload(add(_2, 128)))\n        value0 := value\n        value1 := abi_decode_address(add(headStart, _5))\n    }\n    function abi_decode_tuple_t_struct$_OfferRequest_$1245_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_struct_CancelOfferRequest(headStart, dataEnd)\n        value1 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 128) { revert(value0, value0) }\n        if slt(_1, 0x60) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n        value0 := memPtr\n        value1 := abi_decode_address(add(headStart, 0x60))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_ERC20Exchange(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        let memberValue0_1 := mload(add(value, 0x20))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(pos, 0x20), and(memberValue0_1, _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        end := tail\n    }\n    function abi_encode_struct_ERC20Offer(value, pos) -> end\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        let memberValue0 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        end := tail\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"SELL\")\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"BUY\")\n        end := add(pos, 3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_ERC20Exchange(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_ERC20Offer(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be the same ex\")\n        mstore(add(headStart, 128), \"changeId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenBuy\")\n        mstore(add(headStart, 96), \"ingOffer: you don't have enough \")\n        mstore(add(headStart, 128), \"balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: should be the same exchan\")\n        mstore(add(headStart, 128), \"geId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenSel\")\n        mstore(add(headStart, 96), \"lingOffer: price can't be lower \")\n        mstore(add(headStart, 128), \"or equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be the buying \")\n        mstore(add(headStart, 128), \"offer\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be the sellin\")\n        mstore(add(headStart, 128), \"g offer\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: you don't have enough\")\n        mstore(add(headStart, 128), \" balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: you don't have enough bal\")\n        mstore(add(headStart, 128), \"ance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenSel\")\n        mstore(add(headStart, 96), \"lingOffer: you don't have enough\")\n        mstore(add(headStart, 128), \" balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"TokenExchange.CreateERC20TokenEx\")\n        mstore(add(headStart, 96), \"change: price can't be lower or \")\n        mstore(add(headStart, 128), \"equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: should be the selling offe\")\n        mstore(add(headStart, 128), \"r\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 79)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenBuy\")\n        mstore(add(headStart, 96), \"ingOffer: price can't be lower o\")\n        mstore(add(headStart, 128), \"r equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TokenExchange.CreateERC20TokenEx\")\n        mstore(add(headStart, 96), \"change: Your balance is not enou\")\n        mstore(add(headStart, 128), \"gh\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: you don't have enough bala\")\n        mstore(add(headStart, 128), \"nce\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be the same e\")\n        mstore(add(headStart, 128), \"xchangeId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: should be the buying offe\")\n        mstore(add(headStart, 128), \"r\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: you don't have enoug\")\n        mstore(add(headStart, 128), \"h balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: should be the same exchang\")\n        mstore(add(headStart, 128), \"eId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_struct$_ERC20Exchange_$1204_memory_ptr__to_t_struct$_ERC20Exchange_$1204_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_ERC20Exchange(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_ERC20Offer_$1217_memory_ptr__to_t_struct$_ERC20Offer_$1217_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_ERC20Offer(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function allocate_memory_3392() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "180:13213:1:-:0;;;2365:87;;;;;;;;;-1:-1:-1;2412:1:1;2390:23;;;2424:16;:20;180:13213;;;;;;",
  "deployedSourceMap": "180:13213:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:303;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:99;2681:16;;2606:99;;;19260:25:12;;;19248:2;19233:18;2606:99:1;19215:76:12;8094:1095:1;;;;;;:::i;:::-;;:::i;:::-;;3024:273;;;:::i;:::-;;;;;;;:::i;9361:1063::-;;;;;;:::i;:::-;;:::i;5594:1060::-;;;;;;:::i;:::-;;:::i;3305:145::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10585:1305::-;;;;;;:::i;:::-;;:::i;3458:130::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6880:1039::-;;;;;;:::i;:::-;;:::i;3916:1460::-;;;;;;:::i;:::-;;:::i;12056:1334::-;;;;;;:::i;:::-;;:::i;2493:105::-;2548:4;2571:19;2493:105;;2713:303;2766:22;2800:32;2855:19;;2835:40;;;;;;-1:-1:-1;;;2835:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2800:75:1;-1:-1:-1;2899:1:1;2886:95;2907:19;;2902:1;:24;2886:95;;2963:18;;;;:15;:18;;;;;;;2946:35;;;;;;;;;;;;2963:18;;2946:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2946:35:1;;;-1:-1:-1;;2946:35:1;;;;;-1:-1:-1;;;;;2946:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;2956:3;;:1;:3;:::i;:::-;2946:14;;;;;;-1:-1:-1;;;2946:14:1;;;;;;;;;;;;;;:35;;;;2928:3;;;;;:::i;:::-;;;;2886:95;;;-1:-1:-1;2999:9:1;2713:303;-1:-1:-1;2713:303:1:o;8094:1095::-;8199:23;8225:12;:27;8238:5;:13;;;8225:27;;;;;;;;;;;8199:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8199:53:1;;;-1:-1:-1;;8199:53:1;;;;;-1:-1:-1;;;;;8199:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8301:16;;8199:53;8285:33;;;:15;:33;;;;;;;:51;;8356:20;;;;8199:53;;-1:-1:-1;8285:51:1;;;8356:30;;;;;;8348:101;;;;-1:-1:-1;;;8348:101:1;;17860:2:12;8348:101:1;;;17842:21:12;17899:2;17879:18;;;17872:30;-1:-1:-1;;;;;;;;;;;17918:18:12;;;17911:62;18009:28;17989:18;;;17982:56;18055:19;;8348:101:1;;;;;;;;;8488:16;;8468;;:36;8460:121;;;;-1:-1:-1;;;8460:121:1;;9271:2:12;8460:121:1;;;9253:21:12;9310:2;9290:18;;;9283:30;-1:-1:-1;;;;;;;;;;;9329:18:12;;;9322:62;9420:34;9400:18;;;9393:62;-1:-1:-1;;;9471:19:12;;;9464:39;9520:19;;8460:121:1;9243:302:12;8460:121:1;8672:23;;-1:-1:-1;;;8672:23:1;;;6421:18:12;6455:11;;8672:23:1;;;;;;;;;;;;8662:34;;;;;;8641:5;:15;;;8624:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;8614:44;;;;;;:82;8592:202;;;;-1:-1:-1;;;8592:202:1;;11198:2:12;8592:202:1;;;11180:21:12;11237:2;11217:18;;;11210:30;-1:-1:-1;;;;;;;;;;;11256:18:12;;;11249:62;11347:34;11327:18;;;11320:62;-1:-1:-1;;;11398:19:12;;;11391:36;11444:19;;8592:202:1;11170:299:12;8592:202:1;8878:5;:12;;;8864:5;:11;;;:26;;;;:::i;:::-;8829:30;;-1:-1:-1;;;8829:30:1;;8853:4;8829:30;;;6623:51:12;-1:-1:-1;;;;;8829:15:1;;;;;6596:18:12;;8829:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;8807:184;;;;-1:-1:-1;;;8807:184:1;;12156:2:12;8807:184:1;;;12138:21:12;12195:2;12175:18;;;12168:30;-1:-1:-1;;;;;;;;;;;12214:18:12;;;12207:62;12305:34;12285:18;;;12278:62;-1:-1:-1;;;12356:19:12;;;12349:39;12405:19;;8807:184:1;12128:302:12;8807:184:1;9012:5;-1:-1:-1;;;;;9012:14:1;;9027:6;9049:5;:12;;;9035:5;:11;;;:26;;;;:::i;:::-;9012:50;;-1:-1:-1;;;;;;9012:50:1;;;;;;;-1:-1:-1;;;;;7257:32:12;;;9012:50:1;;;7239:51:12;7306:18;;;7299:34;7212:18;;9012:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9105:13:1;;;;;9092:27;;;;:12;:27;;;;;;9085:34;;;;;;;;;9092:27;9085:34;;;;9092:27;9085:34;:::i;:::-;-1:-1:-1;9085:34:1;;;;;-1:-1:-1;;;;;;9085:34:1;;;-1:-1:-1;9085:34:1;;;;;;;;;;;9167:13;;;;;9137:44;;19260:25:12;;;9137:44:1;;19233:18:12;9137:44:1;;;;;;;;8094:1095;;;;:::o;3024:273::-;3074:19;3105:26;3151:16;;3134:34;;;;;;-1:-1:-1;;;3134:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;3105:63:1;-1:-1:-1;3192:1:1;3179:86;3200:16;;3195:1;:21;3179:86;;3250:12;:15;3263:1;3250:15;;;;;;;;;;;3236:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3236:29:1;;;-1:-1:-1;;3236:29:1;;;;-1:-1:-1;;;;;3236:29:1;;;;;;;;;;;;;;;;;;;;;;;:6;3243:3;3236:29;3243:1;:3;:::i;:::-;3236:11;;;;;;-1:-1:-1;;;3236:11:1;;;;;;;;;;;;;;:29;;;;3218:3;;;;;:::i;:::-;;;;3179:86;;9361:1063;9467:23;9493:12;:27;9506:5;:13;;;9493:27;;;;;;;;;;;9467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9467:53:1;;;-1:-1:-1;;9467:53:1;;;;-1:-1:-1;;;;;9467:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9569:16;;9467:53;9553:33;;;:15;:33;;;;;;;;:54;;;;9627:20;;;;9467:53;;-1:-1:-1;9553:54:1;;;9627:30;;;;;;9619:102;;;;-1:-1:-1;;;9619:102:1;;15994:2:12;9619:102:1;;;15976:21:12;16033:2;16013:18;;;16006:30;-1:-1:-1;;;;;;;;;;;16052:18:12;;;16045:62;16143:29;16123:18;;;16116:57;16190:19;;9619:102:1;15966:249:12;9619:102:1;9760:16;;9740;;:36;9732:122;;;;-1:-1:-1;;;9732:122:1;;16422:2:12;9732:122:1;;;16404:21:12;16461:2;16441:18;;;16434:30;-1:-1:-1;;;;;;;;;;;16480:18:12;;;16473:62;16571:34;16551:18;;;16544:62;-1:-1:-1;;;16622:19:12;;;16615:40;16672:19;;9732:122:1;16394:303:12;9732:122:1;9945:24;;-1:-1:-1;;;9945:24:1;;;6162:19:12;6197:11;;9945:24:1;;;;;;;;;;;;9935:35;;;;;;9914:5;:15;;;9897:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;9887:44;;;;;;:83;9865:205;;;;-1:-1:-1;;;9865:205:1;;11676:2:12;9865:205:1;;;11658:21:12;11715:2;11695:18;;;11688:30;-1:-1:-1;;;;;;;;;;;11734:18:12;;;11727:62;11825:34;11805:18;;;11798:62;-1:-1:-1;;;11876:19:12;;;11869:38;11924:19;;9865:205:1;11648:301:12;9865:205:1;10137:12;;;;10103:30;;-1:-1:-1;;;10103:30:1;;10127:4;10103:30;;;6623:51:12;-1:-1:-1;;;;;10103:15:1;;;;;6596:18:12;;10103:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;10081:170;;;;-1:-1:-1;;;10081:170:1;;17378:2:12;10081:170:1;;;17360:21:12;17417:2;17397:18;;;17390:30;-1:-1:-1;;;;;;;;;;;17436:18:12;;;17429:62;17527:34;17507:18;;;17500:62;-1:-1:-1;;;17578:19:12;;;17571:40;17628:19;;10081:170:1;17350:303:12;10081:170:1;10295:12;;;;10272:36;;-1:-1:-1;;;10272:36:1;;-1:-1:-1;;;;;7257:32:12;;;10272:36:1;;;7239:51:12;7306:18;;;7299:34;;;;10272:14:1;;;;;;7212:18:12;;10272:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10339:13:1;;;;;10326:27;;;;:12;:27;;;;;;10319:34;;;;;;;;;10326:27;10319:34;;;;10326:27;10319:34;:::i;:::-;-1:-1:-1;10319:34:1;;;;;-1:-1:-1;;;;;;10319:34:1;;;-1:-1:-1;10319:34:1;;;;;;;;;;;10402:13;;;;;10371:45;;19260:25:12;;;10371:45:1;;19233:18:12;10371:45:1;19215:76:12;5594:1060:1;5746:16;;5708:12;5730:33;;;:15;:33;;;;;;;;;:51;;;5857:12;;;;5843:11;;;;-1:-1:-1;;;;;5730:51:1;;;;5843:26;;;:::i;:::-;5815:23;;-1:-1:-1;;;5815:23:1;;-1:-1:-1;;;;;6641:32:12;;;5815:23:1;;;6623:51:12;5815:15:1;;;;;6596:18:12;;5815:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;5793:177;;;;-1:-1:-1;;;5793:177:1;;9752:2:12;5793:177:1;;;9734:21:12;9791:2;9771:18;;;9764:30;9830:34;9810:18;;;9803:62;9901:34;9881:18;;;9874:62;-1:-1:-1;;;9952:19:12;;;9945:38;10000:19;;5793:177:1;9724:301:12;5793:177:1;6003:1;5989:5;:11;;;:15;5981:107;;;;-1:-1:-1;;;5981:107:1;;14555:2:12;5981:107:1;;;14537:21:12;14594:2;14574:18;;;14567:30;14633:34;14613:18;;;14606:62;14704:34;14684:18;;;14677:62;-1:-1:-1;;;14755:19:12;;;14748:46;14811:19;;5981:107:1;14527:309:12;5981:107:1;6101:5;-1:-1:-1;;;;;6101:18:1;;6120:6;6136:4;6157:5;:12;;;6143:5;:11;;;:26;;;;:::i;:::-;6101:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6243:23;;:::i;:::-;6296:16;;6277:35;;6323:23;;;;;;;;;;;-1:-1:-1;;;6323:23:1;;;;;;;;:15;;;:23;;;;-1:-1:-1;;;;;6357:29:1;;:20;;;:29;6412:12;;;6397;;;:27;6449:11;;;6435;;;:25;6473:16;:18;;;6296:16;6473:18;;;:::i;:::-;;;;-1:-1:-1;;6518:16:1;;;6502:13;;;;:32;;;6545:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;6502:5;;6545:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;6545:38:1;;;;;;;;;-1:-1:-1;;;;;;6545:38:1;-1:-1:-1;;;;;6545:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6629:16:1;6601:45;;19260:25:12;;;6601:45:1;;19248:2:12;19233:18;6601:45:1;19215:76:12;3305:145:1;3375:20;;:::i;:::-;3414:28;;;;:15;:28;;;;;;;3407:35;;;;;;;;;;;;3414:28;;3407:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3407:35:1;;;-1:-1:-1;;3407:35:1;;;;-1:-1:-1;;;;;3407:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:145;-1:-1:-1;;3305:145:1:o;10585:1305::-;10679:23;10705:12;:27;10718:5;:13;;;10705:27;;;;;;;;;;;10679:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10679:53:1;;;-1:-1:-1;;10679:53:1;;;;;-1:-1:-1;;;;;10679:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10786:16;;10679:53;10770:33;;;:15;:33;;;;;;;:51;;;;10879:16;;10863:33;;;;;;:54;;;;10959:16;;10939;;10679:53;;-1:-1:-1;10770:51:1;;;;10863:54;;;10939:36;10931:116;;;;-1:-1:-1;;;10931:116:1;;18287:2:12;10931:116:1;;;18269:21:12;18326:2;18306:18;;;18299:30;18365:34;18345:18;;;18338:62;18436:34;18416:18;;;18409:62;-1:-1:-1;;;18487:19:12;;;18480:34;18531:19;;10931:116:1;18259:297:12;10931:116:1;11138:24;;-1:-1:-1;;;11138:24:1;;;6162:19:12;6197:11;;11138:24:1;;;;;;;;;;;;11128:35;;;;;;11107:5;:15;;;11090:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;11080:44;;;;;;:83;11058:199;;;;-1:-1:-1;;;11058:199:1;;14081:2:12;11058:199:1;;;14063:21:12;14120:2;14100:18;;;14093:30;14159:34;14139:18;;;14132:62;14230:34;14210:18;;;14203:62;-1:-1:-1;;;14281:19:12;;;14274:32;14323:19;;11058:199:1;14053:295:12;11058:199:1;11337:5;:12;;;11323:5;:11;;;:26;;;;:::i;:::-;11290:28;;-1:-1:-1;;;11290:28:1;;-1:-1:-1;;;;;6641:32:12;;;11290:28:1;;;6623:51:12;11290:20:1;;;;;6596:18:12;;11290:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;11268:177;;;;-1:-1:-1;;;11268:177:1;;;;;;;:::i;:::-;11522:12;;;;11480:38;;-1:-1:-1;;;11480:38:1;;11512:4;11480:38;;;6623:51:12;-1:-1:-1;;;;;11480:23:1;;;;;6596:18:12;;11480:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;11458:171;;;;-1:-1:-1;;;11458:171:1;;;;;;;:::i;:::-;11642:10;-1:-1:-1;;;;;11642:23:1;;11666:6;11674:5;:20;;;11710:5;:12;;;11696:5;:11;;;:26;;;;:::i;:::-;11642:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11766:12:1;;;;11735:44;;-1:-1:-1;;;11735:44:1;;-1:-1:-1;;;;;7257:32:12;;;11735:44:1;;;7239:51:12;7306:18;;;7299:34;;;;11735:22:1;;;;;;7212:18:12;;11735:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11810:13:1;;;;;11797:27;;;;:12;:27;;;;;;11790:34;;;;;;;;;11797:27;11790:34;;;;11797:27;11790:34;:::i;:::-;-1:-1:-1;11790:34:1;;;;;-1:-1:-1;;;;;;11790:34:1;;;-1:-1:-1;11790:34:1;;;;;;;;;;;11868:13;;;;;11842:40;;19260:25:12;;;11842:40:1;;19233:18:12;11842:40:1;;;;;;;;10585:1305;;;;;:::o;3458:130::-;3522:17;;:::i;:::-;3558:12;:22;3571:8;3558:22;;;;;;;;;;;3551:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3551:29:1;;;-1:-1:-1;;3551:29:1;;;;-1:-1:-1;;;;;3551:29:1;;;;;;;;;;;;;;;;;;;;;;;;3458:130;-1:-1:-1;;3458:130:1:o;6880:1039::-;7033:16;;6995:12;7017:33;;;:15;:33;;;;;;;;;:54;;;;7132:12;;;;7105:23;;-1:-1:-1;;;7105:23:1;;-1:-1:-1;;;;;6641:32:12;;;7105:23:1;;;6623:51:12;7017:54:1;;;;7132:12;7017:54;;7105:15;;6596:18:12;;7105:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;7083:162;;;;-1:-1:-1;;;7083:162:1;;13114:2:12;7083:162:1;;;13096:21:12;13153:2;13133:18;;;13126:30;13192:34;13172:18;;;13165:62;13263:34;13243:18;;;13236:62;-1:-1:-1;;;13314:19:12;;;13307:39;13363:19;;7083:162:1;13086:302:12;7083:162:1;7278:1;7264:5;:11;;;:15;7256:108;;;;-1:-1:-1;;;7256:108:1;;10709:2:12;7256:108:1;;;10691:21:12;10748:2;10728:18;;;10721:30;10787:34;10767:18;;;10760:62;10858:34;10838:18;;;10831:62;-1:-1:-1;;;10909:19:12;;;10902:47;10966:19;;7256:108:1;10681:310:12;7256:108:1;7419:12;;;;7377:55;;-1:-1:-1;;;7377:55:1;;-1:-1:-1;;;;;7377:18:1;;;;;:55;;7396:6;;7412:4;;7419:12;7377:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7506:23;;:::i;:::-;7559:16;;7540:35;;7586:24;;;;;;;;;;;-1:-1:-1;;;7586:24:1;;;;;;;;:15;;;:24;;;;-1:-1:-1;;;;;7621:29:1;;:20;;;:29;7676:12;;;7661;;;:27;7713:11;;;7699;;;:25;7737:16;:18;;;7559:16;7737:18;;;:::i;:::-;;;;-1:-1:-1;;7782:16:1;;;7766:13;;;;:32;;;7809:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;7766:5;;7809:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;7809:38:1;;;;;;;;;-1:-1:-1;;;;;;7809:38:1;-1:-1:-1;;;;;7809:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7894:16:1;7865:46;;19260:25:12;;;7865:46:1;;19248:2:12;19233:18;7865:46:1;19215:76:12;3916:1460:1;4054:26;;;;4127:12;;;;4100:23;;-1:-1:-1;;;4100:23:1;;-1:-1:-1;;;;;6641:32:12;;;4100:23:1;;;6623:51:12;4100:15:1;;;;;6596:18:12;;4100:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;4092:118;;;;-1:-1:-1;;;4092:118:1;;15043:2:12;4092:118:1;;;15025:21:12;15082:2;15062:18;;;15055:30;15121:34;15101:18;;;15094:62;15192:34;15172:18;;;15165:62;-1:-1:-1;;;15243:19:12;;;15236:33;15286:19;;4092:118:1;15015:296:12;4092:118:1;4243:1;4229:5;:11;;;:15;4221:105;;;;-1:-1:-1;;;4221:105:1;;13595:2:12;4221:105:1;;;13577:21:12;13634:2;13614:18;;;13607:30;13673:34;13653:18;;;13646:62;13744:34;13724:18;;;13717:62;-1:-1:-1;;;13795:19:12;;;13788:44;13849:19;;4221:105:1;13567:307:12;4221:105:1;4389:12;;;;4347:55;;-1:-1:-1;;;4347:55:1;;-1:-1:-1;;;;;4347:18:1;;;;;:55;;4366:6;;4382:4;;4389:12;4347:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4489:29;;:::i;:::-;4553:18;;4529:42;;-1:-1:-1;;;;;4582:32:1;;;:23;;;;:32;;;;4657:26;;;4625:58;;:29;;;;:58;;;;4723:23;;;4694:52;:26;;;;:52;;;;4782:12;;;4757:22;;;;:37;;;;4822:11;;;4805:14;;;:28;4553:18;4847:21;;;4553:18;4847:21;;;:::i;:::-;;;;-1:-1:-1;;4879:36:1;4895:19;;4879:36;;:15;:36;;;;;;;;:47;;;;4918:8;;4879:47;;:36;;:47;;;;:::i;:::-;-1:-1:-1;4879:47:1;;;;;;;;;-1:-1:-1;;;;;4879:47:1;;;-1:-1:-1;;;;;;4879:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4939:23;;:::i;:::-;4992:19;;;4973:38;;5022:24;;;;;;;;;;;-1:-1:-1;;;5022:24:1;;;;:15;;;:24;-1:-1:-1;;;;;5057:29:1;;:20;;;;:29;;;;5112:12;;;5097;;;:27;5149:14;;;;;5135:11;;;:28;5176:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;5221:16:1;;;5205:13;;;;:32;;;5248:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;5205:5;;5248:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;5248:38:1;;;;;;;;;-1:-1:-1;;;;;;5248:38:1;-1:-1:-1;;;;;5248:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5330:19:1;-1:-1:-1;5351:16:1;5304:64;;;19470:25:12;;;19526:2;19511:18;;19504:34;;;;5304:64:1;;19443:18:12;5304:64:1;19425:119:12;12056:1334:1;12151:23;12177:12;:27;12190:5;:13;;;12177:27;;;;;;;;;;;12151:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12151:53:1;;;-1:-1:-1;;12151:53:1;;;;;-1:-1:-1;;;;;12151:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:16;;12151:53;12242:33;;;:15;:33;;;;;;;:51;;;;12351:16;;12335:33;;;;;;:54;;;;12431:16;;12411;;12151:53;;-1:-1:-1;12242:51:1;;;;12335:54;;;12411:36;12403:117;;;;-1:-1:-1;;;12403:117:1;;10232:2:12;12403:117:1;;;10214:21:12;10271:2;10251:18;;;10244:30;;;10310:34;10290:18;;;10283:62;10381:34;10361:18;;;10354:62;-1:-1:-1;;;10432:19:12;;;10425:35;10477:19;;12403:117:1;10204:298:12;12403:117:1;12611:23;;-1:-1:-1;;;12611:23:1;;;6421:18:12;6455:11;;12611:23:1;;;;;;;;;;;;12601:34;;;;;;12580:5;:15;;;12563:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;12553:44;;;;;;:82;12531:198;;;;-1:-1:-1;;;12531:198:1;;16904:2:12;12531:198:1;;;16886:21:12;16943:2;16923:18;;;16916:30;16982:34;16962:18;;;16955:62;17053:34;17033:18;;;17026:62;-1:-1:-1;;;17104:19:12;;;17097:32;17146:19;;12531:198:1;16876:295:12;12531:198:1;12816:5;:12;;;12802:5;:11;;;:26;;;;:::i;:::-;12762:35;;-1:-1:-1;;;12762:35:1;;12791:4;12762:35;;;6623:51:12;-1:-1:-1;;;;;12762:20:1;;;;;6596:18:12;;12762:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;12740:185;;;;-1:-1:-1;;;12740:185:1;;;;;;;:::i;:::-;13009:12;;;;12984:20;;;;12960:45;;-1:-1:-1;;;12960:45:1;;-1:-1:-1;;;;;6641:32:12;;;12960:45:1;;;6623:51:12;12960:23:1;;;;;;6596:18:12;;12960:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;12938:179;;;;-1:-1:-1;;;12938:179:1;;;;;;;:::i;:::-;13130:10;-1:-1:-1;;;;;13130:19:1;;13150:5;:20;;;13186:5;:12;;;13172:5;:11;;;:26;;;;:::i;:::-;13130:69;;-1:-1:-1;;;;;;13130:69:1;;;;;;;-1:-1:-1;;;;;7257:32:12;;;13130:69:1;;;7239:51:12;7306:18;;;7299:34;7212:18;;13130:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13238:20:1;;;;13268:12;;;;13211:70;;-1:-1:-1;;;13211:70:1;;-1:-1:-1;;;;;13211:26:1;;;;;:70;;13260:6;;13268:12;13211:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13312:13:1;;;;;13299:27;;;;:12;:27;;;;;;13292:34;;;;;;;;;13299:27;13292:34;;;;13299:27;13292:34;:::i;:::-;-1:-1:-1;13292:34:1;;;;;-1:-1:-1;;;;;;13292:34:1;;;-1:-1:-1;13292:34:1;;;;;;;;;;;13368:13;;;;;13344:38;;19260:25:12;;;13344:38:1;;19233:18:12;13344:38:1;19215:76:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:12;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:495::-;257:5;305:4;293:9;288:3;284:19;280:30;277:2;;;327:5;320;313:20;277:2;364:4;358:11;408:4;400:6;396:17;479:6;467:10;464:22;443:18;431:10;428:34;425:62;422:2;;;490:18;;:::i;:::-;526:4;519:24;591:23;;576:39;;676:2;661:18;;;648:32;631:15;;;624:57;;;;-1:-1:-1;561:6:12;267:420;-1:-1:-1;267:420:12:o;692:297::-;759:6;812:2;800:9;791:7;787:23;783:32;780:2;;;833:6;825;818:22;780:2;870:9;864:16;923:5;916:13;909:21;902:5;899:32;889:2;;950:6;942;935:22;889:2;978:5;770:219;-1:-1:-1;;;770:219:12:o;994:333::-;1098:6;1106;1159:2;1147:9;1138:7;1134:23;1130:32;1127:2;;;1180:6;1172;1165:22;1127:2;1208:56;1256:7;1245:9;1208:56;:::i;:::-;1198:66;;1283:38;1317:2;1306:9;1302:18;1283:38;:::i;:::-;1273:48;;1117:210;;;;;:::o;1332:1441::-;1449:6;1457;1510:2;1498:9;1489:7;1485:23;1481:32;1478:2;;;1531:6;1523;1516:22;1478:2;1576:9;1563:23;1605:18;1646:2;1638:6;1635:14;1632:2;;;1667:6;1659;1652:22;1632:2;1695:22;;;;1751:4;1733:16;;;1729:27;1726:2;;;1774:6;1766;1759:22;1726:2;1805:22;;:::i;:::-;1865:2;1852:16;1893:2;1883:8;1880:16;1877:2;;;1914:6;1906;1899:22;1877:2;1942:17;;1990:4;1982:13;;1978:27;-1:-1:-1;1968:2:12;;2024:6;2016;2009:22;1968:2;2065;2052:16;2087:4;2110:2;2106;2103:10;2100:2;;;2116:18;;:::i;:::-;2158:53;2201:2;2182:13;;-1:-1:-1;;2178:27:12;2174:36;;2158:53;:::i;:::-;2145:66;;2234:2;2227:5;2220:17;2274:7;2269:2;2264;2260;2256:11;2252:20;2249:33;2246:2;;;2300:6;2292;2285:22;2246:2;2360;2355;2351;2347:11;2342:2;2335:5;2331:14;2318:45;2404:6;2399:2;2394;2387:5;2383:14;2379:23;2372:39;2434:5;2427;2420:20;2472:31;2499:2;2495;2491:11;2472:31;:::i;:::-;2467:2;2460:5;2456:14;2449:55;2536:31;2563:2;2559;2555:11;2536:31;:::i;:::-;2531:2;2524:5;2520:14;2513:55;2621:2;2617;2613:11;2600:25;2595:2;2588:5;2584:14;2577:49;2680:3;2676:2;2672:12;2659:26;2653:3;2646:5;2642:15;2635:51;2705:5;2695:15;;2729:38;2763:2;2752:9;2748:18;2729:38;:::i;:::-;2719:48;;;;;;;;1468:1305;;;;;:::o;2778:327::-;2876:6;2884;2937:2;2925:9;2916:7;2912:23;2908:32;2905:2;;;2958:6;2950;2943:22;3110:752;3223:6;3231;3275:9;3266:7;3262:23;3305:3;3301:2;3297:12;3294:2;;;3327:6;3319;3312:22;3294:2;3356:4;3352:2;3348:13;3345:2;;;3379:6;3371;3364:22;3345:2;;3417;3411:9;3459:4;3451:6;3447:17;3530:6;3518:10;3515:22;3494:18;3482:10;3479:34;3476:62;3473:2;;;3541:18;;:::i;:::-;3577:2;3570:22;;;3616:23;;3601:39;;3701:2;3686:18;;;3673:32;3656:15;;;3649:57;3752:18;;;3739:32;3722:15;;;3715:57;3608:6;-1:-1:-1;3816:40:12;3850:4;3835:20;;3816:40;:::i;3867:190::-;3926:6;3979:2;3967:9;3958:7;3954:23;3950:32;3947:2;;;4000:6;3992;3985:22;3947:2;-1:-1:-1;4028:23:12;;3937:120;-1:-1:-1;3937:120:12:o;4062:194::-;4132:6;4185:2;4173:9;4164:7;4160:23;4156:32;4153:2;;;4206:6;4198;4191:22;4153:2;-1:-1:-1;4234:16:12;;4143:113;-1:-1:-1;4143:113:12:o;4261:258::-;4303:3;4341:5;4335:12;4368:6;4363:3;4356:19;4384:63;4440:6;4433:4;4428:3;4424:14;4417:4;4410:5;4406:16;4384:63;:::i;:::-;4501:2;4480:15;-1:-1:-1;;4476:29:12;4467:39;;;;4508:4;4463:50;;4311:208;-1:-1:-1;;4311:208:12:o;4524:616::-;4580:3;4624:5;4618:12;4651:4;4646:3;4639:17;4677:47;4718:4;4713:3;4709:14;4695:12;4677:47;:::i;:::-;4665:59;;4772:4;4765:5;4761:16;4755:23;4814:1;4810;4805:3;4801:11;4797:19;4868:2;4852:14;4848:23;4841:4;4836:3;4832:14;4825:47;4933:2;4925:4;4918:5;4914:16;4908:23;4904:32;4897:4;4892:3;4888:14;4881:56;4998:2;4990:4;4983:5;4979:16;4973:23;4969:32;4962:4;4957:3;4953:14;4946:56;;;5051:4;5044:5;5040:16;5034:23;5027:4;5022:3;5018:14;5011:47;5107:4;5100:5;5096:16;5090:23;5083:4;5078:3;5074:14;5067:47;5130:4;5123:11;;;4588:552;;;;:::o;5145:529::-;5234:5;5228:12;5223:3;5216:25;5290:4;5283:5;5279:16;5273:23;5266:4;5261:3;5257:14;5250:47;5198:3;5343:4;5336:5;5332:16;5326:23;5381:4;5374;5369:3;5365:14;5358:28;5407:47;5448:4;5443:3;5439:14;5425:12;5407:47;:::i;:::-;5507:4;5496:16;;;5490:23;-1:-1:-1;;;;;5486:49:12;5470:14;;;5463:73;5585:4;5574:16;;;5568:23;5552:14;;;5545:47;5523:3;5630:16;;;5624:23;5608:14;;;;5601:47;;;;-1:-1:-1;5395:59:12;5206:468;-1:-1:-1;5206:468:12:o;5679:276::-;5810:3;5848:6;5842:13;5864:53;5910:6;5905:3;5898:4;5890:6;5886:17;5864:53;:::i;:::-;5933:16;;;;;5818:137;-1:-1:-1;;5818:137:12:o;6685:375::-;-1:-1:-1;;;;;6943:15:12;;;6925:34;;6995:15;;;;6990:2;6975:18;;6968:43;7042:2;7027:18;;7020:34;;;;6875:2;6860:18;;6842:218::o;7344:862::-;7548:4;7577:2;7617;7606:9;7602:18;7647:2;7636:9;7629:21;7670:6;7705;7699:13;7736:6;7728;7721:22;7774:2;7763:9;7759:18;7752:25;;7836:2;7826:6;7823:1;7819:14;7808:9;7804:30;7800:39;7786:53;;7874:2;7866:6;7862:15;7895:4;7908:269;7922:6;7919:1;7916:13;7908:269;;;8015:2;8011:7;7999:9;7991:6;7987:22;7983:36;7978:3;7971:49;8043:54;8090:6;8081;8075:13;8043:54;:::i;:::-;8033:64;-1:-1:-1;8155:12:12;;;;8120:15;;;;7944:1;7937:9;7908:269;;;-1:-1:-1;8194:6:12;;7557:649;-1:-1:-1;;;;;;;7557:649:12:o;8211:853::-;8409:4;8438:2;8478;8467:9;8463:18;8508:2;8497:9;8490:21;8531:6;8566;8560:13;8597:6;8589;8582:22;8635:2;8624:9;8620:18;8613:25;;8697:2;8687:6;8684:1;8680:14;8669:9;8665:30;8661:39;8647:53;;8735:2;8727:6;8723:15;8756:4;8769:266;8783:6;8780:1;8777:13;8769:266;;;8876:2;8872:7;8860:9;8852:6;8848:22;8844:36;8839:3;8832:49;8904:51;8948:6;8939;8933:13;8904:51;:::i;:::-;8894:61;-1:-1:-1;9013:12:12;;;;8978:15;;;;8805:1;8798:9;8769:266;;12435:472;12637:2;12619:21;;;12676:2;12656:18;;;12649:30;12715:34;12710:2;12695:18;;12688:62;12786:34;12781:2;12766:18;;12759:62;-1:-1:-1;;;12852:3:12;12837:19;;12830:35;12897:3;12882:19;;12609:298::o;15316:471::-;15518:2;15500:21;;;15557:2;15537:18;;;15530:30;15596:34;15591:2;15576:18;;15569:62;15667:34;15662:2;15647:18;;15640:62;-1:-1:-1;;;15733:3:12;15718:19;;15711:34;15777:3;15762:19;;15490:297::o;18561:276::-;18752:2;18741:9;18734:21;18715:4;18772:59;18827:2;18816:9;18812:18;18804:6;18772:59;:::i;18842:267::-;19027:2;19016:9;19009:21;18990:4;19047:56;19099:2;19088:9;19084:18;19076:6;19047:56;:::i;19549:253::-;19621:2;19615:9;19663:4;19651:17;;19698:18;19683:34;;19719:22;;;19680:62;19677:2;;;19745:18;;:::i;:::-;19781:2;19774:22;19595:207;:::o;19807:275::-;19878:2;19872:9;19943:2;19924:13;;-1:-1:-1;;19920:27:12;19908:40;;19978:18;19963:34;;19999:22;;;19960:62;19957:2;;;20025:18;;:::i;:::-;20061:2;20054:22;19852:230;;-1:-1:-1;19852:230:12:o;20087:168::-;20127:7;20193:1;20189;20185:6;20181:14;20178:1;20175:21;20170:1;20163:9;20156:17;20152:45;20149:2;;;20200:18;;:::i;:::-;-1:-1:-1;20240:9:12;;20139:116::o;20260:125::-;20300:4;20328:1;20325;20322:8;20319:2;;;20333:18;;:::i;:::-;-1:-1:-1;20370:9:12;;20309:76::o;20390:258::-;20462:1;20472:113;20486:6;20483:1;20480:13;20472:113;;;20562:11;;;20556:18;20543:11;;;20536:39;20508:2;20501:10;20472:113;;;20603:6;20600:1;20597:13;20594:2;;;20638:1;20629:6;20624:3;20620:16;20613:27;20594:2;;20443:205;;;:::o;20653:380::-;20732:1;20728:12;;;;20775;;;20796:2;;20850:4;20842:6;20838:17;20828:27;;20796:2;20903;20895:6;20892:14;20872:18;20869:38;20866:2;;;20949:10;20944:3;20940:20;20937:1;20930:31;20984:4;20981:1;20974:15;21012:4;21009:1;21002:15;21038:135;21077:3;-1:-1:-1;;21098:17:12;;21095:2;;;21118:18;;:::i;:::-;-1:-1:-1;21165:1:12;21154:13;;21085:88::o;21178:127::-;21239:10;21234:3;21230:20;21227:1;21220:31;21270:4;21267:1;21260:15;21294:4;21291:1;21284:15;21310:127;21371:10;21366:3;21362:20;21359:1;21352:31;21402:4;21399:1;21392:15;21426:4;21423:1;21416:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/**\r\n * @dev Exchange Contract for ERC20 Token\r\n */\r\ncontract ERC20TokenExchange{\r\n    /**\r\n    * @dev Exchange struct for ERC20 Token\r\n    */\r\n    struct ERC20Exchange {\r\n        string exchangeName;\r\n        address creatorAddress;\r\n        address exchangeTokenAddress;\r\n        address offerTokenAddress;\r\n        uint initialAmount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Offer struct for ERC20 Token\r\n    */\r\n    struct ERC20Offer {\r\n        uint exchangeId;\r\n        uint offerId;\r\n        string offerType;\r\n        address creatorAddress;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for creating ERC20TokenExchange\r\n    */\r\n    struct CreateERC20TokenExchangeRequest {\r\n        string exchangeName;\r\n        address exchangeTokenAddress;\r\n        address offerTokenAddress;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for Place ERC20Token Offer\r\n    */\r\n    struct PlaceERC20TokenOfferRequest {\r\n        uint exchangeId;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for cancel Exchange\r\n    */\r\n    struct CancelOfferRequest {\r\n        uint exchangeId;\r\n        uint offerId;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for deal Exchange\r\n    */\r\n    struct OfferRequest {\r\n        uint exchangeId;\r\n        uint offerId;\r\n    }\r\n\r\n    /**\r\n    * @dev count variables for ERC20Token exchange and offer mapping\r\n    */\r\n    uint internal _erc20ExchangeCount;\r\n    uint internal _erc20OfferCount;\r\n\r\n    /**\r\n    * @dev variables for storing ERC20TOken Exchange and Offer\r\n    */\r\n    mapping(uint => ERC20Exchange) internal _erc20Exchanges;\r\n    mapping(uint => ERC20Offer) internal _erc20Offers;\r\n\r\n    // ----- EVENTS ----- //\r\n    event ERC20TokenExchangeCreated(uint exchangeId, uint initialOfferId);\r\n    event ERC20TokenBuyingOfferPlaced(uint offerId);\r\n    event ERC20TokenSellingOfferPlaced(uint offerId);\r\n    event ERC20TokenBuyingOfferCanceled(uint offerId);\r\n    event ERC20TokenSellingOfferCanceled(uint offerId);\r\n    event ERC20TokenFromOfferBought(uint offerId);\r\n    event ERC20TokenFromOfferSold(uint offerId);\r\n\r\n    /**\r\n    * @dev Constructor Function\r\n    */\r\n    constructor() {\r\n        _erc20ExchangeCount = 0;\r\n        _erc20OfferCount = 0;\r\n    }\r\n    \r\n    // ----- VIEWS ----- //\r\n    function getErc20ExchangeCount() external view returns(uint){\r\n        return _erc20ExchangeCount;\r\n    }\r\n\r\n    function getErc20OfferCount() external view returns(uint){\r\n        return _erc20OfferCount;\r\n    }\r\n\r\n    function getErc20ExchangeAll() external view returns(ERC20Exchange[] memory){\r\n        ERC20Exchange[] memory exchanges = new ERC20Exchange[](_erc20ExchangeCount);\r\n        for(uint i = 1; i <= _erc20ExchangeCount; i++)\r\n            exchanges[i-1] = _erc20Exchanges[i];\r\n        return exchanges;\r\n    }\r\n\r\n    function getErc20OfferAll() external view returns(ERC20Offer[] memory){\r\n        ERC20Offer[] memory offers = new ERC20Offer[](_erc20OfferCount);\r\n        for(uint i = 1; i <= _erc20OfferCount; i++)\r\n            offers[i-1] = _erc20Offers[i];\r\n        return offers;\r\n    }\r\n\r\n    function getErc20ExchangeById(uint _exchangeId) external view returns(ERC20Exchange memory){\r\n        return _erc20Exchanges[_exchangeId];\r\n    }\r\n\r\n    function getErc20OfferById(uint _offerId) external view returns(ERC20Offer memory){\r\n        return _erc20Offers[_offerId];\r\n    }\r\n\r\n    // ----- PUBLIC METHODS ----- //\r\n    /**\r\n    * @dev Owner of token can create Exchange of ERC20\r\n    * @dev exchangeTokenAddress address of exchangeToken(ERC20) \r\n    * @dev offerTokenAddress address of exchangeToken(ERC20) \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function CreateERC20TokenExchange(CreateERC20TokenExchangeRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(input.exchangeTokenAddress);\r\n        require(token.balanceOf(caller) >= input.amount, \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\");\r\n        require(input.price > 0, \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\");\r\n        \r\n        token.transferFrom(caller, address(this), input.amount);\r\n\r\n        /**\r\n        * @dev store exchange and initial offer\r\n        */\r\n        ERC20Exchange memory exchange;\r\n        exchange.exchangeName = input.exchangeName;\r\n        exchange.creatorAddress = caller;\r\n        exchange.exchangeTokenAddress = input.exchangeTokenAddress;\r\n        exchange.offerTokenAddress = input.offerTokenAddress;\r\n        exchange.initialAmount = input.amount;\r\n        exchange.price = input.price; \r\n\r\n        _erc20ExchangeCount++;\r\n        _erc20Exchanges[_erc20ExchangeCount] = exchange;\r\n\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = _erc20ExchangeCount;\r\n        offer.offerType = \"SELL\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = exchange.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenExchangeCreated(_erc20ExchangeCount, _erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev someone can create buying offer for ERC20 token exchange\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function PlaceERC20TokenBuyingOffer(PlaceERC20TokenOfferRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        require(\r\n            token.balanceOf(caller) >= (input.price * input.amount), \r\n            \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\"\r\n        );\r\n        require(input.price > 0, \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\");\r\n\r\n        token.transferFrom(caller, address(this), input.price * input.amount);\r\n\r\n        /**\r\n        * @dev store buying offer\r\n        */\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = input.exchangeId;\r\n        offer.offerType = \"BUY\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = input.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenBuyingOfferPlaced(_erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev owner of token can create selling offer for ERC20 token exchange\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function PlaceERC20TokenSellingOffer(PlaceERC20TokenOfferRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n        require(\r\n            token.balanceOf(caller) >= input.amount, \r\n            \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\"\r\n        );\r\n        require(input.price > 0, \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\");\r\n\r\n        token.transferFrom(caller, address(this), input.amount);\r\n\r\n        /**\r\n        * @dev store selling offer\r\n        */\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = input.exchangeId;\r\n        offer.offerType = \"SELL\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = input.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenSellingOfferPlaced(_erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev creator of buying offer can cancel his ERC20Token BuyingOffer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function CancelERC20TokenBuyingOffer(CancelOfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        require(offer.creatorAddress == caller, \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\");\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"BUY\")), \r\n            \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\"\r\n        );\r\n\r\n        require(\r\n            token.balanceOf(address(this)) >= (offer.price * offer.amount),\r\n            \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\"\r\n        );\r\n        \r\n        token.transfer(caller, offer.price * offer.amount);            \r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenBuyingOfferCanceled(input.offerId);\r\n    }\r\n\r\n    /**\r\n    * @dev creator of selling offer can cancel his ERC20 SellingOffer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function CancelERC20TokenSellingOffer(CancelOfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n        require(offer.creatorAddress == caller, \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\");\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"SELL\")), \r\n            \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\"\r\n        );\r\n        require(\r\n            token.balanceOf(address(this)) >= offer.amount, \r\n            \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\"\r\n        );\r\n        \r\n        token.transfer(caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenSellingOfferCanceled(input.offerId);\r\n    }\r\n\r\n    /**\r\n    * @dev someone can buy token(ERC20) from selling offer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function BuyERC20TokenFromOffer(OfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 offerToken = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        IERC20 exchangeToken = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"SELL\")), \r\n            \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\"\r\n        );\r\n        require(\r\n            offerToken.balanceOf(caller) >= (offer.price * offer.amount),\r\n            \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        require(\r\n            exchangeToken.balanceOf(address(this)) >= offer.amount,\r\n            \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        offerToken.transferFrom(caller, offer.creatorAddress, offer.price * offer.amount); \r\n        exchangeToken.transfer(caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenFromOfferBought(input.offerId);\r\n    }\r\n    /**\r\n    * @dev owner of token can sell token(ERC20) from buying offer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function SellERC20TokenFromOffer(OfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 offerToken = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        IERC20 exchangeToken = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"BUY\")), \r\n            \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\"\r\n        );\r\n        require(\r\n            offerToken.balanceOf(address(this)) >= (offer.price * offer.amount),\r\n            \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        require(\r\n            exchangeToken.balanceOf(offer.creatorAddress) >= offer.amount,\r\n            \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        offerToken.transfer(offer.creatorAddress, offer.price * offer.amount); \r\n        exchangeToken.transferFrom(offer.creatorAddress, caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenFromOfferSold(input.offerId);\r\n    }\r\n}",
  "sourcePath": "E:/PRIVI/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol",
  "ast": {
    "absolutePath": "/E/PRIVI/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol",
    "exportedSymbols": {
      "ERC20TokenExchange": [
        2277
      ],
      "IERC20": [
        3711
      ]
    },
    "id": 2278,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1189,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1190,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 3712,
        "src": "67:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1191,
          "nodeType": "StructuredDocumentation",
          "src": "127:51:1",
          "text": " @dev Exchange Contract for ERC20 Token"
        },
        "fullyImplemented": true,
        "id": 2277,
        "linearizedBaseContracts": [
          2277
        ],
        "name": "ERC20TokenExchange",
        "nameLocation": "189:18:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20TokenExchange.ERC20Exchange",
            "id": 1204,
            "members": [
              {
                "constant": false,
                "id": 1193,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "314:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "307:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1192,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "307:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1195,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "345:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "337:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1194,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1197,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "378:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "370:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1196,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1199,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "417:17:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "409:25:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1198,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1201,
                "mutability": "mutable",
                "name": "initialAmount",
                "nameLocation": "450:13:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "445:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1200,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "445:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1203,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "479:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "474:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1202,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Exchange",
            "nameLocation": "282:13:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "275:217:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.ERC20Offer",
            "id": 1217,
            "members": [
              {
                "constant": false,
                "id": 1206,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "592:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "587:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1205,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1208,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "618:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "613:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1207,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1210,
                "mutability": "mutable",
                "name": "offerType",
                "nameLocation": "643:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "636:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1209,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1212,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "671:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "663:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1211,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1214,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "701:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "696:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1213,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1216,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "723:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "718:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1215,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Offer",
            "nameLocation": "565:10:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "558:178:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CreateERC20TokenExchangeRequest",
            "id": 1228,
            "members": [
              {
                "constant": false,
                "id": 1219,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "877:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "870:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1218,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1221,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "908:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "900:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1220,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1223,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "947:17:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "939:25:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1222,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1225,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "980:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "975:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1224,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "975:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1227,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1002:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "997:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1226,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20TokenExchangeRequest",
            "nameLocation": "827:31:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "820:195:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.PlaceERC20TokenOfferRequest",
            "id": 1235,
            "members": [
              {
                "constant": false,
                "id": 1230,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1145:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1140:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1229,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1140:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1232,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1171:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1166:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1231,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1234,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1193:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1188:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1233,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PlaceERC20TokenOfferRequest",
            "nameLocation": "1101:27:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1094:112:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CancelOfferRequest",
            "id": 1240,
            "members": [
              {
                "constant": false,
                "id": 1237,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1320:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "1315:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1236,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1315:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1239,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1346:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "1341:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1238,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CancelOfferRequest",
            "nameLocation": "1285:18:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1278:83:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.OfferRequest",
            "id": 1245,
            "members": [
              {
                "constant": false,
                "id": 1242,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1467:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1245,
                "src": "1462:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1241,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1462:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1244,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1493:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1245,
                "src": "1488:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1243,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OfferRequest",
            "nameLocation": "1438:12:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1431:77:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1246,
              "nodeType": "StructuredDocumentation",
              "src": "1516:81:1",
              "text": " @dev count variables for ERC20Token exchange and offer mapping"
            },
            "id": 1248,
            "mutability": "mutable",
            "name": "_erc20ExchangeCount",
            "nameLocation": "1617:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1603:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1247,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1603:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1250,
            "mutability": "mutable",
            "name": "_erc20OfferCount",
            "nameLocation": "1657:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1643:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1249,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1643:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "1682:75:1",
              "text": " @dev variables for storing ERC20TOken Exchange and Offer"
            },
            "id": 1256,
            "mutability": "mutable",
            "name": "_erc20Exchanges",
            "nameLocation": "1803:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1763:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
            },
            "typeName": {
              "id": 1255,
              "keyType": {
                "id": 1252,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1771:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1763:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
              },
              "valueType": {
                "id": 1254,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1253,
                  "name": "ERC20Exchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1204,
                  "src": "1779:13:1"
                },
                "referencedDeclaration": 1204,
                "src": "1779:13:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1261,
            "mutability": "mutable",
            "name": "_erc20Offers",
            "nameLocation": "1862:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1825:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
            },
            "typeName": {
              "id": 1260,
              "keyType": {
                "id": 1257,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1833:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1825:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
              },
              "valueType": {
                "id": 1259,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1258,
                  "name": "ERC20Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1217,
                  "src": "1841:10:1"
                },
                "referencedDeclaration": 1217,
                "src": "1841:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Offer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1267,
            "name": "ERC20TokenExchangeCreated",
            "nameLocation": "1919:25:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "1950:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "1945:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialOfferId",
                  "nameLocation": "1967:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "1962:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:38:1"
            },
            "src": "1913:70:1"
          },
          {
            "anonymous": false,
            "id": 1271,
            "name": "ERC20TokenBuyingOfferPlaced",
            "nameLocation": "1995:27:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2028:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "2023:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2022:14:1"
            },
            "src": "1989:48:1"
          },
          {
            "anonymous": false,
            "id": 1275,
            "name": "ERC20TokenSellingOfferPlaced",
            "nameLocation": "2049:28:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2083:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "2078:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:14:1"
            },
            "src": "2043:49:1"
          },
          {
            "anonymous": false,
            "id": 1279,
            "name": "ERC20TokenBuyingOfferCanceled",
            "nameLocation": "2104:29:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2139:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "2134:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:14:1"
            },
            "src": "2098:50:1"
          },
          {
            "anonymous": false,
            "id": 1283,
            "name": "ERC20TokenSellingOfferCanceled",
            "nameLocation": "2160:30:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2196:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "2191:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:14:1"
            },
            "src": "2154:51:1"
          },
          {
            "anonymous": false,
            "id": 1287,
            "name": "ERC20TokenFromOfferBought",
            "nameLocation": "2217:25:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2248:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2243:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:14:1"
            },
            "src": "2211:46:1"
          },
          {
            "anonymous": false,
            "id": 1291,
            "name": "ERC20TokenFromOfferSold",
            "nameLocation": "2269:23:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2298:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1291,
                  "src": "2293:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:14:1"
            },
            "src": "2263:44:1"
          },
          {
            "body": {
              "id": 1303,
              "nodeType": "Block",
              "src": "2379:73:1",
              "statements": [
                {
                  "expression": {
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1295,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "2390:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2412:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2390:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:23:1"
                },
                {
                  "expression": {
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1299,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "2424:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2424:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:20:1"
                }
              ]
            },
            "documentation": {
              "id": 1292,
              "nodeType": "StructuredDocumentation",
              "src": "2315:44:1",
              "text": " @dev Constructor Function"
            },
            "id": 1304,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:2:1"
            },
            "returnParameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:1"
            },
            "scope": 2277,
            "src": "2365:87:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "2553:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 1309,
                    "name": "_erc20ExchangeCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1248,
                    "src": "2571:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1308,
                  "id": 1310,
                  "nodeType": "Return",
                  "src": "2564:26:1"
                }
              ]
            },
            "functionSelector": "fd6683aa",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeCount",
            "nameLocation": "2502:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:1"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "2548:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:6:1"
            },
            "scope": 2277,
            "src": "2493:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "2663:42:1",
              "statements": [
                {
                  "expression": {
                    "id": 1317,
                    "name": "_erc20OfferCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1250,
                    "src": "2681:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1318,
                  "nodeType": "Return",
                  "src": "2674:23:1"
                }
              ]
            },
            "functionSelector": "1eb582da",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferCount",
            "nameLocation": "2615:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:2:1"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1320,
                  "src": "2658:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:6:1"
            },
            "scope": 2277,
            "src": "2606:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "2789:227:1",
              "statements": [
                {
                  "assignments": [
                    1331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1331,
                      "mutability": "mutable",
                      "name": "exchanges",
                      "nameLocation": "2823:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1362,
                      "src": "2800:32:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1329,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1328,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1204,
                            "src": "2800:13:1"
                          },
                          "referencedDeclaration": 1204,
                          "src": "2800:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ArrayTypeName",
                        "src": "2800:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1338,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1336,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "2855:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2835:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Exchange memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1332,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1204,
                            "src": "2839:13:1"
                          },
                          "referencedDeclaration": 1204,
                          "src": "2839:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 1334,
                        "nodeType": "ArrayTypeName",
                        "src": "2839:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2800:75:1"
                },
                {
                  "body": {
                    "expression": {
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1349,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "2946:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                          }
                        },
                        "id": 1353,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1350,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2956:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2958:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2956:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2946:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 1354,
                          "name": "_erc20Exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "2963:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                          }
                        },
                        "id": 1356,
                        "indexExpression": {
                          "id": 1355,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2979:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2963:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                        }
                      },
                      "src": "2946:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "id": 1358,
                    "nodeType": "ExpressionStatement",
                    "src": "2946:35:1"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1343,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "2902:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1344,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "2907:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1359,
                  "initializationExpression": {
                    "assignments": [
                      1340
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2895:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "2890:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2890:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1342,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2899:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2890:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2928:3:1",
                      "subExpression": {
                        "id": 1346,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "2928:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1348,
                    "nodeType": "ExpressionStatement",
                    "src": "2928:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2886:95:1"
                },
                {
                  "expression": {
                    "id": 1360,
                    "name": "exchanges",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1331,
                    "src": "2999:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1326,
                  "id": 1361,
                  "nodeType": "Return",
                  "src": "2992:16:1"
                }
              ]
            },
            "functionSelector": "1431975b",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeAll",
            "nameLocation": "2722:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:1"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2766:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1323,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1322,
                        "name": "ERC20Exchange",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1204,
                        "src": "2766:13:1"
                      },
                      "referencedDeclaration": 1204,
                      "src": "2766:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      }
                    },
                    "id": 1324,
                    "nodeType": "ArrayTypeName",
                    "src": "2766:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:24:1"
            },
            "scope": 2277,
            "src": "2713:303:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "3094:203:1",
              "statements": [
                {
                  "assignments": [
                    1374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "offers",
                      "nameLocation": "3125:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "3105:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1372,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1371,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1217,
                            "src": "3105:10:1"
                          },
                          "referencedDeclaration": 1217,
                          "src": "3105:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ArrayTypeName",
                        "src": "3105:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1381,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1379,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "3151:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3134:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Offer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1376,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1375,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1217,
                            "src": "3138:10:1"
                          },
                          "referencedDeclaration": 1217,
                          "src": "3138:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ArrayTypeName",
                        "src": "3138:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3105:63:1"
                },
                {
                  "body": {
                    "expression": {
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1392,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "3236:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                          }
                        },
                        "id": 1396,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1393,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "3243:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3245:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3243:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "3236:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 1397,
                          "name": "_erc20Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1261,
                          "src": "3250:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                          }
                        },
                        "id": 1399,
                        "indexExpression": {
                          "id": 1398,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "3263:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3250:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                        }
                      },
                      "src": "3236:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "id": 1401,
                    "nodeType": "ExpressionStatement",
                    "src": "3236:29:1"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1386,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "3195:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1387,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "3200:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3195:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1402,
                  "initializationExpression": {
                    "assignments": [
                      1383
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3188:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "3183:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1385,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3192:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3183:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3218:3:1",
                      "subExpression": {
                        "id": 1389,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1383,
                        "src": "3218:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1391,
                    "nodeType": "ExpressionStatement",
                    "src": "3218:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3179:86:1"
                },
                {
                  "expression": {
                    "id": 1403,
                    "name": "offers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1374,
                    "src": "3283:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1369,
                  "id": 1404,
                  "nodeType": "Return",
                  "src": "3276:13:1"
                }
              ]
            },
            "functionSelector": "28069dfd",
            "id": 1406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferAll",
            "nameLocation": "3033:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:1"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "3074:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1366,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1365,
                        "name": "ERC20Offer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1217,
                        "src": "3074:10:1"
                      },
                      "referencedDeclaration": 1217,
                      "src": "3074:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      }
                    },
                    "id": 1367,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:21:1"
            },
            "scope": 2277,
            "src": "3024:273:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "3396:54:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1414,
                      "name": "_erc20Exchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "3414:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                      }
                    },
                    "id": 1416,
                    "indexExpression": {
                      "id": 1415,
                      "name": "_exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1408,
                      "src": "3430:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3414:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "functionReturnParameters": 1413,
                  "id": 1417,
                  "nodeType": "Return",
                  "src": "3407:35:1"
                }
              ]
            },
            "functionSelector": "6f2663d4",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeById",
            "nameLocation": "3314:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "3340:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "3335:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:18:1"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "3375:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                  },
                  "typeName": {
                    "id": 1411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1410,
                      "name": "ERC20Exchange",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1204,
                      "src": "3375:13:1"
                    },
                    "referencedDeclaration": 1204,
                    "src": "3375:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:1"
            },
            "scope": 2277,
            "src": "3305:145:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "3540:48:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1427,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "3558:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1429,
                    "indexExpression": {
                      "id": 1428,
                      "name": "_offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "3571:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3558:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "functionReturnParameters": 1426,
                  "id": 1430,
                  "nodeType": "Return",
                  "src": "3551:29:1"
                }
              ]
            },
            "functionSelector": "cddcc539",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferById",
            "nameLocation": "3467:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3490:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "3485:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:15:1"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "3522:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer"
                  },
                  "typeName": {
                    "id": 1424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1423,
                      "name": "ERC20Offer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1217,
                      "src": "3522:10:1"
                    },
                    "referencedDeclaration": 1217,
                    "src": "3522:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:19:1"
            },
            "scope": 2277,
            "src": "3458:130:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1591,
              "nodeType": "Block",
              "src": "4021:1355:1",
              "statements": [
                {
                  "assignments": [
                    1443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1443,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4039:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4032:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1442,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1441,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "4032:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "4032:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1448,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1445,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "4054:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1221,
                        "src": "4054:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1444,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "4047:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1452,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1438,
                              "src": "4116:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1450,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "4100:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "4100:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4100:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1454,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4127:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1225,
                          "src": "4127:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4100:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        }
                      ],
                      "id": 1449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4092:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1461,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4229:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1227,
                          "src": "4229:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4243:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4229:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:79:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4221:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:105:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1471,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "4366:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4382:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4374:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4374:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1476,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "4389:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1225,
                        "src": "4389:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1468,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "4347:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "4347:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "4347:55:1"
                },
                {
                  "assignments": [
                    1483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1483,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "4510:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4489:29:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      },
                      "typeName": {
                        "id": 1482,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1481,
                          "name": "ERC20Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1204,
                          "src": "4489:13:1"
                        },
                        "referencedDeclaration": 1204,
                        "src": "4489:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store exchange and initial offer",
                  "id": 1484,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4489:29:1"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1485,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4529:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1193,
                      "src": "4529:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1488,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4553:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1219,
                      "src": "4553:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4529:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:42:1"
                },
                {
                  "expression": {
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1492,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4582:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1195,
                      "src": "4582:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1495,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "4608:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4582:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:32:1"
                },
                {
                  "expression": {
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1498,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4625:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1197,
                      "src": "4625:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1501,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4657:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1221,
                      "src": "4657:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4625:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:58:1"
                },
                {
                  "expression": {
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1505,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4694:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1199,
                      "src": "4694:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1508,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4723:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1223,
                      "src": "4723:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4694:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1511,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:52:1"
                },
                {
                  "expression": {
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1512,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4757:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1201,
                      "src": "4757:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1515,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4782:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "4782:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:37:1"
                },
                {
                  "expression": {
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1519,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4805:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "4805:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1522,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4822:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1227,
                      "src": "4822:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4805:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:28:1"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4847:21:1",
                    "subExpression": {
                      "id": 1526,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "4847:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:21:1"
                },
                {
                  "expression": {
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1529,
                        "name": "_erc20Exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "4879:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "id": 1530,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "4895:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4879:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1532,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "4918:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "src": "4879:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:1"
                },
                {
                  "assignments": [
                    1537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1537,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "4957:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4939:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1536,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1535,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "4939:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "4939:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1538,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4939:23:1"
                },
                {
                  "expression": {
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1539,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "4973:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "4973:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1542,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "4992:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4973:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:38:1"
                },
                {
                  "expression": {
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1545,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5022:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "5022:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 1548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5040:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "5022:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:24:1"
                },
                {
                  "expression": {
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1551,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5057:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "5057:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1554,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "5080:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5057:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:29:1"
                },
                {
                  "expression": {
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1557,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5097:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "5097:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1560,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "5112:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "5112:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5097:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:27:1"
                },
                {
                  "expression": {
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1564,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5135:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1566,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "5135:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1567,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "5149:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "5149:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5135:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:28:1"
                },
                {
                  "expression": {
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5176:18:1",
                    "subExpression": {
                      "id": 1571,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "5176:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:18:1"
                },
                {
                  "expression": {
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1574,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5205:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1576,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "5205:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1577,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "5221:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:32:1"
                },
                {
                  "expression": {
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1580,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "5248:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1582,
                      "indexExpression": {
                        "id": 1581,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "5261:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5248:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1583,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "5281:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "5248:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1587,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "5330:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1588,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "5351:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1586,
                      "name": "ERC20TokenExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1267,
                      "src": "5304:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "EmitStatement",
                  "src": "5299:69:1"
                }
              ]
            },
            "documentation": {
              "id": 1433,
              "nodeType": "StructuredDocumentation",
              "src": "3634:276:1",
              "text": " @dev Owner of token can create Exchange of ERC20\n @dev exchangeTokenAddress address of exchangeToken(ERC20) \n @dev offerTokenAddress address of exchangeToken(ERC20) \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d56aa3b4",
            "id": 1592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateERC20TokenExchange",
            "nameLocation": "3925:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3989:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "3950:44:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                  },
                  "typeName": {
                    "id": 1435,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1434,
                      "name": "CreateERC20TokenExchangeRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1228,
                      "src": "3950:31:1"
                    },
                    "referencedDeclaration": 1228,
                    "src": "3950:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4004:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "3996:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3949:62:1"
            },
            "returnParameters": {
              "id": 1440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4021:0:1"
            },
            "scope": 2277,
            "src": "3916:1460:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "5697:957:1",
              "statements": [
                {
                  "assignments": [
                    1603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1603,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5715:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "5708:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1602,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1601,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "5708:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "5708:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1611,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1605,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "5730:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1608,
                          "indexExpression": {
                            "expression": {
                              "id": 1606,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1596,
                              "src": "5746:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "5746:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5730:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "5730:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1604,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "5723:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1615,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1598,
                              "src": "5831:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1613,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "5815:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "5815:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1617,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1596,
                                  "src": "5843:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1234,
                                "src": "5843:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1619,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1596,
                                  "src": "5857:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1232,
                                "src": "5857:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5843:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1622,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5842:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5815:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5793:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5793:177:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1626,
                  "nodeType": "ExpressionStatement",
                  "src": "5793:177:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1628,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "5989:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "5989:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6003:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5989:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6006:81:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5981:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5981:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "5981:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1638,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "6120:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1641,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6136:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1643,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "6143:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "6143:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1645,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "6157:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1232,
                          "src": "6157:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6143:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1635,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1603,
                        "src": "6101:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "6101:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:69:1"
                },
                {
                  "assignments": [
                    1653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1653,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "6261:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "6243:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1651,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "6243:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "6243:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store buying offer",
                  "id": 1654,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:23:1"
                },
                {
                  "expression": {
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1655,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6277:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "6277:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1658,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6296:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1230,
                      "src": "6296:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6277:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:35:1"
                },
                {
                  "expression": {
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1662,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6323:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "6323:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "425559",
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6341:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                        "typeString": "literal_string \"BUY\""
                      },
                      "value": "BUY"
                    },
                    "src": "6323:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "6323:23:1"
                },
                {
                  "expression": {
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1668,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6357:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "6357:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1671,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "6380:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6357:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1673,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:29:1"
                },
                {
                  "expression": {
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1674,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6397:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "6397:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1677,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6412:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1232,
                      "src": "6412:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6397:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1680,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:27:1"
                },
                {
                  "expression": {
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1681,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6435:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1683,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "6435:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1684,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6449:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1234,
                      "src": "6449:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6435:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1687,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:25:1"
                },
                {
                  "expression": {
                    "id": 1689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6473:18:1",
                    "subExpression": {
                      "id": 1688,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "6473:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1690,
                  "nodeType": "ExpressionStatement",
                  "src": "6473:18:1"
                },
                {
                  "expression": {
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1691,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6502:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "6502:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1694,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "6518:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6502:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:32:1"
                },
                {
                  "expression": {
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1697,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "6545:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1699,
                      "indexExpression": {
                        "id": 1698,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "6558:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6545:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1700,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "6578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "6545:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1704,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "6629:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1703,
                      "name": "ERC20TokenBuyingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "6601:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "EmitStatement",
                  "src": "6596:50:1"
                }
              ]
            },
            "documentation": {
              "id": 1593,
              "nodeType": "StructuredDocumentation",
              "src": "5384:204:1",
              "text": " @dev someone can create buying offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "5f881441",
            "id": 1708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenBuyingOffer",
            "nameLocation": "5603:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "5665:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "5630:40:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 1595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1594,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1235,
                      "src": "5630:27:1"
                    },
                    "referencedDeclaration": 1235,
                    "src": "5630:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5680:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "5672:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5672:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:58:1"
            },
            "returnParameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:1"
            },
            "scope": 2277,
            "src": "5594:1060:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "6984:935:1",
              "statements": [
                {
                  "assignments": [
                    1719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1719,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7002:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "6995:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1718,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1717,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "6995:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "6995:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1727,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1721,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "7017:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1724,
                          "indexExpression": {
                            "expression": {
                              "id": 1722,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "7033:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "7033:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7017:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "7017:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1720,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "7010:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6995:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1731,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "7121:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1729,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1719,
                              "src": "7105:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "7105:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7105:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1733,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "7132:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1232,
                          "src": "7132:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7105:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7083:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7083:162:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "7083:162:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1740,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "7264:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "7264:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7278:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7264:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7256:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:108:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1750,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "7396:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7412:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7404:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7404:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7404:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1755,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "7419:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1232,
                        "src": "7419:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1747,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1719,
                        "src": "7377:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "7377:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1758,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:55:1"
                },
                {
                  "assignments": [
                    1762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1762,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "7524:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "7506:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1761,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1760,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "7506:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "7506:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store selling offer",
                  "id": 1763,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7506:23:1"
                },
                {
                  "expression": {
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1764,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7540:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "7540:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1767,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7559:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1230,
                      "src": "7559:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7540:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1770,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:35:1"
                },
                {
                  "expression": {
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1771,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7586:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1773,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "7586:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7604:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "7586:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1776,
                  "nodeType": "ExpressionStatement",
                  "src": "7586:24:1"
                },
                {
                  "expression": {
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1777,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7621:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "7621:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1780,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "7644:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7621:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:29:1"
                },
                {
                  "expression": {
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1783,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7661:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "7661:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1786,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7676:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1232,
                      "src": "7676:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7661:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1789,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:27:1"
                },
                {
                  "expression": {
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1790,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7699:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "7699:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1793,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7713:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1234,
                      "src": "7713:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7699:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:25:1"
                },
                {
                  "expression": {
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7737:18:1",
                    "subExpression": {
                      "id": 1797,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "7737:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "7737:18:1"
                },
                {
                  "expression": {
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1800,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7766:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1802,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "7766:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1803,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "7782:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7766:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:32:1"
                },
                {
                  "expression": {
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1806,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "7809:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1808,
                      "indexExpression": {
                        "id": 1807,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7822:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7809:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1809,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "7842:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "7809:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1813,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7894:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1812,
                      "name": "ERC20TokenSellingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "7865:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "EmitStatement",
                  "src": "7860:51:1"
                }
              ]
            },
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "6662:212:1",
              "text": " @dev owner of token can create selling offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d50853e8",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenSellingOffer",
            "nameLocation": "6889:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "6952:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "6917:40:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 1711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1710,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1235,
                      "src": "6917:27:1"
                    },
                    "referencedDeclaration": 1235,
                    "src": "6917:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "6967:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "6959:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6959:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6916:58:1"
            },
            "returnParameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6984:0:1"
            },
            "scope": 2277,
            "src": "6880:1039:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1920,
              "nodeType": "Block",
              "src": "8188:1001:1",
              "statements": [
                {
                  "assignments": [
                    1828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1828,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "8217:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1920,
                      "src": "8199:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1826,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "8199:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "8199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1833,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1829,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "8225:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1832,
                    "indexExpression": {
                      "expression": {
                        "id": 1830,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1821,
                        "src": "8238:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "8238:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8225:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8199:53:1"
                },
                {
                  "assignments": [
                    1836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1836,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "8270:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1920,
                      "src": "8263:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1834,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "8263:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "8263:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1844,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1838,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "8285:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1841,
                          "indexExpression": {
                            "expression": {
                              "id": 1839,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1821,
                              "src": "8301:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1237,
                            "src": "8301:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8285:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "8285:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1837,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "8278:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8278:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8263:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1846,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "8356:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1212,
                          "src": "8356:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1848,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1823,
                          "src": "8380:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8356:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8388:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        }
                      ],
                      "id": 1845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8348:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:101:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1852,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:101:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1854,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "8468:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "8468:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1856,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "8488:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1237,
                          "src": "8488:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8468:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8506:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8460:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:121:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1866,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1828,
                                    "src": "8641:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 1867,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "8641:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1864,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8624:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8624:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8624:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1863,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8614:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8614:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 1873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8689:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 1871,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8672:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8672:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8672:23:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1870,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8662:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8662:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8614:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:71:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        }
                      ],
                      "id": 1862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8592:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8592:202:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "8592:202:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1885,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8853:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 1884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8845:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1883,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8845:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8845:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1881,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1836,
                              "src": "8829:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "8829:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1888,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1828,
                                  "src": "8864:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 1889,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "8864:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1890,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1828,
                                  "src": "8878:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 1891,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "8878:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8864:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1893,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8863:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8829:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8906:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8807:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8807:184:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "8807:184:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1901,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1823,
                        "src": "9027:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1902,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "9035:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "9035:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1904,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "9049:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "9049:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9035:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1898,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "9012:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "9012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:50:1"
                },
                {
                  "expression": {
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9085:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1909,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "9092:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1912,
                      "indexExpression": {
                        "expression": {
                          "id": 1910,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1821,
                          "src": "9105:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "9105:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9092:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1916,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1821,
                          "src": "9167:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "9167:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1915,
                      "name": "ERC20TokenBuyingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1279,
                      "src": "9137:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9137:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "EmitStatement",
                  "src": "9132:49:1"
                }
              ]
            },
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "7927:161:1",
              "text": " @dev creator of buying offer can cancel his ERC20Token BuyingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "2584fab6",
            "id": 1921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenBuyingOffer",
            "nameLocation": "8103:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "8157:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1921,
                  "src": "8131:31:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 1820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1819,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1240,
                      "src": "8131:18:1"
                    },
                    "referencedDeclaration": 1240,
                    "src": "8131:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "8172:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1921,
                  "src": "8164:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:49:1"
            },
            "returnParameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:1"
            },
            "scope": 2277,
            "src": "8094:1095:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2017,
              "nodeType": "Block",
              "src": "9456:968:1",
              "statements": [
                {
                  "assignments": [
                    1932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1932,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "9485:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "9467:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1930,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "9467:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "9467:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1937,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1933,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "9493:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1936,
                    "indexExpression": {
                      "expression": {
                        "id": 1934,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "9506:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 1935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "9506:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9493:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9467:53:1"
                },
                {
                  "assignments": [
                    1940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1940,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9538:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "9531:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1939,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1938,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "9531:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "9531:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1948,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1942,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "9553:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1945,
                          "indexExpression": {
                            "expression": {
                              "id": 1943,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "9569:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 1944,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1237,
                            "src": "9569:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9553:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "9553:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "9546:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9531:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1950,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "9627:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1212,
                          "src": "9627:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1952,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "9651:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9627:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9659:61:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        }
                      ],
                      "id": 1949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9619:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9619:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "9619:102:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1958,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "9740:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "9740:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1960,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "9760:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1237,
                          "src": "9760:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9740:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:75:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 1957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9732:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "9732:122:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1970,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1932,
                                    "src": "9914:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 1971,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "9914:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1968,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9897:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9897:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9897:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1967,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9887:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 1977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9962:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 1975,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9945:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9945:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9945:24:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1974,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9935:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9935:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9887:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9986:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        }
                      ],
                      "id": 1966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9865:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:205:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:205:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1989,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "10127:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 1988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10119:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1987,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10119:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1985,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "10103:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "10103:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10103:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1992,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "10137:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1993,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "10137:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10103:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10165:75:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:170:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:170:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2001,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "10287:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2002,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "10295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2003,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "10295:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1998,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "10272:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "10272:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2005,
                  "nodeType": "ExpressionStatement",
                  "src": "10272:36:1"
                },
                {
                  "expression": {
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10319:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2006,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "10326:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2009,
                      "indexExpression": {
                        "expression": {
                          "id": 2007,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "10339:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "10339:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10326:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2013,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "10402:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "10402:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2012,
                      "name": "ERC20TokenSellingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "10371:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10371:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "EmitStatement",
                  "src": "10366:50:1"
                }
              ]
            },
            "documentation": {
              "id": 1922,
              "nodeType": "StructuredDocumentation",
              "src": "9197:158:1",
              "text": " @dev creator of selling offer can cancel his ERC20 SellingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "5415b227",
            "id": 2018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenSellingOffer",
            "nameLocation": "9370:28:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "9425:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "9399:31:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 1924,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1923,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1240,
                      "src": "9399:18:1"
                    },
                    "referencedDeclaration": 1240,
                    "src": "9399:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "9440:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "9432:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9398:49:1"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9456:0:1"
            },
            "scope": 2277,
            "src": "9361:1063:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2145,
              "nodeType": "Block",
              "src": "10668:1222:1",
              "statements": [
                {
                  "assignments": [
                    2029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2029,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "10697:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10679:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 2028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2027,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "10679:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "10679:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2030,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "10705:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 2033,
                    "indexExpression": {
                      "expression": {
                        "id": 2031,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "10718:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1244,
                      "src": "10718:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10705:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:53:1"
                },
                {
                  "assignments": [
                    2037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "10750:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10743:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2035,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "10743:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "10743:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2039,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "10770:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2042,
                          "indexExpression": {
                            "expression": {
                              "id": 2040,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "10786:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2041,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "10786:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10770:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "10770:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2038,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "10763:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10763:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:79:1"
                },
                {
                  "assignments": [
                    2048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2048,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "10840:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10833:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2046,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "10833:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "10833:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2056,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2050,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "10863:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2053,
                          "indexExpression": {
                            "expression": {
                              "id": 2051,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "10879:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "10879:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10863:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "10863:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2049,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "10856:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10833:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2058,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "10939:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "10939:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2060,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "10959:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1242,
                          "src": "10959:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10939:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10977:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 2057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10931:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10931:116:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:116:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2070,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2029,
                                    "src": "11107:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "11107:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2068,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11090:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11090:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11090:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2067,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11080:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11080:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11155:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 2075,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11138:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11138:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11138:24:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2074,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11128:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11128:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11080:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        }
                      ],
                      "id": 2066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11058:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:199:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "11058:199:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2087,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2024,
                              "src": "11311:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2085,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2037,
                              "src": "11290:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11290:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11290:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2089,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2029,
                                  "src": "11323:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "11323:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 2091,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2029,
                                  "src": "11337:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2092,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "11337:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11323:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2094,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11322:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11290:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11365:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11268:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11268:177:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "11268:177:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2104,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "11512:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 2103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11504:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2102,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11504:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11504:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2100,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "11480:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11480:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11480:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2107,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11522:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "11522:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11480:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11549:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11458:171:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2112,
                  "nodeType": "ExpressionStatement",
                  "src": "11458:171:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2116,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "11666:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2117,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "11674:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "11674:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2119,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11696:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "11696:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2121,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11710:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "11710:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11696:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2113,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "11642:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "11642:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2129,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "11758:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2130,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "11766:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "11766:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2126,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "11735:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "11735:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11735:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2133,
                  "nodeType": "ExpressionStatement",
                  "src": "11735:44:1"
                },
                {
                  "expression": {
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11790:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2134,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "11797:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2137,
                      "indexExpression": {
                        "expression": {
                          "id": 2135,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2022,
                          "src": "11810:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "11810:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11797:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2141,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2022,
                          "src": "11868:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "11868:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2140,
                      "name": "ERC20TokenFromOfferBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "11842:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2144,
                  "nodeType": "EmitStatement",
                  "src": "11837:45:1"
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "10432:147:1",
              "text": " @dev someone can buy token(ERC20) from selling offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "969de53b",
            "id": 2146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyERC20TokenFromOffer",
            "nameLocation": "10594:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "10637:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "10617:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 2021,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2020,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1245,
                      "src": "10617:12:1"
                    },
                    "referencedDeclaration": 1245,
                    "src": "10617:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$1245_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2024,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "10652:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "10644:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10644:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10616:43:1"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10668:0:1"
            },
            "scope": 2277,
            "src": "10585:1305:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2275,
              "nodeType": "Block",
              "src": "12140:1250:1",
              "statements": [
                {
                  "assignments": [
                    2157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2157,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "12169:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12151:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 2156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2155,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "12151:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "12151:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2158,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "12177:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 2161,
                    "indexExpression": {
                      "expression": {
                        "id": 2159,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "12190:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1244,
                      "src": "12190:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12177:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12151:53:1"
                },
                {
                  "assignments": [
                    2165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2165,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "12222:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12215:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2163,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "12215:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "12215:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2173,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2167,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "12242:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2170,
                          "indexExpression": {
                            "expression": {
                              "id": 2168,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "12258:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "12258:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12242:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "12242:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2166,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "12235:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12235:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12215:79:1"
                },
                {
                  "assignments": [
                    2176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2176,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "12312:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12305:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2174,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "12305:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "12305:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2184,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2178,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "12335:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2181,
                          "indexExpression": {
                            "expression": {
                              "id": 2179,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "12351:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "12351:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12335:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "12335:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2177,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "12328:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12328:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2186,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "12411:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "12411:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2188,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2150,
                            "src": "12431:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1242,
                          "src": "12431:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12411:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 2185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12403:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12403:117:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2193,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:117:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2198,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2157,
                                    "src": "12580:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 2199,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "12580:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2196,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12563:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12563:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12563:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2195,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12553:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12553:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 2205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12628:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 2203,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12611:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12611:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12611:23:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2202,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12601:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12601:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12553:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12651:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12531:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12531:198:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "12531:198:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2217,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "12791:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 2216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12783:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2215,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12783:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12783:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2213,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2165,
                              "src": "12762:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "12762:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12762:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2220,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2157,
                                  "src": "12802:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2221,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "12802:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 2222,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2157,
                                  "src": "12816:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2223,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "12816:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12802:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2225,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12801:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12762:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12844:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12740:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12740:185:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2229,
                  "nodeType": "ExpressionStatement",
                  "src": "12740:185:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2233,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2157,
                                "src": "12984:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                  "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                }
                              },
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creatorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1212,
                              "src": "12984:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2231,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "12960:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "12960:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12960:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2236,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13009:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "13009:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12960:61:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13036:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12938:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12938:179:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2241,
                  "nodeType": "ExpressionStatement",
                  "src": "12938:179:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2245,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13150:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "13150:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2247,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13172:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "13172:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2249,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13186:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "13186:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13172:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2242,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2165,
                        "src": "13130:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "13130:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13130:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2257,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13238:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "13238:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2259,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "13260:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2260,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13268:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "13268:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2254,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2176,
                        "src": "13211:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "13211:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:70:1"
                },
                {
                  "expression": {
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "13292:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2264,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "13299:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2267,
                      "indexExpression": {
                        "expression": {
                          "id": 2265,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2150,
                          "src": "13312:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "13312:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13299:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "13292:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2271,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2150,
                          "src": "13368:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "13368:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2270,
                      "name": "ERC20TokenFromOfferSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "13344:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13344:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2274,
                  "nodeType": "EmitStatement",
                  "src": "13339:43:1"
                }
              ]
            },
            "documentation": {
              "id": 2147,
              "nodeType": "StructuredDocumentation",
              "src": "11896:154:1",
              "text": " @dev owner of token can sell token(ERC20) from buying offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "e9851111",
            "id": 2276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SellERC20TokenFromOffer",
            "nameLocation": "12065:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "12109:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "12089:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 2149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2148,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1245,
                      "src": "12089:12:1"
                    },
                    "referencedDeclaration": 1245,
                    "src": "12089:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$1245_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12124:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "12116:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12116:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12088:43:1"
            },
            "returnParameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12140:0:1"
            },
            "scope": 2277,
            "src": "12056:1334:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2278,
        "src": "180:13213:1",
        "usedErrors": []
      }
    ],
    "src": "42:13351:1"
  },
  "legacyAST": {
    "absolutePath": "/E/PRIVI/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol",
    "exportedSymbols": {
      "ERC20TokenExchange": [
        2277
      ],
      "IERC20": [
        3711
      ]
    },
    "id": 2278,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1189,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1190,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2278,
        "sourceUnit": 3712,
        "src": "67:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1191,
          "nodeType": "StructuredDocumentation",
          "src": "127:51:1",
          "text": " @dev Exchange Contract for ERC20 Token"
        },
        "fullyImplemented": true,
        "id": 2277,
        "linearizedBaseContracts": [
          2277
        ],
        "name": "ERC20TokenExchange",
        "nameLocation": "189:18:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20TokenExchange.ERC20Exchange",
            "id": 1204,
            "members": [
              {
                "constant": false,
                "id": 1193,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "314:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "307:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1192,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "307:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1195,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "345:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "337:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1194,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1197,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "378:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "370:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1196,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1199,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "417:17:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "409:25:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1198,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1201,
                "mutability": "mutable",
                "name": "initialAmount",
                "nameLocation": "450:13:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "445:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1200,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "445:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1203,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "479:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1204,
                "src": "474:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1202,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Exchange",
            "nameLocation": "282:13:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "275:217:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.ERC20Offer",
            "id": 1217,
            "members": [
              {
                "constant": false,
                "id": 1206,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "592:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "587:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1205,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1208,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "618:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "613:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1207,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1210,
                "mutability": "mutable",
                "name": "offerType",
                "nameLocation": "643:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "636:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1209,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1212,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "671:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "663:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1211,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1214,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "701:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "696:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1213,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1216,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "723:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1217,
                "src": "718:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1215,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Offer",
            "nameLocation": "565:10:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "558:178:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CreateERC20TokenExchangeRequest",
            "id": 1228,
            "members": [
              {
                "constant": false,
                "id": 1219,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "877:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "870:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1218,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1221,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "908:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "900:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1220,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1223,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "947:17:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "939:25:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1222,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1225,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "980:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "975:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1224,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "975:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1227,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1002:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1228,
                "src": "997:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1226,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20TokenExchangeRequest",
            "nameLocation": "827:31:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "820:195:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.PlaceERC20TokenOfferRequest",
            "id": 1235,
            "members": [
              {
                "constant": false,
                "id": 1230,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1145:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1140:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1229,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1140:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1232,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1171:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1166:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1231,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1234,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1193:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 1235,
                "src": "1188:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1233,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PlaceERC20TokenOfferRequest",
            "nameLocation": "1101:27:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1094:112:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CancelOfferRequest",
            "id": 1240,
            "members": [
              {
                "constant": false,
                "id": 1237,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1320:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "1315:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1236,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1315:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1239,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1346:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1240,
                "src": "1341:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1238,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CancelOfferRequest",
            "nameLocation": "1285:18:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1278:83:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.OfferRequest",
            "id": 1245,
            "members": [
              {
                "constant": false,
                "id": 1242,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1467:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1245,
                "src": "1462:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1241,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1462:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1244,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1493:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 1245,
                "src": "1488:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1243,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OfferRequest",
            "nameLocation": "1438:12:1",
            "nodeType": "StructDefinition",
            "scope": 2277,
            "src": "1431:77:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1246,
              "nodeType": "StructuredDocumentation",
              "src": "1516:81:1",
              "text": " @dev count variables for ERC20Token exchange and offer mapping"
            },
            "id": 1248,
            "mutability": "mutable",
            "name": "_erc20ExchangeCount",
            "nameLocation": "1617:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1603:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1247,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1603:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1250,
            "mutability": "mutable",
            "name": "_erc20OfferCount",
            "nameLocation": "1657:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1643:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1249,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1643:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "1682:75:1",
              "text": " @dev variables for storing ERC20TOken Exchange and Offer"
            },
            "id": 1256,
            "mutability": "mutable",
            "name": "_erc20Exchanges",
            "nameLocation": "1803:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1763:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
            },
            "typeName": {
              "id": 1255,
              "keyType": {
                "id": 1252,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1771:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1763:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
              },
              "valueType": {
                "id": 1254,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1253,
                  "name": "ERC20Exchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1204,
                  "src": "1779:13:1"
                },
                "referencedDeclaration": 1204,
                "src": "1779:13:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1261,
            "mutability": "mutable",
            "name": "_erc20Offers",
            "nameLocation": "1862:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 2277,
            "src": "1825:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
            },
            "typeName": {
              "id": 1260,
              "keyType": {
                "id": 1257,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1833:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1825:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
              },
              "valueType": {
                "id": 1259,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1258,
                  "name": "ERC20Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1217,
                  "src": "1841:10:1"
                },
                "referencedDeclaration": 1217,
                "src": "1841:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Offer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1267,
            "name": "ERC20TokenExchangeCreated",
            "nameLocation": "1919:25:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "1950:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "1945:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialOfferId",
                  "nameLocation": "1967:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "1962:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:38:1"
            },
            "src": "1913:70:1"
          },
          {
            "anonymous": false,
            "id": 1271,
            "name": "ERC20TokenBuyingOfferPlaced",
            "nameLocation": "1995:27:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2028:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "2023:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2022:14:1"
            },
            "src": "1989:48:1"
          },
          {
            "anonymous": false,
            "id": 1275,
            "name": "ERC20TokenSellingOfferPlaced",
            "nameLocation": "2049:28:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2083:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "2078:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:14:1"
            },
            "src": "2043:49:1"
          },
          {
            "anonymous": false,
            "id": 1279,
            "name": "ERC20TokenBuyingOfferCanceled",
            "nameLocation": "2104:29:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2139:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "2134:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:14:1"
            },
            "src": "2098:50:1"
          },
          {
            "anonymous": false,
            "id": 1283,
            "name": "ERC20TokenSellingOfferCanceled",
            "nameLocation": "2160:30:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2196:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "2191:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:14:1"
            },
            "src": "2154:51:1"
          },
          {
            "anonymous": false,
            "id": 1287,
            "name": "ERC20TokenFromOfferBought",
            "nameLocation": "2217:25:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2248:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2243:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:14:1"
            },
            "src": "2211:46:1"
          },
          {
            "anonymous": false,
            "id": 1291,
            "name": "ERC20TokenFromOfferSold",
            "nameLocation": "2269:23:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2298:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1291,
                  "src": "2293:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:14:1"
            },
            "src": "2263:44:1"
          },
          {
            "body": {
              "id": 1303,
              "nodeType": "Block",
              "src": "2379:73:1",
              "statements": [
                {
                  "expression": {
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1295,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "2390:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2412:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2390:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:23:1"
                },
                {
                  "expression": {
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1299,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "2424:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2424:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:20:1"
                }
              ]
            },
            "documentation": {
              "id": 1292,
              "nodeType": "StructuredDocumentation",
              "src": "2315:44:1",
              "text": " @dev Constructor Function"
            },
            "id": 1304,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:2:1"
            },
            "returnParameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:1"
            },
            "scope": 2277,
            "src": "2365:87:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "2553:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 1309,
                    "name": "_erc20ExchangeCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1248,
                    "src": "2571:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1308,
                  "id": 1310,
                  "nodeType": "Return",
                  "src": "2564:26:1"
                }
              ]
            },
            "functionSelector": "fd6683aa",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeCount",
            "nameLocation": "2502:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:1"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "2548:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:6:1"
            },
            "scope": 2277,
            "src": "2493:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "2663:42:1",
              "statements": [
                {
                  "expression": {
                    "id": 1317,
                    "name": "_erc20OfferCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1250,
                    "src": "2681:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1318,
                  "nodeType": "Return",
                  "src": "2674:23:1"
                }
              ]
            },
            "functionSelector": "1eb582da",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferCount",
            "nameLocation": "2615:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:2:1"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1320,
                  "src": "2658:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:6:1"
            },
            "scope": 2277,
            "src": "2606:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "2789:227:1",
              "statements": [
                {
                  "assignments": [
                    1331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1331,
                      "mutability": "mutable",
                      "name": "exchanges",
                      "nameLocation": "2823:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1362,
                      "src": "2800:32:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1329,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1328,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1204,
                            "src": "2800:13:1"
                          },
                          "referencedDeclaration": 1204,
                          "src": "2800:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ArrayTypeName",
                        "src": "2800:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1338,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1336,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "2855:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2835:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Exchange memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1332,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1204,
                            "src": "2839:13:1"
                          },
                          "referencedDeclaration": 1204,
                          "src": "2839:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 1334,
                        "nodeType": "ArrayTypeName",
                        "src": "2839:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2800:75:1"
                },
                {
                  "body": {
                    "expression": {
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1349,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "2946:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                          }
                        },
                        "id": 1353,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1350,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2956:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2958:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2956:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2946:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 1354,
                          "name": "_erc20Exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "2963:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                          }
                        },
                        "id": 1356,
                        "indexExpression": {
                          "id": 1355,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2979:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2963:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                        }
                      },
                      "src": "2946:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "id": 1358,
                    "nodeType": "ExpressionStatement",
                    "src": "2946:35:1"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1343,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "2902:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1344,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "2907:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1359,
                  "initializationExpression": {
                    "assignments": [
                      1340
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2895:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "2890:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2890:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1342,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2899:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2890:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2928:3:1",
                      "subExpression": {
                        "id": 1346,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "2928:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1348,
                    "nodeType": "ExpressionStatement",
                    "src": "2928:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2886:95:1"
                },
                {
                  "expression": {
                    "id": 1360,
                    "name": "exchanges",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1331,
                    "src": "2999:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1326,
                  "id": 1361,
                  "nodeType": "Return",
                  "src": "2992:16:1"
                }
              ]
            },
            "functionSelector": "1431975b",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeAll",
            "nameLocation": "2722:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:1"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2766:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1323,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1322,
                        "name": "ERC20Exchange",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1204,
                        "src": "2766:13:1"
                      },
                      "referencedDeclaration": 1204,
                      "src": "2766:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      }
                    },
                    "id": 1324,
                    "nodeType": "ArrayTypeName",
                    "src": "2766:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$1204_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:24:1"
            },
            "scope": 2277,
            "src": "2713:303:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "3094:203:1",
              "statements": [
                {
                  "assignments": [
                    1374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "offers",
                      "nameLocation": "3125:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "3105:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1372,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1371,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1217,
                            "src": "3105:10:1"
                          },
                          "referencedDeclaration": 1217,
                          "src": "3105:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ArrayTypeName",
                        "src": "3105:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1381,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1379,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "3151:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3134:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Offer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1376,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1375,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1217,
                            "src": "3138:10:1"
                          },
                          "referencedDeclaration": 1217,
                          "src": "3138:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ArrayTypeName",
                        "src": "3138:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3105:63:1"
                },
                {
                  "body": {
                    "expression": {
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1392,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "3236:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                          }
                        },
                        "id": 1396,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1393,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "3243:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3245:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3243:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "3236:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 1397,
                          "name": "_erc20Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1261,
                          "src": "3250:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                          }
                        },
                        "id": 1399,
                        "indexExpression": {
                          "id": 1398,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "3263:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3250:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                        }
                      },
                      "src": "3236:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "id": 1401,
                    "nodeType": "ExpressionStatement",
                    "src": "3236:29:1"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1386,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "3195:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1387,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "3200:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3195:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1402,
                  "initializationExpression": {
                    "assignments": [
                      1383
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3188:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "3183:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1385,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3192:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3183:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3218:3:1",
                      "subExpression": {
                        "id": 1389,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1383,
                        "src": "3218:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1391,
                    "nodeType": "ExpressionStatement",
                    "src": "3218:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3179:86:1"
                },
                {
                  "expression": {
                    "id": 1403,
                    "name": "offers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1374,
                    "src": "3283:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1369,
                  "id": 1404,
                  "nodeType": "Return",
                  "src": "3276:13:1"
                }
              ]
            },
            "functionSelector": "28069dfd",
            "id": 1406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferAll",
            "nameLocation": "3033:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:1"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "3074:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1366,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1365,
                        "name": "ERC20Offer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1217,
                        "src": "3074:10:1"
                      },
                      "referencedDeclaration": 1217,
                      "src": "3074:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      }
                    },
                    "id": 1367,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$1217_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:21:1"
            },
            "scope": 2277,
            "src": "3024:273:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "3396:54:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1414,
                      "name": "_erc20Exchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "3414:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                      }
                    },
                    "id": 1416,
                    "indexExpression": {
                      "id": 1415,
                      "name": "_exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1408,
                      "src": "3430:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3414:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "functionReturnParameters": 1413,
                  "id": 1417,
                  "nodeType": "Return",
                  "src": "3407:35:1"
                }
              ]
            },
            "functionSelector": "6f2663d4",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeById",
            "nameLocation": "3314:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "3340:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "3335:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:18:1"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "3375:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                  },
                  "typeName": {
                    "id": 1411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1410,
                      "name": "ERC20Exchange",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1204,
                      "src": "3375:13:1"
                    },
                    "referencedDeclaration": 1204,
                    "src": "3375:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:1"
            },
            "scope": 2277,
            "src": "3305:145:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "3540:48:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1427,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "3558:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1429,
                    "indexExpression": {
                      "id": 1428,
                      "name": "_offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "3571:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3558:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "functionReturnParameters": 1426,
                  "id": 1430,
                  "nodeType": "Return",
                  "src": "3551:29:1"
                }
              ]
            },
            "functionSelector": "cddcc539",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferById",
            "nameLocation": "3467:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3490:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "3485:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:15:1"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "3522:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer"
                  },
                  "typeName": {
                    "id": 1424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1423,
                      "name": "ERC20Offer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1217,
                      "src": "3522:10:1"
                    },
                    "referencedDeclaration": 1217,
                    "src": "3522:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:19:1"
            },
            "scope": 2277,
            "src": "3458:130:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1591,
              "nodeType": "Block",
              "src": "4021:1355:1",
              "statements": [
                {
                  "assignments": [
                    1443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1443,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4039:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4032:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1442,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1441,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "4032:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "4032:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1448,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1445,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "4054:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1221,
                        "src": "4054:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1444,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "4047:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1452,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1438,
                              "src": "4116:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1450,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "4100:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "4100:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4100:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1454,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4127:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1225,
                          "src": "4127:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4100:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        }
                      ],
                      "id": 1449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4092:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1461,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4229:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1227,
                          "src": "4229:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4243:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4229:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:79:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4221:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:105:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1471,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "4366:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4382:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4374:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4374:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1476,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "4389:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1225,
                        "src": "4389:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1468,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "4347:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "4347:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "4347:55:1"
                },
                {
                  "assignments": [
                    1483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1483,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "4510:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4489:29:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      },
                      "typeName": {
                        "id": 1482,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1481,
                          "name": "ERC20Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1204,
                          "src": "4489:13:1"
                        },
                        "referencedDeclaration": 1204,
                        "src": "4489:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store exchange and initial offer",
                  "id": 1484,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4489:29:1"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1485,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4529:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1193,
                      "src": "4529:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1488,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4553:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1219,
                      "src": "4553:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4529:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:42:1"
                },
                {
                  "expression": {
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1492,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4582:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1195,
                      "src": "4582:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1495,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "4608:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4582:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:32:1"
                },
                {
                  "expression": {
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1498,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4625:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1197,
                      "src": "4625:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1501,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4657:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1221,
                      "src": "4657:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4625:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:58:1"
                },
                {
                  "expression": {
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1505,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4694:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1199,
                      "src": "4694:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1508,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4723:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1223,
                      "src": "4723:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4694:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1511,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:52:1"
                },
                {
                  "expression": {
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1512,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4757:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1201,
                      "src": "4757:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1515,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4782:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "4782:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:37:1"
                },
                {
                  "expression": {
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1519,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4805:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "4805:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1522,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4822:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1227,
                      "src": "4822:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4805:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:28:1"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4847:21:1",
                    "subExpression": {
                      "id": 1526,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "4847:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:21:1"
                },
                {
                  "expression": {
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1529,
                        "name": "_erc20Exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "4879:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "id": 1530,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "4895:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4879:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1532,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "4918:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "src": "4879:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:1"
                },
                {
                  "assignments": [
                    1537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1537,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "4957:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "4939:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1536,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1535,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "4939:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "4939:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1538,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4939:23:1"
                },
                {
                  "expression": {
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1539,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "4973:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "4973:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1542,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "4992:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4973:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:38:1"
                },
                {
                  "expression": {
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1545,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5022:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "5022:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 1548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5040:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "5022:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:24:1"
                },
                {
                  "expression": {
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1551,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5057:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "5057:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1554,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "5080:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5057:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:29:1"
                },
                {
                  "expression": {
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1557,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5097:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "5097:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1560,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "5112:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "5112:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5097:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:27:1"
                },
                {
                  "expression": {
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1564,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5135:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1566,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "5135:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1567,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "5149:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$1204_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "5149:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5135:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:28:1"
                },
                {
                  "expression": {
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5176:18:1",
                    "subExpression": {
                      "id": 1571,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "5176:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:18:1"
                },
                {
                  "expression": {
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1574,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "5205:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1576,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "5205:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1577,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "5221:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:32:1"
                },
                {
                  "expression": {
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1580,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "5248:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1582,
                      "indexExpression": {
                        "id": 1581,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "5261:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5248:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1583,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "5281:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "5248:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1587,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "5330:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1588,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "5351:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1586,
                      "name": "ERC20TokenExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1267,
                      "src": "5304:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "EmitStatement",
                  "src": "5299:69:1"
                }
              ]
            },
            "documentation": {
              "id": 1433,
              "nodeType": "StructuredDocumentation",
              "src": "3634:276:1",
              "text": " @dev Owner of token can create Exchange of ERC20\n @dev exchangeTokenAddress address of exchangeToken(ERC20) \n @dev offerTokenAddress address of exchangeToken(ERC20) \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d56aa3b4",
            "id": 1592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateERC20TokenExchange",
            "nameLocation": "3925:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3989:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "3950:44:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                  },
                  "typeName": {
                    "id": 1435,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1434,
                      "name": "CreateERC20TokenExchangeRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1228,
                      "src": "3950:31:1"
                    },
                    "referencedDeclaration": 1228,
                    "src": "3950:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$1228_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4004:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "3996:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3949:62:1"
            },
            "returnParameters": {
              "id": 1440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4021:0:1"
            },
            "scope": 2277,
            "src": "3916:1460:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "5697:957:1",
              "statements": [
                {
                  "assignments": [
                    1603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1603,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5715:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "5708:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1602,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1601,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "5708:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "5708:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1611,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1605,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "5730:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1608,
                          "indexExpression": {
                            "expression": {
                              "id": 1606,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1596,
                              "src": "5746:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "5746:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5730:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "5730:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1604,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "5723:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1615,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1598,
                              "src": "5831:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1613,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "5815:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "5815:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1617,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1596,
                                  "src": "5843:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1234,
                                "src": "5843:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1619,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1596,
                                  "src": "5857:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1232,
                                "src": "5857:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5843:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1622,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5842:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5815:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5793:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5793:177:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1626,
                  "nodeType": "ExpressionStatement",
                  "src": "5793:177:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1628,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "5989:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "5989:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6003:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5989:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6006:81:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5981:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5981:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "5981:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1638,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "6120:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1641,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6136:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1643,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "6143:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "6143:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1645,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "6157:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1232,
                          "src": "6157:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6143:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1635,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1603,
                        "src": "6101:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "6101:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:69:1"
                },
                {
                  "assignments": [
                    1653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1653,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "6261:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "6243:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1651,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "6243:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "6243:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store buying offer",
                  "id": 1654,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:23:1"
                },
                {
                  "expression": {
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1655,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6277:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "6277:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1658,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6296:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1230,
                      "src": "6296:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6277:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:35:1"
                },
                {
                  "expression": {
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1662,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6323:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "6323:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "425559",
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6341:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                        "typeString": "literal_string \"BUY\""
                      },
                      "value": "BUY"
                    },
                    "src": "6323:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "6323:23:1"
                },
                {
                  "expression": {
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1668,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6357:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "6357:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1671,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "6380:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6357:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1673,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:29:1"
                },
                {
                  "expression": {
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1674,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6397:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "6397:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1677,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6412:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1232,
                      "src": "6412:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6397:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1680,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:27:1"
                },
                {
                  "expression": {
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1681,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6435:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1683,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "6435:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1684,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "6449:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1234,
                      "src": "6449:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6435:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1687,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:25:1"
                },
                {
                  "expression": {
                    "id": 1689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6473:18:1",
                    "subExpression": {
                      "id": 1688,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "6473:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1690,
                  "nodeType": "ExpressionStatement",
                  "src": "6473:18:1"
                },
                {
                  "expression": {
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1691,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "6502:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "6502:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1694,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "6518:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6502:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:32:1"
                },
                {
                  "expression": {
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1697,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "6545:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1699,
                      "indexExpression": {
                        "id": 1698,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "6558:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6545:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1700,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "6578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "6545:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1704,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "6629:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1703,
                      "name": "ERC20TokenBuyingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "6601:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "EmitStatement",
                  "src": "6596:50:1"
                }
              ]
            },
            "documentation": {
              "id": 1593,
              "nodeType": "StructuredDocumentation",
              "src": "5384:204:1",
              "text": " @dev someone can create buying offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "5f881441",
            "id": 1708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenBuyingOffer",
            "nameLocation": "5603:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "5665:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "5630:40:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 1595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1594,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1235,
                      "src": "5630:27:1"
                    },
                    "referencedDeclaration": 1235,
                    "src": "5630:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5680:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "5672:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5672:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:58:1"
            },
            "returnParameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:1"
            },
            "scope": 2277,
            "src": "5594:1060:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "6984:935:1",
              "statements": [
                {
                  "assignments": [
                    1719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1719,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7002:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "6995:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1718,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1717,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "6995:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "6995:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1727,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1721,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "7017:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1724,
                          "indexExpression": {
                            "expression": {
                              "id": 1722,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "7033:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "7033:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7017:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "7017:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1720,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "7010:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6995:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1731,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "7121:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1729,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1719,
                              "src": "7105:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "7105:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7105:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1733,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "7132:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1232,
                          "src": "7132:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7105:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7083:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7083:162:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "7083:162:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1740,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "7264:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1234,
                          "src": "7264:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7278:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7264:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 1739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7256:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:108:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1750,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "7396:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7412:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7404:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7404:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7404:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1755,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "7419:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1232,
                        "src": "7419:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1747,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1719,
                        "src": "7377:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "7377:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1758,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:55:1"
                },
                {
                  "assignments": [
                    1762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1762,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "7524:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "7506:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1761,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1760,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "7506:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "7506:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store selling offer",
                  "id": 1763,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7506:23:1"
                },
                {
                  "expression": {
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1764,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7540:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "7540:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1767,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7559:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1230,
                      "src": "7559:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7540:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1770,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:35:1"
                },
                {
                  "expression": {
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1771,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7586:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1773,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "7586:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7604:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "7586:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1776,
                  "nodeType": "ExpressionStatement",
                  "src": "7586:24:1"
                },
                {
                  "expression": {
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1777,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7621:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "7621:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1780,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "7644:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7621:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:29:1"
                },
                {
                  "expression": {
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1783,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7661:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "7661:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1786,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7676:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1232,
                      "src": "7676:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7661:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1789,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:27:1"
                },
                {
                  "expression": {
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1790,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7699:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "7699:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1793,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "7713:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 1794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1234,
                      "src": "7713:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7699:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:25:1"
                },
                {
                  "expression": {
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7737:18:1",
                    "subExpression": {
                      "id": 1797,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "7737:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "7737:18:1"
                },
                {
                  "expression": {
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1800,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7766:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 1802,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1208,
                      "src": "7766:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1803,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "7782:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7766:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:32:1"
                },
                {
                  "expression": {
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1806,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "7809:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1808,
                      "indexExpression": {
                        "id": 1807,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7822:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7809:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1809,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "7842:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "7809:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1813,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7894:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1812,
                      "name": "ERC20TokenSellingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "7865:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "EmitStatement",
                  "src": "7860:51:1"
                }
              ]
            },
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "6662:212:1",
              "text": " @dev owner of token can create selling offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d50853e8",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenSellingOffer",
            "nameLocation": "6889:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "6952:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "6917:40:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 1711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1710,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1235,
                      "src": "6917:27:1"
                    },
                    "referencedDeclaration": 1235,
                    "src": "6917:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$1235_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "6967:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "6959:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6959:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6916:58:1"
            },
            "returnParameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6984:0:1"
            },
            "scope": 2277,
            "src": "6880:1039:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1920,
              "nodeType": "Block",
              "src": "8188:1001:1",
              "statements": [
                {
                  "assignments": [
                    1828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1828,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "8217:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1920,
                      "src": "8199:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1826,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "8199:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "8199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1833,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1829,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "8225:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1832,
                    "indexExpression": {
                      "expression": {
                        "id": 1830,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1821,
                        "src": "8238:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "8238:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8225:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8199:53:1"
                },
                {
                  "assignments": [
                    1836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1836,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "8270:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1920,
                      "src": "8263:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1834,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "8263:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "8263:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1844,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1838,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "8285:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1841,
                          "indexExpression": {
                            "expression": {
                              "id": 1839,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1821,
                              "src": "8301:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1237,
                            "src": "8301:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8285:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "8285:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1837,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "8278:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8278:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8263:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1846,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "8356:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1212,
                          "src": "8356:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1848,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1823,
                          "src": "8380:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8356:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8388:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        }
                      ],
                      "id": 1845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8348:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:101:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1852,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:101:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1854,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "8468:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "8468:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1856,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "8488:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1237,
                          "src": "8488:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8468:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8506:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8460:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:121:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1866,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1828,
                                    "src": "8641:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 1867,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "8641:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1864,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8624:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8624:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8624:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1863,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8614:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8614:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 1873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8689:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 1871,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8672:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8672:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8672:23:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1870,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8662:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8662:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8614:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:71:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        }
                      ],
                      "id": 1862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8592:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8592:202:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "8592:202:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1885,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8853:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 1884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8845:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1883,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8845:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8845:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1881,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1836,
                              "src": "8829:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "8829:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1888,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1828,
                                  "src": "8864:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 1889,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "8864:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1890,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1828,
                                  "src": "8878:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 1891,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "8878:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8864:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1893,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8863:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8829:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8906:74:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8807:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8807:184:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "8807:184:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1901,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1823,
                        "src": "9027:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1902,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "9035:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "9035:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1904,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "9049:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "9049:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9035:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1898,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "9012:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "9012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:50:1"
                },
                {
                  "expression": {
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9085:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1909,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "9092:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 1912,
                      "indexExpression": {
                        "expression": {
                          "id": 1910,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1821,
                          "src": "9105:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "9105:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9092:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1916,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1821,
                          "src": "9167:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "9167:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1915,
                      "name": "ERC20TokenBuyingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1279,
                      "src": "9137:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9137:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "EmitStatement",
                  "src": "9132:49:1"
                }
              ]
            },
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "7927:161:1",
              "text": " @dev creator of buying offer can cancel his ERC20Token BuyingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "2584fab6",
            "id": 1921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenBuyingOffer",
            "nameLocation": "8103:27:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "8157:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1921,
                  "src": "8131:31:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 1820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1819,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1240,
                      "src": "8131:18:1"
                    },
                    "referencedDeclaration": 1240,
                    "src": "8131:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "8172:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1921,
                  "src": "8164:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:49:1"
            },
            "returnParameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:1"
            },
            "scope": 2277,
            "src": "8094:1095:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2017,
              "nodeType": "Block",
              "src": "9456:968:1",
              "statements": [
                {
                  "assignments": [
                    1932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1932,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "9485:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "9467:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 1931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1930,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "9467:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "9467:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1937,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1933,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "9493:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 1936,
                    "indexExpression": {
                      "expression": {
                        "id": 1934,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "9506:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 1935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "9506:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9493:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9467:53:1"
                },
                {
                  "assignments": [
                    1940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1940,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9538:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "9531:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1939,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1938,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "9531:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "9531:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1948,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1942,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "9553:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 1945,
                          "indexExpression": {
                            "expression": {
                              "id": 1943,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "9569:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 1944,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1237,
                            "src": "9569:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9553:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "9553:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "9546:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9531:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1950,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "9627:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1212,
                          "src": "9627:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1952,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "9651:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9627:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9659:61:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        }
                      ],
                      "id": 1949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9619:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9619:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "9619:102:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1958,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "9740:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "9740:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1960,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "9760:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1237,
                          "src": "9760:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9740:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:75:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 1957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9732:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "9732:122:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1970,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1932,
                                    "src": "9914:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 1971,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "9914:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1968,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9897:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9897:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9897:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1967,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9887:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 1977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9962:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 1975,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9945:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9945:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9945:24:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1974,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9935:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9935:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9887:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9986:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        }
                      ],
                      "id": 1966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9865:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:205:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:205:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1989,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "10127:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 1988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10119:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1987,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10119:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1985,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "10103:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "10103:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10103:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1992,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "10137:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 1993,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "10137:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10103:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 1995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10165:75:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 1984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:170:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:170:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2001,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "10287:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2002,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "10295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2003,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "10295:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1998,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "10272:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "10272:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2005,
                  "nodeType": "ExpressionStatement",
                  "src": "10272:36:1"
                },
                {
                  "expression": {
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10319:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2006,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "10326:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2009,
                      "indexExpression": {
                        "expression": {
                          "id": 2007,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "10339:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "10339:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10326:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2013,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "10402:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1239,
                        "src": "10402:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2012,
                      "name": "ERC20TokenSellingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "10371:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10371:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "EmitStatement",
                  "src": "10366:50:1"
                }
              ]
            },
            "documentation": {
              "id": 1922,
              "nodeType": "StructuredDocumentation",
              "src": "9197:158:1",
              "text": " @dev creator of selling offer can cancel his ERC20 SellingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "5415b227",
            "id": 2018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenSellingOffer",
            "nameLocation": "9370:28:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "9425:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "9399:31:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 1924,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1923,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1240,
                      "src": "9399:18:1"
                    },
                    "referencedDeclaration": 1240,
                    "src": "9399:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$1240_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "9440:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "9432:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9398:49:1"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9456:0:1"
            },
            "scope": 2277,
            "src": "9361:1063:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2145,
              "nodeType": "Block",
              "src": "10668:1222:1",
              "statements": [
                {
                  "assignments": [
                    2029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2029,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "10697:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10679:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 2028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2027,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "10679:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "10679:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2030,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "10705:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 2033,
                    "indexExpression": {
                      "expression": {
                        "id": 2031,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "10718:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1244,
                      "src": "10718:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10705:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:53:1"
                },
                {
                  "assignments": [
                    2037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "10750:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10743:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2035,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "10743:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "10743:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2039,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "10770:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2042,
                          "indexExpression": {
                            "expression": {
                              "id": 2040,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "10786:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2041,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "10786:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10770:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "10770:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2038,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "10763:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10763:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:79:1"
                },
                {
                  "assignments": [
                    2048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2048,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "10840:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "10833:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2046,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "10833:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "10833:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2056,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2050,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "10863:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2053,
                          "indexExpression": {
                            "expression": {
                              "id": 2051,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "10879:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "10879:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10863:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "10863:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2049,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "10856:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10833:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2058,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "10939:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "10939:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2060,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "10959:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1242,
                          "src": "10959:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10939:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10977:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 2057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10931:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10931:116:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:116:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2070,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2029,
                                    "src": "11107:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "11107:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2068,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11090:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11090:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11090:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2067,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11080:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11080:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11155:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 2075,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11138:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11138:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11138:24:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2074,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11128:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11128:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11080:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        }
                      ],
                      "id": 2066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11058:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:199:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "11058:199:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2087,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2024,
                              "src": "11311:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2085,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2037,
                              "src": "11290:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11290:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11290:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2089,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2029,
                                  "src": "11323:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "11323:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 2091,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2029,
                                  "src": "11337:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2092,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "11337:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11323:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2094,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11322:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11290:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11365:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11268:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11268:177:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "11268:177:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2104,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "11512:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 2103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11504:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2102,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11504:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11504:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2100,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "11480:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11480:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11480:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2107,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11522:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "11522:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11480:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11549:69:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11458:171:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2112,
                  "nodeType": "ExpressionStatement",
                  "src": "11458:171:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2116,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "11666:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2117,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "11674:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "11674:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2119,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11696:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "11696:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2121,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "11710:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "11710:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11696:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2113,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "11642:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "11642:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2129,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "11758:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2130,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2029,
                          "src": "11766:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "11766:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2126,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "11735:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "11735:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11735:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2133,
                  "nodeType": "ExpressionStatement",
                  "src": "11735:44:1"
                },
                {
                  "expression": {
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11790:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2134,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "11797:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2137,
                      "indexExpression": {
                        "expression": {
                          "id": 2135,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2022,
                          "src": "11810:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "11810:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11797:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2141,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2022,
                          "src": "11868:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "11868:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2140,
                      "name": "ERC20TokenFromOfferBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "11842:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2144,
                  "nodeType": "EmitStatement",
                  "src": "11837:45:1"
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "10432:147:1",
              "text": " @dev someone can buy token(ERC20) from selling offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "969de53b",
            "id": 2146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyERC20TokenFromOffer",
            "nameLocation": "10594:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "10637:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "10617:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 2021,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2020,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1245,
                      "src": "10617:12:1"
                    },
                    "referencedDeclaration": 1245,
                    "src": "10617:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$1245_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2024,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "10652:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "10644:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10644:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10616:43:1"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10668:0:1"
            },
            "scope": 2277,
            "src": "10585:1305:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2275,
              "nodeType": "Block",
              "src": "12140:1250:1",
              "statements": [
                {
                  "assignments": [
                    2157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2157,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "12169:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12151:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 2156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2155,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1217,
                          "src": "12151:10:1"
                        },
                        "referencedDeclaration": 1217,
                        "src": "12151:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2158,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "12177:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 2161,
                    "indexExpression": {
                      "expression": {
                        "id": 2159,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "12190:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1244,
                      "src": "12190:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12177:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12151:53:1"
                },
                {
                  "assignments": [
                    2165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2165,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "12222:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12215:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2163,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "12215:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "12215:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2173,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2167,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "12242:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2170,
                          "indexExpression": {
                            "expression": {
                              "id": 2168,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "12258:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "12258:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12242:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1199,
                        "src": "12242:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2166,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "12235:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12235:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12215:79:1"
                },
                {
                  "assignments": [
                    2176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2176,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "12312:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2275,
                      "src": "12305:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2174,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3711,
                          "src": "12305:6:1"
                        },
                        "referencedDeclaration": 3711,
                        "src": "12305:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2184,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2178,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "12335:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$1204_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 2181,
                          "indexExpression": {
                            "expression": {
                              "id": 2179,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "12351:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "12351:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12335:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$1204_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1197,
                        "src": "12335:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2177,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "12328:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12328:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2186,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "12411:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1206,
                          "src": "12411:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2188,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2150,
                            "src": "12431:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1242,
                          "src": "12431:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12411:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 2185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12403:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12403:117:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2193,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:117:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2198,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2157,
                                    "src": "12580:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 2199,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1210,
                                  "src": "12580:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2196,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12563:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12563:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12563:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2195,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12553:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12553:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 2205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12628:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 2203,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12611:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12611:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12611:23:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2202,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12601:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12601:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12553:82:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12651:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12531:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12531:198:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "12531:198:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2217,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "12791:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$2277",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 2216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12783:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2215,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12783:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12783:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2213,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2165,
                              "src": "12762:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "12762:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12762:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2220,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2157,
                                  "src": "12802:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2221,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1216,
                                "src": "12802:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 2222,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2157,
                                  "src": "12816:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 2223,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1214,
                                "src": "12816:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12802:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2225,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12801:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12762:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12844:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12740:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12740:185:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2229,
                  "nodeType": "ExpressionStatement",
                  "src": "12740:185:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2233,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2157,
                                "src": "12984:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                                  "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                }
                              },
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creatorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1212,
                              "src": "12984:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2231,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "12960:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3711",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "12960:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12960:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2236,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13009:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "13009:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12960:61:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13036:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 2230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12938:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12938:179:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2241,
                  "nodeType": "ExpressionStatement",
                  "src": "12938:179:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2245,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13150:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "13150:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2247,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13172:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1216,
                          "src": "13172:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 2249,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2157,
                            "src": "13186:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1214,
                          "src": "13186:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13172:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2242,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2165,
                        "src": "13130:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "13130:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13130:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2257,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13238:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1212,
                        "src": "13238:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2259,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "13260:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2260,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2157,
                          "src": "13268:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$1217_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1214,
                        "src": "13268:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2254,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2176,
                        "src": "13211:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3692,
                      "src": "13211:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:70:1"
                },
                {
                  "expression": {
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "13292:34:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2264,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "13299:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$1217_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 2267,
                      "indexExpression": {
                        "expression": {
                          "id": 2265,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2150,
                          "src": "13312:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "13312:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13299:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$1217_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "13292:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2271,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2150,
                          "src": "13368:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "13368:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2270,
                      "name": "ERC20TokenFromOfferSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "13344:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13344:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2274,
                  "nodeType": "EmitStatement",
                  "src": "13339:43:1"
                }
              ]
            },
            "documentation": {
              "id": 2147,
              "nodeType": "StructuredDocumentation",
              "src": "11896:154:1",
              "text": " @dev owner of token can sell token(ERC20) from buying offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "e9851111",
            "id": 2276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SellERC20TokenFromOffer",
            "nameLocation": "12065:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "12109:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "12089:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$1245_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 2149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2148,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1245,
                      "src": "12089:12:1"
                    },
                    "referencedDeclaration": 1245,
                    "src": "12089:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$1245_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12124:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2276,
                  "src": "12116:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12116:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12088:43:1"
            },
            "returnParameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12140:0:1"
            },
            "scope": 2277,
            "src": "12056:1334:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2278,
        "src": "180:13213:1",
        "usedErrors": []
      }
    ],
    "src": "42:13351:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0x96ed5f54696f3eb2323e78c776ded20e24a0ddbfe707dfc11dd0de974789d6bb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenBuyingOfferCanceled",
          "type": "event"
        },
        "0xab9887ec7581399be45c8d57b068532854a80523f0728e10e7d1ec8b211bf2d9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenBuyingOfferPlaced",
          "type": "event"
        },
        "0xc9d070d04e9cdf59bbe1f8c1888df22780e9a769051ecae7049fdebd64805719": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "initialOfferId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenExchangeCreated",
          "type": "event"
        },
        "0x86d25bd27e55d1b7c838591f76c447846cd021f68d4df79ccc9c8d267a0c6204": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenFromOfferBought",
          "type": "event"
        },
        "0xb546f371a0e2970e03a2a9397a8965f347a3216b70fb3f3da67e8ba0a9c8900c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenFromOfferSold",
          "type": "event"
        },
        "0x8d0df4f0232f5407a296ed885c296c859d94584a4d45be9aab5286605108e7fa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenSellingOfferCanceled",
          "type": "event"
        },
        "0x43f199d36aa09ee55761dfb7de2a3feb37719fb3aee5302d9d41a419ab319239": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "name": "ERC20TokenSellingOfferPlaced",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8F4C9F5BC208280b1544Aa8C7a3f6Bfd06e28707",
      "transactionHash": "0xd981d49fe21db8d3689d91161401800009b80441f30f9bf989d96ffbf994efa3"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-16T14:40:39.200Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Exchange Contract for ERC20 Token",
    "kind": "dev",
    "methods": {
      "BuyERC20TokenFromOffer((uint256,uint256),address)": {
        "details": "someone can buy token(ERC20) from selling offerexchangeTokenId id of exchange offerId id of offer"
      },
      "CancelERC20TokenBuyingOffer((uint256,uint256),address)": {
        "details": "creator of buying offer can cancel his ERC20Token BuyingOfferexchangeTokenId id of exchange offerId id of offer"
      },
      "CancelERC20TokenSellingOffer((uint256,uint256),address)": {
        "details": "creator of selling offer can cancel his ERC20 SellingOfferexchangeTokenId id of exchange offerId id of offer"
      },
      "CreateERC20TokenExchange((string,address,address,uint256,uint256),address)": {
        "details": "Owner of token can create Exchange of ERC20exchangeTokenAddress address of exchangeToken(ERC20) offerTokenAddress address of exchangeToken(ERC20) amount amount of Exchangeprice token price of Exchange"
      },
      "PlaceERC20TokenBuyingOffer((uint256,uint256,uint256),address)": {
        "details": "someone can create buying offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange"
      },
      "PlaceERC20TokenSellingOffer((uint256,uint256,uint256),address)": {
        "details": "owner of token can create selling offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange"
      },
      "SellERC20TokenFromOffer((uint256,uint256),address)": {
        "details": "owner of token can sell token(ERC20) from buying offerexchangeTokenId id of exchange offerId id of offer"
      },
      "constructor": {
        "details": "Constructor Function"
      }
    },
    "stateVariables": {
      "_erc20ExchangeCount": {
        "details": "count variables for ERC20Token exchange and offer mapping"
      },
      "_erc20Exchanges": {
        "details": "variables for storing ERC20TOken Exchange and Offer"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}