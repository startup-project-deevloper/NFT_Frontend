{
  "contractName": "MockSongsManager",
  "abi": [
    {
      "inputs": [],
      "name": "SONG_CONTRACT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registeredSong",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundsManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "song",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SONG_CONTRACT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundsManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"song\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registeredSong\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/MockSongsManager.sol\":\"MockSongsManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x084f583de2c714665b0304529fe8b826a2809f29d03314e4dd9eea926e4bb0f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b64becd1da9fe30ecdb65cf57e1da968bcbbecd6a4a3fa55bcc7c23568d482c0\",\"dweb:/ipfs/QmcXnRpWL7P9kEe15LZ5yHV2CDLE2CNv9sBRqVnvVQLr5T\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e33ac5e378143f0348b1b903a0d2e02e617bed6d971df8ec7d886cca0ab3107e\",\"dweb:/ipfs/QmeEXQ8FLWvLZKVwmfEW1n9Wuv7CqEn66SW9rGHakjaaUb\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/FundsManager.sol\":{\"keccak256\":\"0x8b95d16b52c686ad9c4c28a7f9d55061302e7d35fabae25c890f40aa2c67357a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec06af146a5bddf5d7128a6e22bf64c54a8ce934029f828cb52b6dea2723a880\",\"dweb:/ipfs/QmbxiJTEviAm7Dcb66Eff4do7M5XA6BLaELFp6qdTAfYdK\"]},\"project:/contracts/mocks/MockSong.sol\":{\"keccak256\":\"0x84a6f17c50d34b241650655c063332979c7d16951df72fc7e7d0ea17417b29f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4574d79477da41e9abad5a596221fce47a28b4ce57aab37982914be6230fbdaf\",\"dweb:/ipfs/QmQaSYsvq8oNJXzUWEPHAbPppNg6YRBSFsnmrwb27LwMdj\"]},\"project:/contracts/mocks/MockSongsManager.sol\":{\"keccak256\":\"0x90c6b4f7a27c5eaa750a952c1ac616bf0f3bbdf645ab346065081625fb3f11c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57fd71afd2b36a455642121c9c7b81b7549058c8b292990f63260535ec219ce3\",\"dweb:/ipfs/QmU2scDPXx69xtGASB1wwhfDTnMsqQ8hQjc8yXphZaJutR\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061061d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063485cc955146100515780634ba263161461006d578063ce32adb61461008b578063f529fca0146100a9575b600080fd5b61006b60048036038101906100669190610455565b6100b3565b005b610075610138565b60405161008291906104f1565b60405180910390f35b61009361015c565b6040516100a091906104d6565b60405180910390f35b6100b1610182565b005b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b91681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ad600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661036b565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d66de860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161026891906104d6565b600060405180830381600087803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f2ff15d7f21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161033792919061050c565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b50505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290610535565b60405180910390fd5b919050565b60008135905061044f816105d0565b92915050565b6000806040838503121561046c5761046b6105a2565b5b600061047a85828601610440565b925050602061048b85828601610440565b9150509250929050565b61049e81610566565b82525050565b6104ad81610578565b82525050565b60006104c0601683610555565b91506104cb826105a7565b602082019050919050565b60006020820190506104eb6000830184610495565b92915050565b600060208201905061050660008301846104a4565b92915050565b600060408201905061052160008301856104a4565b61052e6020830184610495565b9392505050565b6000602082019050818103600083015261054e816104b3565b9050919050565b600082825260208201905092915050565b600061057182610582565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6105d981610566565b81146105e457600080fd5b5056fea2646970667358221220ac989269c6746ea410d994a9f26b808b9a74807286b106af49e10c523e1e02cc64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063485cc955146100515780634ba263161461006d578063ce32adb61461008b578063f529fca0146100a9575b600080fd5b61006b60048036038101906100669190610455565b6100b3565b005b610075610138565b60405161008291906104f1565b60405180910390f35b61009361015c565b6040516100a091906104d6565b60405180910390f35b6100b1610182565b005b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b91681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ad600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661036b565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d66de860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161026891906104d6565b600060405180830381600087803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f2ff15d7f21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161033792919061050c565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b50505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290610535565b60405180910390fd5b919050565b60008135905061044f816105d0565b92915050565b6000806040838503121561046c5761046b6105a2565b5b600061047a85828601610440565b925050602061048b85828601610440565b9150509250929050565b61049e81610566565b82525050565b6104ad81610578565b82525050565b60006104c0601683610555565b91506104cb826105a7565b602082019050919050565b60006020820190506104eb6000830184610495565b92915050565b600060208201905061050660008301846104a4565b92915050565b600060408201905061052160008301856104a4565b61052e6020830184610495565b9392505050565b6000602082019050818103600083015261054e816104b3565b9050919050565b600082825260208201905092915050565b600061057182610582565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6105d981610566565b81146105e457600080fd5b5056fea2646970667358221220ac989269c6746ea410d994a9f26b808b9a74807286b106af49e10c523e1e02cc64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3593:54",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:54"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:54"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:54",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:54",
                "type": ""
              }
            ],
            "src": "7:139:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "235:391:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "281:83:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "283:77:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "283:79:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "283:79:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "256:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "265:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "252:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "252:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "277:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "248:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "248:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "245:2:54"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "374:117:54",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "389:15:54",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "403:1:54",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "393:6:54",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "418:63:54",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "453:9:54"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "464:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "449:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "449:22:54"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "473:7:54"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "428:20:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "428:53:54"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "418:6:54"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "501:118:54",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "516:16:54",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "530:2:54",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "520:6:54",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "546:63:54",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "581:9:54"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "592:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "577:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "577:22:54"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "601:7:54"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "556:20:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:53:54"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "546:6:54"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "197:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "208:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "220:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "228:6:54",
                "type": ""
              }
            ],
            "src": "152:474:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:53:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "714:3:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "737:5:54"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "719:17:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:24:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "707:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:37:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "707:37:54"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "685:5:54",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "692:3:54",
                "type": ""
              }
            ],
            "src": "632:118:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "821:53:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "838:3:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "861:5:54"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "843:17:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:24:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "831:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "831:37:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "831:37:54"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "809:5:54",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "816:3:54",
                "type": ""
              }
            ],
            "src": "756:118:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1026:220:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1036:74:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1102:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:2:54",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1043:58:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:67:54"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1036:3:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1208:3:54"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                      "nodeType": "YulIdentifier",
                      "src": "1119:88:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:93:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1119:93:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1221:19:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1232:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1228:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1228:12:54"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1221:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1014:3:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1022:3:54",
                "type": ""
              }
            ],
            "src": "880:366:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1350:124:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1360:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1372:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1383:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1360:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1440:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1453:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1464:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1449:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1449:17:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1396:43:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:71:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:71:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1322:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1334:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1345:4:54",
                "type": ""
              }
            ],
            "src": "1252:222:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1578:124:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1600:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1611:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1596:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1588:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1668:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1681:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1692:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1677:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1677:17:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1624:43:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:71:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1624:71:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1550:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1562:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1573:4:54",
                "type": ""
              }
            ],
            "src": "1480:222:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:206:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1844:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1856:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1867:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1852:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1844:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1924:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1937:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1948:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1933:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1933:17:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1880:43:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:71:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1880:71:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2005:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2018:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2029:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1961:43:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:72:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1961:72:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1798:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1810:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1818:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1829:4:54",
                "type": ""
              }
            ],
            "src": "1708:332:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2217:248:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2227:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2239:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2250:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2227:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2274:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2285:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2270:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2270:17:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2293:4:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2299:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2289:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2289:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2263:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2263:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2319:139:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2453:4:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2327:124:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:131:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2319:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2197:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2212:4:54",
                "type": ""
              }
            ],
            "src": "2046:419:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2511:35:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:19:54",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2537:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2531:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2531:9:54"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2521:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2504:6:54",
                "type": ""
              }
            ],
            "src": "2471:75:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2648:73:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2665:3:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2670:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2658:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:19:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2658:19:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2686:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2705:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2710:4:54",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2701:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2701:14:54"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2686:11:54"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2620:3:54",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2625:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2636:11:54",
                "type": ""
              }
            ],
            "src": "2552:169:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2772:51:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2782:35:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2811:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2793:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:24:54"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2782:7:54"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2754:5:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2764:7:54",
                "type": ""
              }
            ],
            "src": "2727:96:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2874:32:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2884:16:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2895:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2884:7:54"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2856:5:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2866:7:54",
                "type": ""
              }
            ],
            "src": "2829:77:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2957:81:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2967:65:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2982:5:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2989:42:54",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2978:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2978:54:54"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2967:7:54"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2939:5:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2949:7:54",
                "type": ""
              }
            ],
            "src": "2912:126:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3133:28:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3150:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:1:54",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3143:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:12:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3143:12:54"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "3044:117:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3256:28:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3273:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:1:54",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3266:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:12:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3266:12:54"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "3167:117:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3396:66:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3418:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3426:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3414:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:14:54"
                      },
                      {
                        "hexValue": "455243313136373a20637265617465206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3430:24:54",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3407:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3407:48:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3407:48:54"
                }
              ]
            },
            "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3388:6:54",
                "type": ""
              }
            ],
            "src": "3290:172:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3511:79:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3568:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3577:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3580:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3570:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3570:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3570:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3534:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3559:5:54"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3541:17:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3541:24:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3531:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3531:35:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3524:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:43:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3521:2:54"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3504:5:54",
                "type": ""
              }
            ],
            "src": "3468:122:54"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1167: create failed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "193:568:46:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "193:568:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;396:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;225:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;534:225;;;:::i;:::-;;396:132;487:12;471:13;;:28;;;;;;;;;;;;;;;;;;517:4;509:5;;:12;;;;;;;;;;;;;;;;;;396:132;;:::o;225:66::-;265:26;225:66;:::o;360:29::-;;;;;;;;;;;;;:::o;534:225::-;594:19;607:5;;;;;;;;;;;594:12;:19::i;:::-;577:14;;:36;;;;;;;;;;;;;;;;;;632:14;;;;;;;;;;;623:35;;;659:13;;;;;;;;;;623:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:13;;;;;;;;;;683:38;;;265:26;737:14;;;;;;;;;;;683:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:225::o;906:515:13:-;963:16;1031:4;1025:11;1061:66;1056:3;1049:79;1174:14;1168:4;1164:25;1157:4;1152:3;1148:14;1141:49;1226:66;1219:4;1214:3;1210:14;1203:90;1333:4;1328:3;1325:1;1318:20;1306:32;;1000:348;1385:1;1365:22;;:8;:22;;;;1357:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;906:515;;;:::o;7:139:54:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:2;;;283:79;;:::i;:::-;245:2;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;235:391;;;;;:::o;632:118::-;719:24;737:5;719:24;:::i;:::-;714:3;707:37;697:53;;:::o;756:118::-;843:24;861:5;843:24;:::i;:::-;838:3;831:37;821:53;;:::o;880:366::-;1022:3;1043:67;1107:2;1102:3;1043:67;:::i;:::-;1036:74;;1119:93;1208:3;1119:93;:::i;:::-;1237:2;1232:3;1228:12;1221:19;;1026:220;;;:::o;1252:222::-;1345:4;1383:2;1372:9;1368:18;1360:26;;1396:71;1464:1;1453:9;1449:17;1440:6;1396:71;:::i;:::-;1350:124;;;;:::o;1480:222::-;1573:4;1611:2;1600:9;1596:18;1588:26;;1624:71;1692:1;1681:9;1677:17;1668:6;1624:71;:::i;:::-;1578:124;;;;:::o;1708:332::-;1829:4;1867:2;1856:9;1852:18;1844:26;;1880:71;1948:1;1937:9;1933:17;1924:6;1880:71;:::i;:::-;1961:72;2029:2;2018:9;2014:18;2005:6;1961:72;:::i;:::-;1834:206;;;;;:::o;2046:419::-;2212:4;2250:2;2239:9;2235:18;2227:26;;2299:9;2293:4;2289:20;2285:1;2274:9;2270:17;2263:47;2327:131;2453:4;2327:131;:::i;:::-;2319:139;;2217:248;;;:::o;2552:169::-;2636:11;2670:6;2665:3;2658:19;2710:4;2705:3;2701:14;2686:29;;2648:73;;;;:::o;2727:96::-;2764:7;2793:24;2811:5;2793:24;:::i;:::-;2782:35;;2772:51;;;:::o;2829:77::-;2866:7;2895:5;2884:16;;2874:32;;;:::o;2912:126::-;2949:7;2989:42;2982:5;2978:54;2967:65;;2957:81;;;:::o;3167:117::-;3276:1;3273;3266:12;3290:172;3430:24;3426:1;3418:6;3414:14;3407:48;3396:66;:::o;3468:122::-;3541:24;3559:5;3541:24;:::i;:::-;3534:5;3531:35;3521:2;;3580:1;3577;3570:12;3521:2;3511:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./MockSong.sol\";\n\ncontract MockSongsManager {\n    bytes32 public constant SONG_CONTRACT = keccak256(\"SONG_CONTRACT\");\n\n    address private _fundsManager;\n    address private _song;\n    address public registeredSong;\n\n    function initialize(address fundsManager, address song) external {\n        _fundsManager = fundsManager;\n        _song = song;\n    }\n\n    function registerSong() external {\n        registeredSong = Clones.clone(_song);\n        MockSong(registeredSong).initialize(_fundsManager);\n        AccessControl(_fundsManager).grantRole(SONG_CONTRACT, registeredSong);\n    }\n}\n",
  "sourcePath": "/Users/angelsatorresalmenara/Desktop/privi-trax-smart-contracts/contracts/mocks/MockSongsManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/MockSongsManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        2456
      ],
      "Address": [
        4834
      ],
      "Clones": [
        2640
      ],
      "Context": [
        4855
      ],
      "ERC165": [
        5156
      ],
      "ERC20": [
        3232
      ],
      "FundsManager": [
        5846
      ],
      "IAccessControl": [
        2132
      ],
      "IERC165": [
        5168
      ],
      "IERC20": [
        3310
      ],
      "IERC20Metadata": [
        3335
      ],
      "Initializable": [
        2686
      ],
      "MockSong": [
        8712
      ],
      "MockSongsManager": [
        8771
      ],
      "Ownable": [
        2560
      ],
      "SafeERC20": [
        3559
      ],
      "Strings": [
        5132
      ]
    },
    "id": 8772,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8714,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:46"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 8715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 2641,
        "src": "57:50:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 8716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 2457,
        "src": "108:58:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/mocks/MockSong.sol",
        "file": "./MockSong.sol",
        "id": 8717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 8713,
        "src": "167:24:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8771,
        "linearizedBaseContracts": [
          8771
        ],
        "name": "MockSongsManager",
        "nameLocation": "202:16:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "4ba26316",
            "id": 8722,
            "mutability": "constant",
            "name": "SONG_CONTRACT",
            "nameLocation": "249:13:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "225:66:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8718,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "534f4e475f434f4e5452414354",
                  "id": 8720,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "275:15:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916",
                    "typeString": "literal_string \"SONG_CONTRACT\""
                  },
                  "value": "SONG_CONTRACT"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916",
                    "typeString": "literal_string \"SONG_CONTRACT\""
                  }
                ],
                "id": 8719,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "265:9:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "265:26:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8724,
            "mutability": "mutable",
            "name": "_fundsManager",
            "nameLocation": "314:13:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "298:29:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8726,
            "mutability": "mutable",
            "name": "_song",
            "nameLocation": "349:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "333:21:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8725,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "333:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ce32adb6",
            "id": 8728,
            "mutability": "mutable",
            "name": "registeredSong",
            "nameLocation": "375:14:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "360:29:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8727,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8743,
              "nodeType": "Block",
              "src": "461:67:46",
              "statements": [
                {
                  "expression": {
                    "id": 8737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8735,
                      "name": "_fundsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8724,
                      "src": "471:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8736,
                      "name": "fundsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "487:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "471:28:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8738,
                  "nodeType": "ExpressionStatement",
                  "src": "471:28:46"
                },
                {
                  "expression": {
                    "id": 8741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8739,
                      "name": "_song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8726,
                      "src": "509:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8740,
                      "name": "song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "517:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8742,
                  "nodeType": "ExpressionStatement",
                  "src": "509:12:46"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 8744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "405:10:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8730,
                  "mutability": "mutable",
                  "name": "fundsManager",
                  "nameLocation": "424:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "416:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8732,
                  "mutability": "mutable",
                  "name": "song",
                  "nameLocation": "446:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "438:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:36:46"
            },
            "returnParameters": {
              "id": 8734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:46"
            },
            "scope": 8771,
            "src": "396:132:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8769,
              "nodeType": "Block",
              "src": "567:192:46",
              "statements": [
                {
                  "expression": {
                    "id": 8752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8747,
                      "name": "registeredSong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8728,
                      "src": "577:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8750,
                          "name": "_song",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8726,
                          "src": "607:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 8748,
                          "name": "Clones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2640,
                          "src": "594:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Clones_$2640_$",
                            "typeString": "type(library Clones)"
                          }
                        },
                        "id": 8749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "clone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2583,
                        "src": "594:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 8751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "594:19:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "577:36:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8753,
                  "nodeType": "ExpressionStatement",
                  "src": "577:36:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8758,
                        "name": "_fundsManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8724,
                        "src": "659:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8755,
                            "name": "registeredSong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8728,
                            "src": "632:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8754,
                          "name": "MockSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8712,
                          "src": "623:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockSong_$8712_$",
                            "typeString": "type(contract MockSong)"
                          }
                        },
                        "id": 8756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "623:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockSong_$8712",
                          "typeString": "contract MockSong"
                        }
                      },
                      "id": 8757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8675,
                      "src": "623:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "623:50:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8760,
                  "nodeType": "ExpressionStatement",
                  "src": "623:50:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8765,
                        "name": "SONG_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "722:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8766,
                        "name": "registeredSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8728,
                        "src": "737:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8762,
                            "name": "_fundsManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8724,
                            "src": "697:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8761,
                          "name": "AccessControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "683:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AccessControl_$2456_$",
                            "typeString": "type(contract AccessControl)"
                          }
                        },
                        "id": 8763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "683:28:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccessControl_$2456",
                          "typeString": "contract AccessControl"
                        }
                      },
                      "id": 8764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "683:38:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 8767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "683:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8768,
                  "nodeType": "ExpressionStatement",
                  "src": "683:69:46"
                }
              ]
            },
            "functionSelector": "f529fca0",
            "id": 8770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerSong",
            "nameLocation": "543:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:2:46"
            },
            "returnParameters": {
              "id": 8746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:0:46"
            },
            "scope": 8771,
            "src": "534:225:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8772,
        "src": "193:568:46",
        "usedErrors": []
      }
    ],
    "src": "32:730:46"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/mocks/MockSongsManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        2456
      ],
      "Address": [
        4834
      ],
      "Clones": [
        2640
      ],
      "Context": [
        4855
      ],
      "ERC165": [
        5156
      ],
      "ERC20": [
        3232
      ],
      "FundsManager": [
        5846
      ],
      "IAccessControl": [
        2132
      ],
      "IERC165": [
        5168
      ],
      "IERC20": [
        3310
      ],
      "IERC20Metadata": [
        3335
      ],
      "Initializable": [
        2686
      ],
      "MockSong": [
        8712
      ],
      "MockSongsManager": [
        8771
      ],
      "Ownable": [
        2560
      ],
      "SafeERC20": [
        3559
      ],
      "Strings": [
        5132
      ]
    },
    "id": 8772,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8714,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:46"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 8715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 2641,
        "src": "57:50:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 8716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 2457,
        "src": "108:58:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/mocks/MockSong.sol",
        "file": "./MockSong.sol",
        "id": 8717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8772,
        "sourceUnit": 8713,
        "src": "167:24:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8771,
        "linearizedBaseContracts": [
          8771
        ],
        "name": "MockSongsManager",
        "nameLocation": "202:16:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "4ba26316",
            "id": 8722,
            "mutability": "constant",
            "name": "SONG_CONTRACT",
            "nameLocation": "249:13:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "225:66:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8718,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "534f4e475f434f4e5452414354",
                  "id": 8720,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "275:15:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916",
                    "typeString": "literal_string \"SONG_CONTRACT\""
                  },
                  "value": "SONG_CONTRACT"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_21d749bccb2cd1ecd43da02f61cbdf715b020c28617853628b041975aa29b916",
                    "typeString": "literal_string \"SONG_CONTRACT\""
                  }
                ],
                "id": 8719,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "265:9:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "265:26:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8724,
            "mutability": "mutable",
            "name": "_fundsManager",
            "nameLocation": "314:13:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "298:29:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8726,
            "mutability": "mutable",
            "name": "_song",
            "nameLocation": "349:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "333:21:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8725,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "333:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ce32adb6",
            "id": 8728,
            "mutability": "mutable",
            "name": "registeredSong",
            "nameLocation": "375:14:46",
            "nodeType": "VariableDeclaration",
            "scope": 8771,
            "src": "360:29:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8727,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8743,
              "nodeType": "Block",
              "src": "461:67:46",
              "statements": [
                {
                  "expression": {
                    "id": 8737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8735,
                      "name": "_fundsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8724,
                      "src": "471:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8736,
                      "name": "fundsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "487:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "471:28:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8738,
                  "nodeType": "ExpressionStatement",
                  "src": "471:28:46"
                },
                {
                  "expression": {
                    "id": 8741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8739,
                      "name": "_song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8726,
                      "src": "509:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8740,
                      "name": "song",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "517:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8742,
                  "nodeType": "ExpressionStatement",
                  "src": "509:12:46"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 8744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "405:10:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8730,
                  "mutability": "mutable",
                  "name": "fundsManager",
                  "nameLocation": "424:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "416:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8732,
                  "mutability": "mutable",
                  "name": "song",
                  "nameLocation": "446:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "438:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:36:46"
            },
            "returnParameters": {
              "id": 8734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:46"
            },
            "scope": 8771,
            "src": "396:132:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8769,
              "nodeType": "Block",
              "src": "567:192:46",
              "statements": [
                {
                  "expression": {
                    "id": 8752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8747,
                      "name": "registeredSong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8728,
                      "src": "577:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8750,
                          "name": "_song",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8726,
                          "src": "607:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 8748,
                          "name": "Clones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2640,
                          "src": "594:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Clones_$2640_$",
                            "typeString": "type(library Clones)"
                          }
                        },
                        "id": 8749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "clone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2583,
                        "src": "594:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 8751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "594:19:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "577:36:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8753,
                  "nodeType": "ExpressionStatement",
                  "src": "577:36:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8758,
                        "name": "_fundsManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8724,
                        "src": "659:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8755,
                            "name": "registeredSong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8728,
                            "src": "632:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8754,
                          "name": "MockSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8712,
                          "src": "623:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockSong_$8712_$",
                            "typeString": "type(contract MockSong)"
                          }
                        },
                        "id": 8756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "623:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockSong_$8712",
                          "typeString": "contract MockSong"
                        }
                      },
                      "id": 8757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8675,
                      "src": "623:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "623:50:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8760,
                  "nodeType": "ExpressionStatement",
                  "src": "623:50:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8765,
                        "name": "SONG_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "722:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8766,
                        "name": "registeredSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8728,
                        "src": "737:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8762,
                            "name": "_fundsManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8724,
                            "src": "697:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8761,
                          "name": "AccessControl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "683:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AccessControl_$2456_$",
                            "typeString": "type(contract AccessControl)"
                          }
                        },
                        "id": 8763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "683:28:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccessControl_$2456",
                          "typeString": "contract AccessControl"
                        }
                      },
                      "id": 8764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "683:38:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 8767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "683:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8768,
                  "nodeType": "ExpressionStatement",
                  "src": "683:69:46"
                }
              ]
            },
            "functionSelector": "f529fca0",
            "id": 8770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerSong",
            "nameLocation": "543:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:2:46"
            },
            "returnParameters": {
              "id": 8746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:0:46"
            },
            "scope": 8771,
            "src": "534:225:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8772,
        "src": "193:568:46",
        "usedErrors": []
      }
    ],
    "src": "32:730:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-02T15:22:21.278Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}