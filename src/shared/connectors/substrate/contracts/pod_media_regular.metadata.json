{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0xb57af428066771f2d0e50f215ed5a15e82a6d250255627eb08d3afcb7306ef54",
    "language": "ink! 3.0.0-rc3",
    "compiler": "rustc 1.55.0-nightly"
  },
  "contract": {
    "name": "pod-media-regular",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "CreatePodRequest"
              ],
              "type": 6
            }
          }
        ],
        "docs": [],
        "name": [
          "new"
        ],
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "events": [],
    "messages": [
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "RegisterMediaRequest"
              ],
              "type": 23
            }
          }
        ],
        "docs": [
          " Sets the parameters of a media object. May only be called once, which then registers the",
          " media."
        ],
        "mutates": true,
        "name": [
          "register_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 24
        },
        "selector": "0xbd47a011"
      },
      {
        "args": [
          {
            "name": "media_id",
            "type": {
              "displayName": [
                "MediaId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Sets the media.is_uploaded field to true.",
          "",
          " # Restrictions",
          "",
          " * May only be called by the media creator.",
          " * Only registered media may be uploaded."
        ],
        "mutates": true,
        "name": [
          "upload_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 24
        },
        "selector": "0xad6b6fac"
      },
      {
        "args": [],
        "docs": [
          " AccountId of the pod creator."
        ],
        "mutates": false,
        "name": [
          "creator"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "AccountId"
          ],
          "type": 1
        },
        "selector": "0xbf73316b"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "creator"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                      "ty": 4
                    }
                  },
                  "name": "len"
                },
                {
                  "layout": {
                    "array": {
                      "cellsPerElem": 1,
                      "layout": {
                        "cell": {
                          "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                          "ty": 5
                        }
                      },
                      "len": 4294967295,
                      "offset": "0x0200000000000000000000000000000000000000000000000000000000000000"
                    }
                  },
                  "name": "elems"
                }
              ]
            }
          },
          "name": "media_ids"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                      "ty": 4
                    }
                  },
                  "name": "registered_media"
                },
                {
                  "layout": {
                    "cell": {
                      "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
                      "ty": 4
                    }
                  },
                  "name": "total_media"
                }
              ]
            }
          },
          "name": "state"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0300000001000000000000000000000000000000000000000000000000000000",
                      "ty": 1
                    }
                  },
                  "name": "account_id"
                }
              ]
            }
          },
          "name": "media"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0400000001000000000000000000000000000000000000000000000000000000",
              "ty": 5
            }
          },
          "name": "created_at"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 2,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 3
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "primitive": "u64"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "erc20_code_hash",
              "type": 7,
              "typeName": "Hash"
            },
            {
              "name": "endowment",
              "type": 8,
              "typeName": "Balance"
            },
            {
              "name": "media_contract",
              "type": 9,
              "typeName": "MediaStorage"
            },
            {
              "name": "medias",
              "type": 10,
              "typeName": "Vec<CreateMediaRequest>"
            }
          ]
        }
      },
      "path": [
        "pod_media_regular",
        "models",
        "CreatePodRequest"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 2,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "Hash"
      ]
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "media",
        "media",
        "MediaStorage"
      ]
    },
    {
      "def": {
        "sequence": {
          "type": 11
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "name",
              "type": 12,
              "typeName": "String"
            },
            {
              "name": "r#type",
              "type": 13,
              "typeName": "MediaType"
            },
            {
              "name": "view_conditions",
              "type": 14,
              "typeName": "ViewInfo"
            },
            {
              "name": "nft_conditions",
              "type": 22,
              "typeName": "NftInfo"
            },
            {
              "name": "royalty",
              "type": 8,
              "typeName": "Balance"
            },
            {
              "name": "collabs",
              "type": 21,
              "typeName": "Collabs"
            }
          ]
        }
      },
      "path": [
        "pod_media_regular",
        "models",
        "CreateMediaRequest"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Audio"
            },
            {
              "discriminant": 1,
              "name": "Video"
            },
            {
              "discriminant": 2,
              "name": "LiveAudio"
            },
            {
              "discriminant": 3,
              "name": "LiveVideo"
            },
            {
              "discriminant": 4,
              "name": "Blog"
            },
            {
              "discriminant": 5,
              "name": "BlogSnap"
            },
            {
              "discriminant": 6,
              "name": "DigitalArt"
            },
            {
              "discriminant": 7,
              "name": "Claimable"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "MediaType"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "viewing_type",
              "type": 15,
              "typeName": "ViewingType"
            },
            {
              "name": "viewing_token",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "price",
              "type": 8,
              "typeName": "Balance"
            },
            {
              "name": "sharing_percent",
              "type": 8,
              "typeName": "u128"
            },
            {
              "name": "is_streaming_live",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "streaming_proportions",
              "type": 17,
              "typeName": "Vec<(String, Balance)>"
            },
            {
              "name": "token_reward",
              "type": 19,
              "typeName": "Vec<(AccountId, Balance)>"
            },
            {
              "name": "token_entry",
              "type": 21,
              "typeName": "BTreeMap<AccountId, Balance>"
            },
            {
              "name": "duration",
              "type": 5,
              "typeName": "u64"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "ViewInfo"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Dynamic"
            },
            {
              "discriminant": 1,
              "name": "Fixed"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "ViewingType"
      ]
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "sequence": {
          "type": 18
        }
      }
    },
    {
      "def": {
        "tuple": [
          12,
          8
        ]
      }
    },
    {
      "def": {
        "sequence": {
          "type": 20
        }
      }
    },
    {
      "def": {
        "tuple": [
          1,
          8
        ]
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 19,
              "typeName": "[(K, V)]"
            }
          ]
        }
      },
      "params": [
        20
      ],
      "path": [
        "BTreeMap"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "funding_token",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "price",
              "type": 8,
              "typeName": "Balance"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "NftInfo"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 5,
              "typeName": "MediaId"
            },
            {
              "name": "funding_token",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "price",
              "type": 8,
              "typeName": "Balance"
            },
            {
              "name": "release_date",
              "type": 5,
              "typeName": "Timestamp"
            },
            {
              "name": "payment_type",
              "type": 15,
              "typeName": "ViewingType"
            },
            {
              "name": "royalty",
              "type": 8,
              "typeName": "Balance"
            },
            {
              "name": "collabs",
              "type": 21,
              "typeName": "Collabs"
            }
          ]
        }
      },
      "path": [
        "pod_media_regular",
        "models",
        "RegisterMediaRequest"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 25,
                  "typeName": "T"
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 26,
                  "typeName": "E"
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [
        25,
        26
      ],
      "path": [
        "Result"
      ]
    },
    {
      "def": {
        "tuple": []
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MediaAlreadyRegistered"
            },
            {
              "name": "MediaNotRegistered"
            },
            {
              "name": "MediaNotFound"
            },
            {
              "fields": [
                {
                  "type": 27,
                  "typeName": "media::Error"
                }
              ],
              "name": "CreateMedia"
            },
            {
              "name": "Unauthorized"
            },
            {
              "name": "ReleaseDateMustBeInFuture"
            }
          ]
        }
      },
      "path": [
        "pod_media_regular",
        "errors",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidSumOfCollabShares"
            },
            {
              "name": "CollabShareOutOfRange"
            },
            {
              "name": "Overflow"
            },
            {
              "name": "OwnerRequired"
            },
            {
              "name": "CollaboratorsNotFound"
            },
            {
              "name": "MediaNotFound"
            },
            {
              "name": "InvalidMediaSharingParentId"
            },
            {
              "name": "MediaSharingParentNotFound"
            },
            {
              "name": "MediaSharingNotFound"
            },
            {
              "name": "CommunityNotFound"
            },
            {
              "name": "ProposalNotFound"
            },
            {
              "name": "RequiresCollaborator"
            },
            {
              "name": "VoteNotAllowed"
            },
            {
              "name": "InsufficientBalance"
            },
            {
              "fields": [
                {
                  "type": 28,
                  "typeName": "erc1620::Error"
                }
              ],
              "name": "Erc1620"
            },
            {
              "fields": [
                {
                  "type": 29,
                  "typeName": "erc20::Error"
                }
              ],
              "name": "Erc20"
            },
            {
              "fields": [
                {
                  "type": 30,
                  "typeName": "erc721::Error"
                }
              ],
              "name": "Erc721"
            },
            {
              "name": "PodAddressRequired"
            }
          ]
        }
      },
      "path": [
        "media",
        "errors",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OnlyCallableBySenderOrRecipient"
            },
            {
              "name": "InsufficientBalance"
            },
            {
              "name": "AmountCannotBeZero"
            },
            {
              "name": "StreamNotFound"
            },
            {
              "name": "DepositNotMultipleOfZero"
            },
            {
              "name": "DepositSmallerThanTimeDelta"
            },
            {
              "name": "InvalidRecipient"
            },
            {
              "name": "InvalidStartTime"
            },
            {
              "name": "InvalidStopTime"
            },
            {
              "fields": [
                {
                  "type": 29,
                  "typeName": "erc20::Error"
                }
              ],
              "name": "Erc20"
            },
            {
              "name": "StreamsNotFound"
            }
          ]
        }
      },
      "path": [
        "erc1620",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "InsufficientBalance"
            },
            {
              "discriminant": 1,
              "name": "InsufficientAllowance"
            },
            {
              "discriminant": 2,
              "name": "ZeroAddressNotAllowed"
            },
            {
              "discriminant": 3,
              "name": "MissingRole"
            },
            {
              "discriminant": 4,
              "name": "TransfersPaused"
            }
          ]
        }
      },
      "path": [
        "erc20",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "CannotFetchValue"
            },
            {
              "discriminant": 1,
              "name": "TokenIdOverflow"
            },
            {
              "discriminant": 2,
              "name": "TokenNotFound"
            },
            {
              "discriminant": 3,
              "name": "NotOwner"
            },
            {
              "discriminant": 4,
              "name": "TokenExists"
            },
            {
              "discriminant": 5,
              "name": "NotAllowed"
            },
            {
              "discriminant": 6,
              "name": "NotApproved"
            },
            {
              "discriminant": 7,
              "name": "CannotInsert"
            },
            {
              "discriminant": 8,
              "name": "CannotRemove"
            }
          ]
        }
      },
      "path": [
        "erc721",
        "erc721",
        "Error"
      ]
    }
  ]
}