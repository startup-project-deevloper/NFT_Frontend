{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0x8d92e6901c8ef77fd7f9a53305620e26179aca736863b33dff9feb1978df69f9",
    "language": "ink! 3.0.0-rc3",
    "compiler": "rustc 1.55.0-nightly"
  },
  "contract": {
    "name": "media",
    "version": "3.0.0-rc3",
    "authors": [
      "Privi"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "erc1620_account_id",
            "type": {
              "displayName": [
                "erc1620",
                "Erc1620"
              ],
              "type": 43
            }
          },
          {
            "name": "erc721_account_id",
            "type": {
              "displayName": [
                "erc721",
                "Erc721"
              ],
              "type": 44
            }
          }
        ],
        "docs": [
          "Create a new contract."
        ],
        "name": [
          "new"
        ],
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "events": [
      {
        "args": [
          {
            "docs": [
              " Ouput of the event"
            ],
            "indexed": false,
            "name": "output",
            "type": {
              "displayName": [
                "CreatedMediaOutput"
              ],
              "type": 61
            }
          }
        ],
        "docs": [
          " Emitted when media is created"
        ],
        "name": "CreatedMedia"
      },
      {
        "args": [
          {
            "docs": [
              " Ouput of the event"
            ],
            "indexed": false,
            "name": "output",
            "type": {
              "displayName": [
                "SharedMediaOutput"
              ],
              "type": 62
            }
          }
        ],
        "docs": [],
        "name": "SharedMedia"
      }
    ],
    "messages": [
      {
        "args": [
          {
            "name": "input",
            "type": {
              "displayName": [
                "CreateMediaRequest"
              ],
              "type": 45
            }
          }
        ],
        "docs": [
          " Creates a new Media and mints the NFT token for it.",
          " ### Arguments",
          " * creator_address - Address of the creator of the Media",
          " * media_name - The name of the Media",
          " * pod_address - Pods Address of the media's Pod",
          " * type - Type of the Media,",
          " * view_conditions - View info of the media",
          " * nft_conditions - NFT Conditions",
          " * royalty - Royalties that goes to the creators",
          " * collabs - Collaborators of the media + the allocation"
        ],
        "mutates": true,
        "name": [
          "create_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 47
        },
        "selector": "0x143f1ee9"
      },
      {
        "args": [
          {
            "name": "id",
            "type": {
              "displayName": [
                "MediaId"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          " Gets the media from the `media_id`"
        ],
        "mutates": false,
        "name": [
          "get_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Option"
          ],
          "type": 52
        },
        "selector": "0x35cb156f"
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "UpdateMediaRequest"
              ],
              "type": 33
            }
          }
        ],
        "docs": [
          " Creates a proposal to update a `Media`",
          " ### Arguments",
          " See arguments for `create_media`"
        ],
        "mutates": true,
        "name": [
          "create_update_media_proposal"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0xcecfd747"
      },
      {
        "args": [
          {
            "name": "vote",
            "type": {
              "displayName": [
                "UpdateMediaVote"
              ],
              "type": 55
            }
          }
        ],
        "docs": [
          " Vote on an `UpdateMediaProposal`",
          " ### Arguments",
          " * media_id - the id of the media",
          " * requester_address - the address of the user that made the request being voting on",
          " * vote - yes or no vote"
        ],
        "mutates": true,
        "name": [
          "vote_media_update_proposal"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0xecee046a"
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "FractionaliseCollabRequest"
              ],
              "type": 56
            }
          }
        ],
        "docs": [
          " Allows a collab to fractionalise its sharing into one or more addresses"
        ],
        "mutates": true,
        "name": [
          "fractionalise_media_collab"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0x8eca1cd5"
      },
      {
        "args": [
          {
            "name": "media",
            "type": {
              "displayName": [
                "Media"
              ],
              "type": 10
            }
          }
        ],
        "docs": [
          " Replaces the data for the Media. Only callable by the medias `pod_address`."
        ],
        "mutates": true,
        "name": [
          "update_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 57
        },
        "selector": "0x8ddd68e2"
      },
      {
        "args": [
          {
            "name": "id",
            "type": {
              "displayName": [
                "MediaId"
              ],
              "type": 4
            }
          },
          {
            "name": "collabs",
            "type": {
              "displayName": [
                "BTreeMap"
              ],
              "type": 21
            }
          }
        ],
        "docs": [
          " Replaces the data for the Media. Only callable by the medias `pod_address`."
        ],
        "mutates": true,
        "name": [
          "update_collabs"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0x6aff6344"
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "OpenMediaRequest"
              ],
              "type": 58
            }
          }
        ],
        "docs": [
          " Called when a Media is being viewed",
          " ### Arguments",
          " * media_id\t- the media id",
          " * sharing_id - the sharing id"
        ],
        "mutates": true,
        "name": [
          "open_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0xf3996fa2"
      },
      {
        "args": [
          {
            "name": "media_id",
            "type": {
              "displayName": [
                "MediaId"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          " Stop the streams used by `media_id` if they exist"
        ],
        "mutates": true,
        "name": [
          "close_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0x8914994e"
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "ShareMediaRequest"
              ],
              "type": 59
            }
          }
        ],
        "docs": [
          " Validates the request and generates a `SharingId`",
          " * parent_id - Id of last vertex of the sharing chain",
          " * media_id - Symbol of the Media"
        ],
        "mutates": true,
        "name": [
          "share_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 47
        },
        "selector": "0x63de8746"
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "displayName": [
                "TipMediaRequest"
              ],
              "type": 60
            }
          }
        ],
        "docs": [
          " Tip the media",
          " * media_id - the media id",
          " * amount - amount of token to tip",
          " * token\t- The AccountId of the token to tip"
        ],
        "mutates": false,
        "name": [
          "tip_media"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 54
        },
        "selector": "0x8d9ad07c"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "owner"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
              "ty": 4
            }
          },
          "name": "next_sharing_id"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                      "ty": 1
                    }
                  },
                  "name": "account_id"
                }
              ]
            }
          },
          "name": "erc721"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                      "ty": 1
                    }
                  },
                  "name": "account_id"
                }
              ]
            }
          },
          "name": "erc1620"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0500000001000000000000000000000000000000000000000000000000000000",
                                          "ty": 7
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0600000000000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0600000001000000000000000000000000000000000000000000000000000000",
                          "ty": 9
                        }
                      },
                      "offset": "0x0500000001000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "medias_by_id"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0600000001000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0700000001000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0700000002000000000000000000000000000000000000000000000000000000",
                                          "ty": 7
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0800000001000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0800000002000000000000000000000000000000000000000000000000000000",
                          "ty": 23
                        }
                      },
                      "offset": "0x0700000002000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "collaborators_by_media_id"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0800000002000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0900000002000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0900000003000000000000000000000000000000000000000000000000000000",
                                          "ty": 7
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0a00000002000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0a00000003000000000000000000000000000000000000000000000000000000",
                          "ty": 24
                        }
                      },
                      "offset": "0x0900000003000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "media_sharings_by_id"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0a00000003000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0b00000003000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0b00000004000000000000000000000000000000000000000000000000000000",
                                          "ty": 7
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0c00000003000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0c00000004000000000000000000000000000000000000000000000000000000",
                          "ty": 27
                        }
                      },
                      "offset": "0x0b00000004000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "streams_by_media_id"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0c00000004000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0d00000004000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0d00000005000000000000000000000000000000000000000000000000000000",
                                          "ty": 29
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0e00000004000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0e00000005000000000000000000000000000000000000000000000000000000",
                          "ty": 31
                        }
                      },
                      "offset": "0x0d00000005000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "proposals_by_key"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0e00000005000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0f00000005000000000000000000000000000000000000000000000000000000",
                                      "ty": 6
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0f00000006000000000000000000000000000000000000000000000000000000",
                                          "ty": 29
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x1000000005000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x1000000006000000000000000000000000000000000000000000000000000000",
                          "ty": 38
                        }
                      },
                      "offset": "0x0f00000006000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "communities_by_proposal_key"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 2,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 3
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "primitive": "u64"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 6,
              "typeName": "Index"
            },
            {
              "name": "len",
              "type": 6,
              "typeName": "u32"
            },
            {
              "name": "len_entries",
              "type": 6,
              "typeName": "u32"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Header"
      ]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 8,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 4,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        4
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 6,
              "typeName": "Index"
            },
            {
              "name": "prev",
              "type": 6,
              "typeName": "Index"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "VacantEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 10,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        10
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "creator",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "media_name",
              "type": 11,
              "typeName": "String"
            },
            {
              "name": "id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "pod_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "r#type",
              "type": 12,
              "typeName": "MediaType"
            },
            {
              "name": "release_date",
              "type": 4,
              "typeName": "u64"
            },
            {
              "name": "view_conditions",
              "type": 13,
              "typeName": "ViewInfo"
            },
            {
              "name": "nft_conditions",
              "type": 22,
              "typeName": "NftInfo"
            },
            {
              "name": "is_registered",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "is_uploaded",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "royalty",
              "type": 15,
              "typeName": "Balance"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "Media"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Audio"
            },
            {
              "discriminant": 1,
              "name": "Video"
            },
            {
              "discriminant": 2,
              "name": "LiveAudio"
            },
            {
              "discriminant": 3,
              "name": "LiveVideo"
            },
            {
              "discriminant": 4,
              "name": "Blog"
            },
            {
              "discriminant": 5,
              "name": "BlogSnap"
            },
            {
              "discriminant": 6,
              "name": "DigitalArt"
            },
            {
              "discriminant": 7,
              "name": "Claimable"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "MediaType"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "viewing_type",
              "type": 14,
              "typeName": "ViewingType"
            },
            {
              "name": "viewing_token",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "price",
              "type": 15,
              "typeName": "Balance"
            },
            {
              "name": "sharing_percent",
              "type": 15,
              "typeName": "u128"
            },
            {
              "name": "is_streaming_live",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "streaming_proportions",
              "type": 17,
              "typeName": "Vec<(String, Balance)>"
            },
            {
              "name": "token_reward",
              "type": 19,
              "typeName": "Vec<(AccountId, Balance)>"
            },
            {
              "name": "token_entry",
              "type": 21,
              "typeName": "BTreeMap<AccountId, Balance>"
            },
            {
              "name": "duration",
              "type": 4,
              "typeName": "u64"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "ViewInfo"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Dynamic"
            },
            {
              "discriminant": 1,
              "name": "Fixed"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "ViewingType"
      ]
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "sequence": {
          "type": 18
        }
      }
    },
    {
      "def": {
        "tuple": [
          11,
          15
        ]
      }
    },
    {
      "def": {
        "sequence": {
          "type": 20
        }
      }
    },
    {
      "def": {
        "tuple": [
          1,
          15
        ]
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 19,
              "typeName": "[(K, V)]"
            }
          ]
        }
      },
      "params": [
        20
      ],
      "path": [
        "BTreeMap"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "funding_token",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "price",
              "type": 15,
              "typeName": "Balance"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "other",
        "NftInfo"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 21,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        21
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 25,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        25
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "parent_id",
              "type": 26,
              "typeName": "Option<SharingId>"
            },
            {
              "name": "address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "id",
              "type": 4,
              "typeName": "SharingId"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "MediaSharing"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 4,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        4
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 28,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        28
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "sequence": {
          "type": 15
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 8,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 30,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        30
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "requester",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "ProposalKey"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 32,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        32
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "requester_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "update_request",
              "type": 33,
              "typeName": "UpdateMediaRequest"
            },
            {
              "name": "votes",
              "type": 34,
              "typeName": "BTreeMap<AccountId, bool>"
            },
            {
              "name": "state",
              "type": 37,
              "typeName": "UpdateMediaProposalState"
            },
            {
              "name": "min_approvals",
              "type": 4,
              "typeName": "u64"
            },
            {
              "name": "max_denials",
              "type": 4,
              "typeName": "u64"
            },
            {
              "name": "duration",
              "type": 4,
              "typeName": "u64"
            },
            {
              "name": "date",
              "type": 4,
              "typeName": "u64"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "UpdateMediaProposal"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "creator_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "media_name",
              "type": 11,
              "typeName": "String"
            },
            {
              "name": "r#type",
              "type": 12,
              "typeName": "MediaType"
            },
            {
              "name": "view_conditions",
              "type": 13,
              "typeName": "ViewInfo"
            },
            {
              "name": "nft_conditions",
              "type": 22,
              "typeName": "NftInfo"
            },
            {
              "name": "royalty",
              "type": 15,
              "typeName": "Balance"
            },
            {
              "name": "collabs",
              "type": 21,
              "typeName": "BTreeMap<AccountId, CollabShare>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "UpdateMediaRequest"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 36,
              "typeName": "[(K, V)]"
            }
          ]
        }
      },
      "params": [
        35
      ],
      "path": [
        "BTreeMap"
      ]
    },
    {
      "def": {
        "tuple": [
          1,
          16
        ]
      }
    },
    {
      "def": {
        "sequence": {
          "type": 35
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Pending"
            },
            {
              "discriminant": 1,
              "name": "Accepted"
            },
            {
              "discriminant": 2,
              "name": "Denied"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "storage",
        "UpdateMediaProposalState"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 39,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 6,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        39
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 42,
              "typeName": "[(K, V)]"
            }
          ]
        }
      },
      "params": [
        40
      ],
      "path": [
        "BTreeMap"
      ]
    },
    {
      "def": {
        "tuple": [
          1,
          41
        ]
      }
    },
    {
      "def": {
        "tuple": []
      }
    },
    {
      "def": {
        "sequence": {
          "type": 40
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "erc1620",
        "contract",
        "Erc1620"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "erc721",
        "erc721",
        "Erc721"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "creator_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "media_name",
              "type": 11,
              "typeName": "String"
            },
            {
              "name": "pod_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "r#type",
              "type": 12,
              "typeName": "MediaType"
            },
            {
              "name": "view_conditions",
              "type": 13,
              "typeName": "ViewInfo"
            },
            {
              "name": "nft_conditions",
              "type": 22,
              "typeName": "NftInfo"
            },
            {
              "name": "royalty",
              "type": 15,
              "typeName": "Balance"
            },
            {
              "name": "collabs",
              "type": 46,
              "typeName": "Option<BTreeMap<AccountId, CollabShare>>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "CreateMediaRequest"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 21,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        21
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 4,
                  "typeName": "T"
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 48,
                  "typeName": "E"
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [
        4,
        48
      ],
      "path": [
        "Result"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidSumOfCollabShares"
            },
            {
              "name": "CollabShareOutOfRange"
            },
            {
              "name": "Overflow"
            },
            {
              "name": "OwnerRequired"
            },
            {
              "name": "CollaboratorsNotFound"
            },
            {
              "name": "MediaNotFound"
            },
            {
              "name": "InvalidMediaSharingParentId"
            },
            {
              "name": "MediaSharingParentNotFound"
            },
            {
              "name": "MediaSharingNotFound"
            },
            {
              "name": "CommunityNotFound"
            },
            {
              "name": "ProposalNotFound"
            },
            {
              "name": "RequiresCollaborator"
            },
            {
              "name": "VoteNotAllowed"
            },
            {
              "name": "InsufficientBalance"
            },
            {
              "fields": [
                {
                  "type": 49,
                  "typeName": "erc1620::Error"
                }
              ],
              "name": "Erc1620"
            },
            {
              "fields": [
                {
                  "type": 50,
                  "typeName": "erc20::Error"
                }
              ],
              "name": "Erc20"
            },
            {
              "fields": [
                {
                  "type": 51,
                  "typeName": "erc721::Error"
                }
              ],
              "name": "Erc721"
            },
            {
              "name": "PodAddressRequired"
            }
          ]
        }
      },
      "path": [
        "media",
        "errors",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OnlyCallableBySenderOrRecipient"
            },
            {
              "name": "InsufficientBalance"
            },
            {
              "name": "AmountCannotBeZero"
            },
            {
              "name": "StreamNotFound"
            },
            {
              "name": "DepositNotMultipleOfZero"
            },
            {
              "name": "DepositSmallerThanTimeDelta"
            },
            {
              "name": "InvalidRecipient"
            },
            {
              "name": "InvalidStartTime"
            },
            {
              "name": "InvalidStopTime"
            },
            {
              "fields": [
                {
                  "type": 50,
                  "typeName": "erc20::Error"
                }
              ],
              "name": "Erc20"
            },
            {
              "name": "StreamsNotFound"
            }
          ]
        }
      },
      "path": [
        "erc1620",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "InsufficientBalance"
            },
            {
              "discriminant": 1,
              "name": "InsufficientAllowance"
            },
            {
              "discriminant": 2,
              "name": "ZeroAddressNotAllowed"
            },
            {
              "discriminant": 3,
              "name": "MissingRole"
            },
            {
              "discriminant": 4,
              "name": "TransfersPaused"
            }
          ]
        }
      },
      "path": [
        "erc20",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "CannotFetchValue"
            },
            {
              "discriminant": 1,
              "name": "TokenIdOverflow"
            },
            {
              "discriminant": 2,
              "name": "TokenNotFound"
            },
            {
              "discriminant": 3,
              "name": "NotOwner"
            },
            {
              "discriminant": 4,
              "name": "TokenExists"
            },
            {
              "discriminant": 5,
              "name": "NotAllowed"
            },
            {
              "discriminant": 6,
              "name": "NotApproved"
            },
            {
              "discriminant": 7,
              "name": "CannotInsert"
            },
            {
              "discriminant": 8,
              "name": "CannotRemove"
            }
          ]
        }
      },
      "path": [
        "erc721",
        "erc721",
        "Error"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 53,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        53
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "creator",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "media_name",
              "type": 11,
              "typeName": "String"
            },
            {
              "name": "id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "pod_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "r#type",
              "type": 12,
              "typeName": "MediaType"
            },
            {
              "name": "release_date",
              "type": 4,
              "typeName": "u64"
            },
            {
              "name": "view_conditions",
              "type": 13,
              "typeName": "ViewInfo"
            },
            {
              "name": "nft_conditions",
              "type": 22,
              "typeName": "NftInfo"
            },
            {
              "name": "is_registered",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "is_uploaded",
              "type": 16,
              "typeName": "bool"
            },
            {
              "name": "royalty",
              "type": 15,
              "typeName": "Balance"
            },
            {
              "name": "collabs",
              "type": 21,
              "typeName": "BTreeMap<AccountId, CollabShare>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "output",
        "MediaInfo"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 41,
                  "typeName": "T"
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 48,
                  "typeName": "E"
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [
        41,
        48
      ],
      "path": [
        "Result"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "requester_address",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "vote",
              "type": 16,
              "typeName": "bool"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "UpdateMediaVote"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "sharings",
              "type": 21,
              "typeName": "BTreeMap<AccountId, CollabShare>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "FractionaliseCollabRequest"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 10,
                  "typeName": "T"
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 48,
                  "typeName": "E"
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [
        10,
        48
      ],
      "path": [
        "Result"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "sharing_id",
              "type": 26,
              "typeName": "Option<SharingId>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "OpenMediaRequest"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "parent_id",
              "type": 26,
              "typeName": "Option<SharingId>"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "ShareMediaRequest"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            },
            {
              "name": "amount",
              "type": 15,
              "typeName": "Balance"
            },
            {
              "name": "token",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "input",
        "TipMediaRequest"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "media_id",
              "type": 4,
              "typeName": "MediaId"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "event_output",
        "CreatedMediaOutput"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "sharing_id",
              "type": 4,
              "typeName": "SharingId"
            }
          ]
        }
      },
      "path": [
        "media",
        "models",
        "event_output",
        "SharedMediaOutput"
      ]
    }
  ]
}