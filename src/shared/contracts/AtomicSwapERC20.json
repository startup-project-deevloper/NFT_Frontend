{
  "contractName": "AtomicSwapERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBridgeManager",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_secretKey",
          "type": "bytes32"
        }
      ],
      "name": "CloseProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "ExpireProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_secretLock",
          "type": "bytes32"
        }
      ],
      "name": "OpenProposal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_secretLock",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_secretKey",
          "type": "bytes32"
        }
      ],
      "name": "claimFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "refundFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "getSwapInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "secretLock",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "getSecretKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "secretKey",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBridgeManager\",\"name\":\"_bridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_secretKey\",\"type\":\"bytes32\"}],\"name\":\"CloseProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"ExpireProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_secretLock\",\"type\":\"bytes32\"}],\"name\":\"OpenProposal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_secretKey\",\"type\":\"bytes32\"}],\"name\":\"claimFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_secretLock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"getSecretKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"secretKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"getSwapInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"secretLock\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"refundFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/AtomicSwap/AtomicSwapERC20.sol\":\"AtomicSwapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/AtomicSwap/AtomicSwapERC20.sol\":{\"keccak256\":\"0x5880d682bab035ea290d4715e8842482d44b32b283560d2c71c1687c8a0e4522\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://994c451ec202af65b6320e304bf2b57a64aa0f4cc040f02915d29002e499d9ba\",\"dweb:/ipfs/QmUQmu35ct8NwJEZs3KSFa1tcqpz1kM9JjddiHQFGmLtJx\"]},\"/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/interfaces/IBridgeManager.sol\":{\"keccak256\":\"0xce0bcda84c3b3c5c476045a4b77a1ab24eb6ad7b6695618f9fdb8edbb98fd9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41cfaa6f7aad8cd6e9f84647d4c549c1829c8e6fddc2fef0b9092474292f8ba\",\"dweb:/ipfs/QmVajpBK1KmCZ4XNdrEqB38GzQWVhNZdiHMSBtGGACP1mm\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161117c38038061117c83398101604081905261002f91610054565b600280546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6110eb806100916000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632d0fc6b41461005c5780633269a9b614610089578063725095031461009e5780639fd70182146100b1578063fc443cd9146100c4575b600080fd5b61006f61006a366004610ac8565b6100e4565b604051610080959493929190611073565b60405180910390f35b61009c610097366004610ae0565b610162565b005b61009c6100ac366004610b01565b6103bf565b61009c6100bf366004610ac8565b61079d565b6100d76100d2366004610ac8565b6109b9565b6040516100809190610c33565b60008181526020818152604091829020825160e0810184528154808252600183015493820184905260028301546001600160a01b03908116958301959095526003830154851660608301819052600484015490951660808301819052600584015460a0840181905260069094015460c0909301929092529590929450565b81600160008281526001602052604090205460ff16600381111561019657634e487b7160e01b600052602160045260246000fd5b146101bc5760405162461bcd60e51b81526004016101b390611030565b60405180910390fd5b8282806040516020016101cf9190610c33565b60408051601f198184030181529181528151602092830120600085815292839052912060050154146102135760405162461bcd60e51b81526004016101b390610f90565b60008581526020819052604090206004015485906001600160a01b0316331461024e5760405162461bcd60e51b81526004016101b390610d73565b600086815260208181526040808320815160e08101835281548152600180830154828601526002808401546001600160a01b03908116848701526003850154811660608501526004850154166080840152600584015460a08401526006909301805460c08401528c87528b905593849052919093208054919392909160ff19169083021790555060608101516080820151602083015160405163a9059cbb60e01b81526001600160a01b0384169263a9059cbb9261030e92600401610c8e565b602060405180830381600087803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610aa1565b61037c5760405162461bcd60e51b81526004016101b390610eac565b7f41e27b07030aa28d1c62c716585f04d3260fd3c1b2e747329ae1f203732004b588886040516103ad929190610cc6565b60405180910390a15050505050505050565b856000808281526001602052604090205460ff1660038111156103f257634e487b7160e01b600052602160045260246000fd5b1461040f5760405162461bcd60e51b81526004016101b390610d31565b60025460405163281ecdab60e11b81526000916001600160a01b03169063503d9b5690610440908990600401610c3c565b60006040518083038186803b15801561045857600080fd5b505afa15801561046c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104949190810190610b58565b90508051600014156104b85760405162461bcd60e51b81526004016101b390610f4c565b604051636eb1769f60e11b815286906001600160a01b0382169063dd62ed3e906104e89033903090600401610c50565b60206040518083038186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190610c1b565b8811156105575760405162461bcd60e51b81526004016101b390610fd3565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9061058790339030908d90600401610c6a565b602060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d99190610aa1565b6105f55760405162461bcd60e51b81526004016101b390610cd4565b60006040518060e001604052808681526020018a8152602001336001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018781526020016000801b8152509050806000808c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0820151816005015560c0820151816006015590505060018060008c815260200190815260200160002060006101000a81548160ff0219169083600381111561075257634e487b7160e01b600052602160045260246000fd5b02179055507e1aedab88934e047ebb0abe9ec226ef7f63305ea1a61e2ec49230cae4414a2e8a888860405161078993929190610ca7565b60405180910390a150505050505050505050565b80600160008281526001602052604090205460ff1660038111156107d157634e487b7160e01b600052602160045260246000fd5b146107ee5760405162461bcd60e51b81526004016101b390611030565b816107f7610a81565b60008281526020819052604090205411156108245760405162461bcd60e51b81526004016101b390610e0b565b60008381526020819052604090206002015483906001600160a01b0316331461085f5760405162461bcd60e51b81526004016101b390610dc0565b600084815260208181526040808320815160e0810183528154815260018083015482860190815260028401546001600160a01b0390811684870190815260038087015483166060870190815260048089015485166080890152600589015460a089015260069098015460c08801528e8b529490985297869020805460ff1916909717909655905195519051935163a9059cbb60e01b815291959485169363a9059cbb9361090c9301610c8e565b602060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190610aa1565b61097a5760405162461bcd60e51b81526004016101b390610e4f565b7f18ebe710226b6781b51c7cbba2305e730a5740b7427d6e6399107d0e14c74595866040516109a99190610c33565b60405180910390a1505050505050565b600081600260008281526001602052604090205460ff1660038111156109ef57634e487b7160e01b600052602160045260246000fd5b14610a0c5760405162461bcd60e51b81526004016101b390610f09565b505060009081526020818152604091829020825160e0810184528154815260018201549281019290925260028101546001600160a01b039081169383019390935260038101548316606083015260048101549092166080820152600582015460a082015260069091015460c090910181905290565b4290565b80356001600160a01b0381168114610a9c57600080fd5b919050565b600060208284031215610ab2578081fd5b81518015158114610ac1578182fd5b9392505050565b600060208284031215610ad9578081fd5b5035919050565b60008060408385031215610af2578081fd5b50508035926020909101359150565b60008060008060008060c08789031215610b19578182fd5b8635955060208701359450610b3060408801610a85565b9350610b3e60608801610a85565b92506080870135915060a087013590509295509295509295565b60006020808385031215610b6a578182fd5b825167ffffffffffffffff80821115610b81578384fd5b818501915085601f830112610b94578384fd5b815181811115610ba657610ba661109f565b604051601f8201601f1916810185018381118282101715610bc957610bc961109f565b6040528181528382018501881015610bdf578586fd5b8592505b81831015610c005783830185015181840186015291840191610be3565b81831115610c1057858583830101525b979650505050505050565b600060208284031215610c2c578081fd5b5051919050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b9283526001600160a01b03919091166020830152604082015260600190565b918252602082015260400190565b60208082526032908201527f41746f6d69635377617045524332302e63726561746550726f706f73616c3a2060408201527f5472616e73616374696f6e206661696c65640000000000000000000000000000606082015260800190565b60208082526022908201527f41746f6d69635377617045524332303a2053776170206974206e6f7420656d70604082015261747960f01b606082015260800190565b6020808252602d908201527f41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207460408201526c3432903bb4ba34323930bbb2b960991b606082015260800190565b6020808252602b908201527f41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207460408201526a343290383937b837b9b2b960a91b606082015260800190565b60208082526024908201527f41746f6d69635377617045524332303a2053776170206973206e6f74206578706040820152631a5c995960e21b606082015260800190565b6020808252602f908201527f41746f6d69635377617045524332302e726566756e6446756e64733a2054726160408201527f6e73616374696f6e206661696c65640000000000000000000000000000000000606082015260800190565b6020808252602e908201527f41746f6d69635377617045524332302e636c61696d46756e64733a205472616e60408201527f73616374696f6e206661696c6564000000000000000000000000000000000000606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a2053776170206973206e6f7420636c6f6040820152621cd95960ea1b606082015260800190565b60208082526024908201527f537761704d616e616765723a20546f6b656e206973206e6f7420726567697374604082015263195c995960e21b606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a20496e76616c696420736563726574206040820152626b657960e81b606082015260800190565b6020808252603d908201527f41746f6d69635377617045524332302e63726561746550726f706f73616c3a2060408201527f43616c6c657220686173206e6f7420656e6f7567682062616c616e6365000000606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a2053776170206973206e6f74206f70656040820152621b995960ea1b606082015260800190565b94855260208501939093526001600160a01b039182166040850152166060830152608082015260a00190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207830ee0b29e9ff6946f81492363c5040a419b2b2bd8c8337780f8df5fee1cf0864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632d0fc6b41461005c5780633269a9b614610089578063725095031461009e5780639fd70182146100b1578063fc443cd9146100c4575b600080fd5b61006f61006a366004610ac8565b6100e4565b604051610080959493929190611073565b60405180910390f35b61009c610097366004610ae0565b610162565b005b61009c6100ac366004610b01565b6103bf565b61009c6100bf366004610ac8565b61079d565b6100d76100d2366004610ac8565b6109b9565b6040516100809190610c33565b60008181526020818152604091829020825160e0810184528154808252600183015493820184905260028301546001600160a01b03908116958301959095526003830154851660608301819052600484015490951660808301819052600584015460a0840181905260069094015460c0909301929092529590929450565b81600160008281526001602052604090205460ff16600381111561019657634e487b7160e01b600052602160045260246000fd5b146101bc5760405162461bcd60e51b81526004016101b390611030565b60405180910390fd5b8282806040516020016101cf9190610c33565b60408051601f198184030181529181528151602092830120600085815292839052912060050154146102135760405162461bcd60e51b81526004016101b390610f90565b60008581526020819052604090206004015485906001600160a01b0316331461024e5760405162461bcd60e51b81526004016101b390610d73565b600086815260208181526040808320815160e08101835281548152600180830154828601526002808401546001600160a01b03908116848701526003850154811660608501526004850154166080840152600584015460a08401526006909301805460c08401528c87528b905593849052919093208054919392909160ff19169083021790555060608101516080820151602083015160405163a9059cbb60e01b81526001600160a01b0384169263a9059cbb9261030e92600401610c8e565b602060405180830381600087803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610aa1565b61037c5760405162461bcd60e51b81526004016101b390610eac565b7f41e27b07030aa28d1c62c716585f04d3260fd3c1b2e747329ae1f203732004b588886040516103ad929190610cc6565b60405180910390a15050505050505050565b856000808281526001602052604090205460ff1660038111156103f257634e487b7160e01b600052602160045260246000fd5b1461040f5760405162461bcd60e51b81526004016101b390610d31565b60025460405163281ecdab60e11b81526000916001600160a01b03169063503d9b5690610440908990600401610c3c565b60006040518083038186803b15801561045857600080fd5b505afa15801561046c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104949190810190610b58565b90508051600014156104b85760405162461bcd60e51b81526004016101b390610f4c565b604051636eb1769f60e11b815286906001600160a01b0382169063dd62ed3e906104e89033903090600401610c50565b60206040518083038186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190610c1b565b8811156105575760405162461bcd60e51b81526004016101b390610fd3565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9061058790339030908d90600401610c6a565b602060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d99190610aa1565b6105f55760405162461bcd60e51b81526004016101b390610cd4565b60006040518060e001604052808681526020018a8152602001336001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018781526020016000801b8152509050806000808c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0820151816005015560c0820151816006015590505060018060008c815260200190815260200160002060006101000a81548160ff0219169083600381111561075257634e487b7160e01b600052602160045260246000fd5b02179055507e1aedab88934e047ebb0abe9ec226ef7f63305ea1a61e2ec49230cae4414a2e8a888860405161078993929190610ca7565b60405180910390a150505050505050505050565b80600160008281526001602052604090205460ff1660038111156107d157634e487b7160e01b600052602160045260246000fd5b146107ee5760405162461bcd60e51b81526004016101b390611030565b816107f7610a81565b60008281526020819052604090205411156108245760405162461bcd60e51b81526004016101b390610e0b565b60008381526020819052604090206002015483906001600160a01b0316331461085f5760405162461bcd60e51b81526004016101b390610dc0565b600084815260208181526040808320815160e0810183528154815260018083015482860190815260028401546001600160a01b0390811684870190815260038087015483166060870190815260048089015485166080890152600589015460a089015260069098015460c08801528e8b529490985297869020805460ff1916909717909655905195519051935163a9059cbb60e01b815291959485169363a9059cbb9361090c9301610c8e565b602060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190610aa1565b61097a5760405162461bcd60e51b81526004016101b390610e4f565b7f18ebe710226b6781b51c7cbba2305e730a5740b7427d6e6399107d0e14c74595866040516109a99190610c33565b60405180910390a1505050505050565b600081600260008281526001602052604090205460ff1660038111156109ef57634e487b7160e01b600052602160045260246000fd5b14610a0c5760405162461bcd60e51b81526004016101b390610f09565b505060009081526020818152604091829020825160e0810184528154815260018201549281019290925260028101546001600160a01b039081169383019390935260038101548316606083015260048101549092166080820152600582015460a082015260069091015460c090910181905290565b4290565b80356001600160a01b0381168114610a9c57600080fd5b919050565b600060208284031215610ab2578081fd5b81518015158114610ac1578182fd5b9392505050565b600060208284031215610ad9578081fd5b5035919050565b60008060408385031215610af2578081fd5b50508035926020909101359150565b60008060008060008060c08789031215610b19578182fd5b8635955060208701359450610b3060408801610a85565b9350610b3e60608801610a85565b92506080870135915060a087013590509295509295509295565b60006020808385031215610b6a578182fd5b825167ffffffffffffffff80821115610b81578384fd5b818501915085601f830112610b94578384fd5b815181811115610ba657610ba661109f565b604051601f8201601f1916810185018381118282101715610bc957610bc961109f565b6040528181528382018501881015610bdf578586fd5b8592505b81831015610c005783830185015181840186015291840191610be3565b81831115610c1057858583830101525b979650505050505050565b600060208284031215610c2c578081fd5b5051919050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b9283526001600160a01b03919091166020830152604082015260600190565b918252602082015260400190565b60208082526032908201527f41746f6d69635377617045524332302e63726561746550726f706f73616c3a2060408201527f5472616e73616374696f6e206661696c65640000000000000000000000000000606082015260800190565b60208082526022908201527f41746f6d69635377617045524332303a2053776170206974206e6f7420656d70604082015261747960f01b606082015260800190565b6020808252602d908201527f41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207460408201526c3432903bb4ba34323930bbb2b960991b606082015260800190565b6020808252602b908201527f41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207460408201526a343290383937b837b9b2b960a91b606082015260800190565b60208082526024908201527f41746f6d69635377617045524332303a2053776170206973206e6f74206578706040820152631a5c995960e21b606082015260800190565b6020808252602f908201527f41746f6d69635377617045524332302e726566756e6446756e64733a2054726160408201527f6e73616374696f6e206661696c65640000000000000000000000000000000000606082015260800190565b6020808252602e908201527f41746f6d69635377617045524332302e636c61696d46756e64733a205472616e60408201527f73616374696f6e206661696c6564000000000000000000000000000000000000606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a2053776170206973206e6f7420636c6f6040820152621cd95960ea1b606082015260800190565b60208082526024908201527f537761704d616e616765723a20546f6b656e206973206e6f7420726567697374604082015263195c995960e21b606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a20496e76616c696420736563726574206040820152626b657960e81b606082015260800190565b6020808252603d908201527f41746f6d69635377617045524332302e63726561746550726f706f73616c3a2060408201527f43616c6c657220686173206e6f7420656e6f7567682062616c616e6365000000606082015260800190565b60208082526023908201527f41746f6d69635377617045524332303a2053776170206973206e6f74206f70656040820152621b995960ea1b606082015260800190565b94855260208501939093526001600160a01b039182166040850152166060830152608082015260a00190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207830ee0b29e9ff6946f81492363c5040a419b2b2bd8c8337780f8df5fee1cf0864736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:349:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:229:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "173:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "181:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "128:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "199:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "218:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "212:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "203:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "300:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "308:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "250:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "261:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "276:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "281:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "272:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "272:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "285:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "268:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "268:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "257:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "257:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "247:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "247:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "240:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "237:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "326:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "336:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "326:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IBridgeManager_$9854_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "95:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "107:6:75",
                "type": ""
              }
            ],
            "src": "14:333:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IBridgeManager_$9854_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10712:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:75"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:75"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:75",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:75"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:75"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:75",
                "type": ""
              }
            ],
            "src": "14:198:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "295:219:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "341:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "350:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "358:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "343:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "343:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "343:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "316:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "325:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "312:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "312:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "337:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "308:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "308:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "305:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "376:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "389:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "389:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "380:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "458:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "467:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "475:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "460:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "460:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "460:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "427:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "448:5:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "441:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "441:13:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "434:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "434:21:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "424:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "424:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "417:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "417:40:75"
                  },
                  "nodeType": "YulIf",
                  "src": "414:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "493:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "503:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:75",
                "type": ""
              }
            ],
            "src": "217:297:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "589:120:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "635:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "644:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "652:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "637:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "637:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "637:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "610:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "619:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "606:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "606:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "631:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "599:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "670:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "693:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "680:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "670:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "555:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "566:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "578:6:75",
                "type": ""
              }
            ],
            "src": "519:190:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "801:171:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "847:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "856:6:75"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "864:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "849:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "849:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "849:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "822:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "831:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "818:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "818:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "843:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "814:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "811:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "882:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "892:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "882:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "924:42:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "951:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "962:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "934:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:32:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "924:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "759:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "770:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "782:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "790:6:75",
                "type": ""
              }
            ],
            "src": "714:258:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1132:394:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1179:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1188:6:75"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1196:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1181:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1181:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1181:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1153:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1162:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1149:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1149:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1174:3:75",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1145:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:33:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1142:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1214:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1237:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1224:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1214:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1256:42:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1283:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1294:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1279:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1279:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:32:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1307:50:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1342:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1353:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1338:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1338:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1317:20:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:40:75"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1366:50:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1401:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1412:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1376:20:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:40:75"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1366:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1425:43:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1452:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1463:3:75",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1448:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:19:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1435:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:33:75"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1425:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1477:43:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1504:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1515:3:75",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1500:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1500:19:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1487:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:33:75"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1058:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1069:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1081:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1089:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1097:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1105:6:75",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1113:6:75",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1121:6:75",
                "type": ""
              }
            ],
            "src": "977:549:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1622:1016:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1632:12:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1642:2:75",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1636:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1689:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1698:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1706:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1691:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1691:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1691:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1664:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1673:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1660:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:23:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1685:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1656:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1656:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1653:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1724:30:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1744:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1738:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:16:75"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1728:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1763:28:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1773:18:75",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1767:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1818:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1827:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1835:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1820:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1820:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1820:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1806:6:75"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1814:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1803:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:14:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1800:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1853:32:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1867:9:75"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1878:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1863:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1863:22:75"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1857:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1933:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1942:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1950:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1935:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1935:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1935:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1912:2:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1916:4:75",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:13:75"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1923:7:75"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1904:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1904:27:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1897:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1897:35:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1894:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1968:19:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1984:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1978:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1978:9:75"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1972:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2010:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2012:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2002:2:75"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2006:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1999:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:10:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1996:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2041:23:75",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2055:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:9:75"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2045:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2073:67:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2099:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2115:2:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2119:4:75",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2111:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2111:13:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2130:2:75",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2126:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2126:7:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2107:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2107:27:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:40:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2137:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2091:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2091:49:75"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2077:10:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2199:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2201:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2201:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2201:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2158:10:75"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2170:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2155:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2155:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2178:10:75"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2190:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2175:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2175:22:75"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2152:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:46:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2149:2:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2237:2:75",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2241:10:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2230:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2230:22:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2230:22:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2268:6:75"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2276:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:18:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2261:18:75"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2325:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2334:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2342:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2327:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2327:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2327:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2302:2:75"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2306:2:75"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2298:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2298:11:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2311:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2294:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2294:20:75"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2316:7:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2291:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:33:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2288:2:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2360:15:75",
                  "value": {
                    "name": "value0",
                    "nodeType": "YulIdentifier",
                    "src": "2369:6:75"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2364:1:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2430:83:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2459:6:75"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2467:1:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2455:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2455:14:75"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2471:2:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2451:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2451:23:75"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "2490:2:75"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2494:1:75"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2486:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2486:10:75"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2498:2:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2482:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2482:19:75"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2476:5:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2476:26:75"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2444:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2444:59:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2444:59:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2395:1:75"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2398:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2392:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:9:75"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2402:19:75",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2404:15:75",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2413:1:75"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2416:2:75"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2409:3:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2409:10:75"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2404:1:75"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2388:3:75",
                    "statements": []
                  },
                  "src": "2384:129:75"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2543:64:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2572:6:75"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "2580:2:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2568:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2568:15:75"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2585:2:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2564:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2564:24:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2590:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2557:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2557:40:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2557:40:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2528:1:75"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2531:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2525:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2525:9:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2522:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2616:16:75",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2626:6:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2616:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1588:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1599:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1611:6:75",
                "type": ""
              }
            ],
            "src": "1531:1107:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2724:113:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2770:26:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2779:6:75"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2787:6:75"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2772:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2772:22:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2772:22:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2745:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2754:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2741:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2741:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2766:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2737:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2734:2:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2805:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2815:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:16:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2805:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2690:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2701:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2713:6:75",
                "type": ""
              }
            ],
            "src": "2643:194:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2961:63:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2978:3:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2983:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2971:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:19:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2971:19:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2999:19:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3010:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3015:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3006:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:12:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2999:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2937:3:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2942:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2953:3:75",
                "type": ""
              }
            ],
            "src": "2842:182:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3130:125:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3140:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3152:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3163:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3148:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3148:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3140:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3182:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3197:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3205:42:75",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3193:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3193:55:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3175:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:74:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3175:74:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3099:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3110:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3121:4:75",
                "type": ""
              }
            ],
            "src": "3029:226:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3389:198:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3399:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3411:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3422:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3407:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3407:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3399:4:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3434:52:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3444:42:75",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3438:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3502:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3517:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3525:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3513:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3513:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3495:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3495:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3495:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3549:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3560:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3545:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3545:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3569:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3577:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3565:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3538:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3538:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3538:43:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3350:9:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3361:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3369:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3380:4:75",
                "type": ""
              }
            ],
            "src": "3260:327:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3749:241:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3759:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3771:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3782:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3767:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3767:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3759:4:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3794:52:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3804:42:75",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3798:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3862:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3877:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3885:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3873:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3873:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3855:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3855:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3929:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3937:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3925:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3925:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3961:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3972:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3957:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3957:18:75"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3977:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3950:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3950:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3702:9:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3713:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3721:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3729:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3740:4:75",
                "type": ""
              }
            ],
            "src": "3592:398:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4124:168:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4134:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4146:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4157:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4142:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4142:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4134:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4176:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4191:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:42:75",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4187:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4187:55:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4169:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:74:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4169:74:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4263:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4274:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4259:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4259:18:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4279:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4252:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4252:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4252:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4085:9:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4096:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4104:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4115:4:75",
                "type": ""
              }
            ],
            "src": "3995:297:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4398:76:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4408:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4420:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4431:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4416:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4416:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4408:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4450:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4461:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4443:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4443:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4443:25:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4367:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4378:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4389:4:75",
                "type": ""
              }
            ],
            "src": "4297:177:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4636:211:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4646:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4658:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4669:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4654:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4654:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4646:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4688:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4699:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4681:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4681:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4681:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4726:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4737:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4722:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4722:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4746:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4754:42:75",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4742:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4742:55:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4715:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4715:83:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4715:83:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4818:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4829:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4814:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4814:18:75"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4834:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4807:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4807:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4807:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_bytes32__to_t_bytes32_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4600:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4608:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4616:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4627:4:75",
                "type": ""
              }
            ],
            "src": "4479:368:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4981:119:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5003:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5014:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4999:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4991:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5033:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5044:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5026:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5026:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5026:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5071:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5082:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5067:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:18:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5087:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5060:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5060:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5060:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4942:9:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4953:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4961:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4972:4:75",
                "type": ""
              }
            ],
            "src": "4852:248:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5279:240:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5296:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5307:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5289:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5289:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5289:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5330:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5341:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5326:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5326:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5346:2:75",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5319:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5319:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5319:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5369:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5380:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5365:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5365:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5385:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20.createProposal: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5358:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5358:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5358:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5440:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5451:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5436:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5436:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5456:20:75",
                        "type": "",
                        "value": "Transaction failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5429:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5429:48:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5429:48:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5486:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5498:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5509:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5494:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5494:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5486:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5256:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5270:4:75",
                "type": ""
              }
            ],
            "src": "5105:414:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5698:224:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5715:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5726:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5708:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5708:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5749:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5760:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5745:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5765:2:75",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5738:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5738:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5738:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5788:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5799:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5784:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5784:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5804:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Swap it not emp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5777:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5777:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5777:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5859:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5870:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5855:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5855:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5875:4:75",
                        "type": "",
                        "value": "ty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5848:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5848:32:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5848:32:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5889:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5901:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5912:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5897:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5897:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5889:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5675:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5689:4:75",
                "type": ""
              }
            ],
            "src": "5524:398:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6101:235:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6118:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6129:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6111:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6111:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6111:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6152:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6163:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6148:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6148:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6168:2:75",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6141:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6141:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6191:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6202:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6187:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6187:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6207:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Caller is not t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6180:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6180:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6262:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6273:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6258:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6258:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6278:15:75",
                        "type": "",
                        "value": "he withdrawer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6251:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6251:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6251:43:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6303:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6315:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6326:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6311:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6311:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6303:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6078:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6092:4:75",
                "type": ""
              }
            ],
            "src": "5927:409:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6515:233:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6532:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6543:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6525:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6525:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6525:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6566:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6577:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6562:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6562:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6582:2:75",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6555:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6555:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6605:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6616:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6601:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6601:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6621:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Caller is not t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6594:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6594:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6594:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6676:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6687:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6672:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6672:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6692:13:75",
                        "type": "",
                        "value": "he proposer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6665:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6665:41:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6665:41:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6715:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6727:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6738:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6723:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6723:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6715:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6492:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6506:4:75",
                "type": ""
              }
            ],
            "src": "6341:407:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6927:226:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6944:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6955:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6937:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6937:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6937:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6978:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6989:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6974:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6974:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6994:2:75",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6967:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6967:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6967:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7017:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7028:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7013:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7013:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7033:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Swap is not exp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7006:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7006:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7088:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7099:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7084:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7084:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7104:6:75",
                        "type": "",
                        "value": "ired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7077:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7077:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7077:34:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7120:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7132:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7143:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7128:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7128:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7120:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6904:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6918:4:75",
                "type": ""
              }
            ],
            "src": "6753:400:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7332:237:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7349:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7360:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7342:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7342:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7383:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7394:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7379:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7379:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7399:2:75",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7372:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7372:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7372:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7422:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7433:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7418:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7418:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7438:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20.refundFunds: Tra"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7411:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7411:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7411:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7493:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7504:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7489:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7489:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7509:17:75",
                        "type": "",
                        "value": "nsaction failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7482:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:45:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7482:45:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7536:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7548:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7559:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7544:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7544:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7536:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7309:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7323:4:75",
                "type": ""
              }
            ],
            "src": "7158:411:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7748:236:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7765:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7776:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7758:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7758:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7758:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7799:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7810:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7795:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7795:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7815:2:75",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7788:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7788:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7788:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7838:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7849:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7834:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7834:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7854:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20.claimFunds: Tran"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7827:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7827:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7909:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7920:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7905:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7905:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7925:16:75",
                        "type": "",
                        "value": "saction failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7898:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7898:44:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7898:44:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7951:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7963:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7974:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7959:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7959:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7951:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7725:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7739:4:75",
                "type": ""
              }
            ],
            "src": "7574:410:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8163:225:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8180:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8191:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8173:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8173:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8173:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8214:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8225:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8210:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8210:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8230:2:75",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8203:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8203:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8203:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8253:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8264:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8249:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8249:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8269:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Swap is not clo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8242:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8242:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8242:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8324:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8335:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8320:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8320:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8340:5:75",
                        "type": "",
                        "value": "sed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8313:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8313:33:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8313:33:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8355:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8367:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8378:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8363:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8363:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8355:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8140:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8154:4:75",
                "type": ""
              }
            ],
            "src": "7989:399:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8567:226:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8584:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8595:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8577:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8577:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8577:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8618:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8629:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8614:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8614:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8634:2:75",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8607:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8607:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8657:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8668:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8653:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8653:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8673:34:75",
                        "type": "",
                        "value": "SwapManager: Token is not regist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8646:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8646:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8646:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8728:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8739:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8724:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8724:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8744:6:75",
                        "type": "",
                        "value": "ered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8717:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8717:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8717:34:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8760:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8772:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8783:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8768:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8768:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8760:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8544:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8558:4:75",
                "type": ""
              }
            ],
            "src": "8393:400:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8972:225:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8989:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8982:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8982:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8982:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9023:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9034:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9019:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9019:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9039:2:75",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9012:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9012:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9062:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9073:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9058:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9058:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9078:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Invalid secret "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9051:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9051:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9051:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9133:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9144:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9129:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9129:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9149:5:75",
                        "type": "",
                        "value": "key"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9122:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9122:33:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9122:33:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9164:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9176:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9187:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9172:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9172:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9164:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8949:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8963:4:75",
                "type": ""
              }
            ],
            "src": "8798:399:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9376:251:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9393:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9404:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9386:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9386:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9386:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9427:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9438:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9423:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9423:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9443:2:75",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9416:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9416:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9416:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9466:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9477:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9462:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9462:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9482:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20.createProposal: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9455:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9455:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9455:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9537:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9548:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9533:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9553:31:75",
                        "type": "",
                        "value": "Caller has not enough balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9526:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9526:59:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9526:59:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9594:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9606:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9617:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9602:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9594:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9353:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9367:4:75",
                "type": ""
              }
            ],
            "src": "9202:425:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9806:225:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9823:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9834:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9816:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9816:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9857:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9868:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9853:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9853:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9873:2:75",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9846:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9846:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9846:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9896:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9907:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9892:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9892:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9912:34:75",
                        "type": "",
                        "value": "AtomicSwapERC20: Swap is not ope"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9885:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9885:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9885:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9967:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9978:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9963:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9963:18:75"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9983:5:75",
                        "type": "",
                        "value": "ned"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:33:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:33:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9998:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10010:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10021:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10006:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10006:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9998:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9783:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9797:4:75",
                "type": ""
              }
            ],
            "src": "9632:399:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10249:329:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10259:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10271:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10282:3:75",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10267:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10267:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10259:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10302:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10313:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10295:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10295:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10295:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10340:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10351:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10336:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10336:18:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10356:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10329:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10329:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10329:34:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10372:52:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10382:42:75",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10376:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10444:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10455:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10440:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10440:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "10464:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10472:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10460:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10460:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10433:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10433:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10433:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10496:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10507:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10492:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10492:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "10516:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10524:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10512:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10512:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10485:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10485:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10485:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10548:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10559:3:75",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10544:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10544:19:75"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10565:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10537:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10537:35:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10537:35:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_uint256_t_uint256_t_address_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10186:9:75",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10197:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10205:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10213:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10221:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10229:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10240:4:75",
                "type": ""
              }
            ],
            "src": "10036:542:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10615:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10632:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10639:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10644:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10635:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10635:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10625:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10625:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10625:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10672:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10675:4:75",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10665:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10665:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10665:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10696:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10699:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10689:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10689:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10689:15:75"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "10583:127:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes32__to_t_bytes32_t_address_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"AtomicSwapERC20.createProposal: \")\n        mstore(add(headStart, 96), \"Transaction failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Swap it not emp\")\n        mstore(add(headStart, 96), \"ty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Caller is not t\")\n        mstore(add(headStart, 96), \"he withdrawer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Caller is not t\")\n        mstore(add(headStart, 96), \"he proposer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Swap is not exp\")\n        mstore(add(headStart, 96), \"ired\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AtomicSwapERC20.refundFunds: Tra\")\n        mstore(add(headStart, 96), \"nsaction failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"AtomicSwapERC20.claimFunds: Tran\")\n        mstore(add(headStart, 96), \"saction failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Swap is not clo\")\n        mstore(add(headStart, 96), \"sed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"SwapManager: Token is not regist\")\n        mstore(add(headStart, 96), \"ered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Invalid secret \")\n        mstore(add(headStart, 96), \"key\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"AtomicSwapERC20.createProposal: \")\n        mstore(add(headStart, 96), \"Caller has not enough balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"AtomicSwapERC20: Swap is not ope\")\n        mstore(add(headStart, 96), \"ned\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_uint256_t_uint256_t_address_t_address_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "227:6062:1:-:0;;;2616:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2663:6;:16;;-1:-1:-1;;;;;;2663:16:1;-1:-1:-1;;;;;2663:16:1;;;;;;;;;;227:6062;;14:333:75;;160:2;148:9;139:7;135:23;131:32;128:2;;;181:6;173;166:22;128:2;212:16;;-1:-1:-1;;;;;257:31:75;;247:42;;237:2;;308:6;300;293:22;237:2;336:5;118:229;-1:-1:-1;;;118:229:75:o;:::-;227:6062:1;;;;;;",
  "deployedSourceMap": "227:6062:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5487:454;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4130:714;;;;;;:::i;:::-;;:::i;:::-;;2695:1427;;;;;;:::i;:::-;;:::i;4852:627::-;;;;;;:::i;:::-;;:::i;5949:229::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5487:454::-;5583:16;5762:14;;;;;;;;;;;;5743:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5743:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5487:454;;;;;:::o;4130:714::-;4226:7;1361:11;1338:19;;;;:10;:19;;;;;;;;:34;;;;;;-1:-1:-1;;;1338:34:1;;;;;;;;;;1316:119;;;;-1:-1:-1;;;1316:119:1;;;;;;;:::i;:::-;;;;;;;;;4262:7:::1;4271:10;2091;2074:28;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;2074:28:1;;::::1;::::0;;;;;;2064:39;;2074:28:::1;2064:39:::0;;::::1;::::0;2035:5:::1;:14:::0;;;;;;;;;:25:::1;;::::0;:68:::1;2013:153;;;;-1:-1:-1::0;;;2013:153:1::1;;;;;;;:::i;:::-;2282:5:::2;:14:::0;;;::::2;::::0;;;;;;:25:::2;;::::0;:14;;-1:-1:-1;;;;;2282:25:1::2;2268:10;:39;2246:134;;;;-1:-1:-1::0;;;2246:134:1::2;;;;;;;:::i;:::-;4360:16:::3;4379:14:::0;;;::::3;::::0;;;;;;;4360:33;;::::3;::::0;::::3;::::0;;;;;;::::3;::::0;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;-1:-1:-1;;;;;4360:33:1;;::::3;::::0;;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;;::::3;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;;::::3;::::0;;;;;;4404:14;;;:37;;;4452:19;;;;;;;;:35;;4360:33;;;4452:19;;-1:-1:-1;;4452:35:1::3;::::0;4360:33;4452:35:::3;;::::0;;-1:-1:-1;4602:20:1::3;::::0;::::3;::::0;4682:15:::3;::::0;::::3;::::0;4699:10:::3;::::0;::::3;::::0;4656:54:::3;::::0;-1:-1:-1;;;4656:54:1;;-1:-1:-1;;;;;4656:25:1;::::3;::::0;::::3;::::0;:54:::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4634:150;;;;-1:-1:-1::0;;;4634:150:1::3;;;;;;;:::i;:::-;4802:34;4816:7;4825:10;4802:34;;;;;;;:::i;:::-;;;;;;;;2391:1;;2177::::2;1446::::1;;4130:714:::0;;;:::o;2695:1427::-;2922:7;1163:12;1140:19;;;;:10;:19;;;;;;;;:35;;;;;;-1:-1:-1;;;1140:35:1;;;;;;;;;;1118:119;;;;-1:-1:-1;;;1118:119:1;;;;;;;:::i;:::-;2965:6:::1;::::0;:49:::1;::::0;-1:-1:-1;;;2965:49:1;;2942:20:::1;::::0;-1:-1:-1;;;;;2965:6:1::1;::::0;:31:::1;::::0;:49:::1;::::0;2997:16;;2965:49:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2965:49:1::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2942:72;;3053:6;3047:20;3071:1;3047:25;;3025:111;;;;-1:-1:-1::0;;;3025:111:1::1;;;;;;;:::i;:::-;3309:53;::::0;-1:-1:-1;;;3309:53:1;;3249:16;;-1:-1:-1;;;;;3309:26:1;::::1;::::0;::::1;::::0;:53:::1;::::0;3336:10:::1;::::0;3356:4:::1;::::0;3309:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3299:6;:63;;3277:174;;;;-1:-1:-1::0;;;3277:174:1::1;;;;;;;:::i;:::-;3484:64;::::0;-1:-1:-1;;;3484:64:1;;-1:-1:-1;;;;;3484:29:1;::::1;::::0;::::1;::::0;:64:::1;::::0;3514:10:::1;::::0;3534:4:::1;::::0;3541:6;;3484:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3462:164;;;;-1:-1:-1::0;;;3462:164:1::1;;;;;;;:::i;:::-;3682:16;3710:265;;;;;;;;3740:9;3710:265;;;;3771:6;3710:265;;;;3802:10;-1:-1:-1::0;;;;;3710:265:1::1;;;;;3844:16;-1:-1:-1::0;;;;;3710:265:1::1;;;;;3887:11;-1:-1:-1::0;;;;;3710:265:1::1;;;;;3925:11;3710:265;;;;3962:1;3710:265:::0;::::1;;;::::0;3682:293:::1;;4003:4;3986:5;:14:::0;3992:7:::1;3986:14;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;-1:-1:-1::0;;;;;3986:21:1::1;;;;;;;;;;;;;;;;;;;;;;;;;4040:11;4018:10:::0;:19:::1;4029:7;4018:19;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4018:33:1::1;;;;;;;;;;;;;;4067:47;4080:7;4089:11;4102;4067:47;;;;;;;;:::i;:::-;;;;;;;;1248:1;;;2695:1427:::0;;;;;;;:::o;4852:627::-;4929:7;1361:11;1338:19;;;;:10;:19;;;;;;;;:34;;;;;;-1:-1:-1;;;1338:34:1;;;;;;;;;;1316:119;;;;-1:-1:-1;;;1316:119:1;;;;;;;:::i;:::-;4966:7:::1;1770:9;:7;:9::i;:::-;1743:5;:14:::0;;;::::1;::::0;;;;;;:23;:36:::1;;1721:122;;;;-1:-1:-1::0;;;1721:122:1::1;;;;;;;:::i;:::-;2494:5:::2;:14:::0;;;::::2;::::0;;;;;;:23:::2;;::::0;:14;;-1:-1:-1;;;;;2494:23:1::2;2480:10;:37;2458:130;;;;-1:-1:-1::0;;;2458:130:1::2;;;;;;;:::i;:::-;5051:16:::3;5070:14:::0;;;::::3;::::0;;;;;;;5051:33;;::::3;::::0;::::3;::::0;;;;;;::::3;::::0;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;::::3;::::0;-1:-1:-1;;;;;5051:33:1;;::::3;::::0;;;;;;::::3;::::0;;::::3;::::0;;::::3;::::0;;;;;;::::3;::::0;;::::3;::::0;;::::3;::::0;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;;::::3;::::0;;;;;5095:19;;;;;;;;;;;:36;;-1:-1:-1;;5095:36:1::3;::::0;;::::3;::::0;;;5249:20;;5329:13;;5344:10;;5303:52;;-1:-1:-1;;;5303:52:1;;5051:33;;5249:20;5303:25;::::3;::::0;::::3;::::0;:52:::3;::::0;::::3;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5281:149;;;;-1:-1:-1::0;;;5281:149:1::3;;;;;;;:::i;:::-;5448:23;5463:7;5448:23;;;;;;:::i;:::-;;;;;;;;2599:1;;1854::::2;1446::::1;4852:627:::0;;:::o;5949:229::-;6070:17;6043:7;1561:13;1538:19;;;;:10;:19;;;;;;;;:36;;;;;;-1:-1:-1;;;1538:36:1;;;;;;;;;;1516:121;;;;-1:-1:-1;;;1516:121:1;;;;;;;:::i;:::-;-1:-1:-1;;6105:16:1::1;6124:14:::0;;;::::1;::::0;;;;;;;;6105:33;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;6105:33:1;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;5949:229::o;6186:100::-;6263:15;6186:100;:::o;14:198:75:-;84:20;;-1:-1:-1;;;;;133:54:75;;123:65;;113:2;;202:1;199;192:12;113:2;65:147;;;:::o;217:297::-;;337:2;325:9;316:7;312:23;308:32;305:2;;;358:6;350;343:22;305:2;395:9;389:16;448:5;441:13;434:21;427:5;424:32;414:2;;475:6;467;460:22;414:2;503:5;295:219;-1:-1:-1;;;295:219:75:o;519:190::-;;631:2;619:9;610:7;606:23;602:32;599:2;;;652:6;644;637:22;599:2;-1:-1:-1;680:23:75;;589:120;-1:-1:-1;589:120:75:o;714:258::-;;;843:2;831:9;822:7;818:23;814:32;811:2;;;864:6;856;849:22;811:2;-1:-1:-1;;892:23:75;;;962:2;947:18;;;934:32;;-1:-1:-1;801:171:75:o;977:549::-;;;;;;;1174:3;1162:9;1153:7;1149:23;1145:33;1142:2;;;1196:6;1188;1181:22;1142:2;1237:9;1224:23;1214:33;;1294:2;1283:9;1279:18;1266:32;1256:42;;1317:40;1353:2;1342:9;1338:18;1317:40;:::i;:::-;1307:50;;1376:40;1412:2;1401:9;1397:18;1376:40;:::i;:::-;1366:50;;1463:3;1452:9;1448:19;1435:33;1425:43;;1515:3;1504:9;1500:19;1487:33;1477:43;;1132:394;;;;;;;;:::o;1531:1107::-;;1642:2;1685;1673:9;1664:7;1660:23;1656:32;1653:2;;;1706:6;1698;1691:22;1653:2;1744:9;1738:16;1773:18;1814:2;1806:6;1803:14;1800:2;;;1835:6;1827;1820:22;1800:2;1878:6;1867:9;1863:22;1853:32;;1923:7;1916:4;1912:2;1908:13;1904:27;1894:2;;1950:6;1942;1935:22;1894:2;1984;1978:9;2006:2;2002;1999:10;1996:2;;;2012:18;;:::i;:::-;2061:2;2055:9;2130:2;2111:13;;-1:-1:-1;;2107:27:75;2095:40;;2091:49;;2155:18;;;2175:22;;;2152:46;2149:2;;;2201:18;;:::i;:::-;2237:2;2230:22;2261:18;;;2298:11;;;2294:20;;2291:33;-1:-1:-1;2288:2:75;;;2342:6;2334;2327:22;2288:2;2369:6;2360:15;;2384:129;2398:2;2395:1;2392:9;2384:129;;;2486:10;;;2482:19;;2476:26;2455:14;;;2451:23;;2444:59;2409:10;;;;2384:129;;;2531:2;2528:1;2525:9;2522:2;;;2590:6;2585:2;2580;2572:6;2568:15;2564:24;2557:40;2522:2;2626:6;1622:1016;-1:-1:-1;;;;;;;1622:1016:75:o;2643:194::-;;2766:2;2754:9;2745:7;2741:23;2737:32;2734:2;;;2787:6;2779;2772:22;2734:2;-1:-1:-1;2815:16:75;;2724:113;-1:-1:-1;2724:113:75:o;2842:182::-;2971:19;;;3015:2;3006:12;;2961:63::o;3029:226::-;-1:-1:-1;;;;;3193:55:75;;;;3175:74;;3163:2;3148:18;;3130:125::o;3260:327::-;-1:-1:-1;;;;;3513:15:75;;;3495:34;;3565:15;;3560:2;3545:18;;3538:43;3422:2;3407:18;;3389:198::o;3592:398::-;-1:-1:-1;;;;;3873:15:75;;;3855:34;;3925:15;;;;3920:2;3905:18;;3898:43;3972:2;3957:18;;3950:34;;;;3782:2;3767:18;;3749:241::o;3995:297::-;-1:-1:-1;;;;;4187:55:75;;;;4169:74;;4274:2;4259:18;;4252:34;4157:2;4142:18;;4124:168::o;4479:368::-;4681:25;;;-1:-1:-1;;;;;4742:55:75;;;;4737:2;4722:18;;4715:83;4829:2;4814:18;;4807:34;4669:2;4654:18;;4636:211::o;4852:248::-;5026:25;;;5082:2;5067:18;;5060:34;5014:2;4999:18;;4981:119::o;5105:414::-;5307:2;5289:21;;;5346:2;5326:18;;;5319:30;5385:34;5380:2;5365:18;;5358:62;5456:20;5451:2;5436:18;;5429:48;5509:3;5494:19;;5279:240::o;5524:398::-;5726:2;5708:21;;;5765:2;5745:18;;;5738:30;5804:34;5799:2;5784:18;;5777:62;-1:-1:-1;;;5870:2:75;5855:18;;5848:32;5912:3;5897:19;;5698:224::o;5927:409::-;6129:2;6111:21;;;6168:2;6148:18;;;6141:30;6207:34;6202:2;6187:18;;6180:62;-1:-1:-1;;;6273:2:75;6258:18;;6251:43;6326:3;6311:19;;6101:235::o;6341:407::-;6543:2;6525:21;;;6582:2;6562:18;;;6555:30;6621:34;6616:2;6601:18;;6594:62;-1:-1:-1;;;6687:2:75;6672:18;;6665:41;6738:3;6723:19;;6515:233::o;6753:400::-;6955:2;6937:21;;;6994:2;6974:18;;;6967:30;7033:34;7028:2;7013:18;;7006:62;-1:-1:-1;;;7099:2:75;7084:18;;7077:34;7143:3;7128:19;;6927:226::o;7158:411::-;7360:2;7342:21;;;7399:2;7379:18;;;7372:30;7438:34;7433:2;7418:18;;7411:62;7509:17;7504:2;7489:18;;7482:45;7559:3;7544:19;;7332:237::o;7574:410::-;7776:2;7758:21;;;7815:2;7795:18;;;7788:30;7854:34;7849:2;7834:18;;7827:62;7925:16;7920:2;7905:18;;7898:44;7974:3;7959:19;;7748:236::o;7989:399::-;8191:2;8173:21;;;8230:2;8210:18;;;8203:30;8269:34;8264:2;8249:18;;8242:62;-1:-1:-1;;;8335:2:75;8320:18;;8313:33;8378:3;8363:19;;8163:225::o;8393:400::-;8595:2;8577:21;;;8634:2;8614:18;;;8607:30;8673:34;8668:2;8653:18;;8646:62;-1:-1:-1;;;8739:2:75;8724:18;;8717:34;8783:3;8768:19;;8567:226::o;8798:399::-;9000:2;8982:21;;;9039:2;9019:18;;;9012:30;9078:34;9073:2;9058:18;;9051:62;-1:-1:-1;;;9144:2:75;9129:18;;9122:33;9187:3;9172:19;;8972:225::o;9202:425::-;9404:2;9386:21;;;9443:2;9423:18;;;9416:30;9482:34;9477:2;9462:18;;9455:62;9553:31;9548:2;9533:18;;9526:59;9617:3;9602:19;;9376:251::o;9632:399::-;9834:2;9816:21;;;9873:2;9853:18;;;9846:30;9912:34;9907:2;9892:18;;9885:62;-1:-1:-1;;;9978:2:75;9963:18;;9956:33;10021:3;10006:19;;9806:225::o;10036:542::-;10295:25;;;10351:2;10336:18;;10329:34;;;;-1:-1:-1;;;;;10460:15:75;;;10455:2;10440:18;;10433:43;10512:15;10507:2;10492:18;;10485:43;10559:3;10544:19;;10537:35;10282:3;10267:19;;10249:329::o;10583:127::-;10644:10;10639:3;10635:20;10632:1;10625:31;10675:4;10672:1;10665:15;10699:4;10696:1;10689:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../interfaces/IBridgeManager.sol\";\r\n\r\ncontract AtomicSwapERC20 {\r\n    struct Swap {\r\n        uint256 timelock;\r\n        uint256 value;\r\n        address proposer;\r\n        address contractAddress;\r\n        address withdrawer;\r\n        bytes32 secretLock;\r\n        bytes32 secretKey;\r\n    }\r\n\r\n    /**\r\n     * @dev Swap States\r\n     * EMPTY - Default Value\r\n     * OPEN - Created Proposal\r\n     * CLOSED - Claimed Funds\r\n     * EXPIRED - Refund Funds\r\n     */\r\n    enum States {EMPTY, OPEN, CLOSED, EXPIRED}\r\n\r\n    mapping(bytes32 => Swap) private swaps;\r\n    mapping(bytes32 => States) private swapStates;\r\n\r\n    IBridgeManager private bridge;\r\n\r\n    event OpenProposal(\r\n        bytes32 _swapID,\r\n        address _withdrawer,\r\n        bytes32 _secretLock\r\n    );\r\n    event ExpireProposal(bytes32 _swapID);\r\n    event CloseProposal(bytes32 _swapID, bytes32 _secretKey);\r\n\r\n    modifier onlyEmptySwaps(bytes32 _swapID) {\r\n        require(\r\n            swapStates[_swapID] == States.EMPTY,\r\n            \"AtomicSwapERC20: Swap it not empty\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyOpenSwaps(bytes32 _swapID) {\r\n        require(\r\n            swapStates[_swapID] == States.OPEN,\r\n            \"AtomicSwapERC20: Swap is not opened\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyClosedSwaps(bytes32 _swapID) {\r\n        require(\r\n            swapStates[_swapID] == States.CLOSED,\r\n            \"AtomicSwapERC20: Swap is not closed\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyExpirableSwaps(bytes32 _swapID) {\r\n        require(\r\n            swaps[_swapID].timelock <= _getNow(),\r\n            \"AtomicSwapERC20: Swap is not expired\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyWithSecretKey(bytes32 _swapID, bytes32 _secretKey) {\r\n        // TODO: Require _secretKey length to conform to the spec\r\n        require(\r\n            swaps[_swapID].secretLock == keccak256(abi.encodePacked(_secretKey)),\r\n            \"AtomicSwapERC20: Invalid secret key\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyWithdrawer(bytes32 _swapID) {\r\n        require(\r\n            msg.sender == swaps[_swapID].withdrawer,\r\n            \"AtomicSwapERC20: Caller is not the withdrawer\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyProposer(bytes32 _swapID) {\r\n        require(\r\n            msg.sender == swaps[_swapID].proposer,\r\n            \"AtomicSwapERC20: Caller is not the proposer\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(IBridgeManager _bridge) {\r\n        bridge = _bridge;\r\n    }\r\n\r\n    function createProposal(\r\n        bytes32 _swapID,\r\n        uint256 _value,\r\n        address _contractAddress,\r\n        address _withdrawer,\r\n        bytes32 _secretLock,\r\n        uint256 _timelock\r\n    ) public onlyEmptySwaps(_swapID) {\r\n        string memory symbol = bridge.getErc20SymbolRegistered(_contractAddress);\r\n        require(\r\n            bytes(symbol).length != 0,\r\n            \"SwapManager: Token is not registered\"\r\n        );\r\n        // Transfer value from the token proposer to this contract.\r\n        IERC20 contractInstance = IERC20(_contractAddress);\r\n        require(\r\n            _value <= contractInstance.allowance(msg.sender, address(this)),\r\n            \"AtomicSwapERC20.createProposal: Caller has not enough balance\"\r\n        );\r\n        require(\r\n            contractInstance.transferFrom(msg.sender, address(this), _value),\r\n            \"AtomicSwapERC20.createProposal: Transaction failed\"\r\n        );\r\n\r\n        // Store the details of the swap.\r\n        Swap memory swap =\r\n        Swap({\r\n            timelock: _timelock,\r\n            value: _value,\r\n            proposer: msg.sender,\r\n            contractAddress: _contractAddress,\r\n            withdrawer: _withdrawer,\r\n            secretLock: _secretLock,\r\n            secretKey: 0\r\n        });\r\n        swaps[_swapID] = swap;\r\n        swapStates[_swapID] = States.OPEN;\r\n        emit OpenProposal(_swapID, _withdrawer, _secretLock);\r\n    }\r\n\r\n    function claimFunds(bytes32 _swapID, bytes32 _secretKey)\r\n        public\r\n        onlyOpenSwaps(_swapID)\r\n        onlyWithSecretKey(_swapID, _secretKey)\r\n        onlyWithdrawer(_swapID)\r\n    {\r\n        // Close the swap.\r\n        Swap memory swap = swaps[_swapID];\r\n        swaps[_swapID].secretKey = _secretKey;\r\n        swapStates[_swapID] = States.CLOSED;\r\n\r\n        // Transfer the funds from this contract to the withdrawer.\r\n        IERC20 contractInstance = IERC20(swap.contractAddress);\r\n        require(\r\n            contractInstance.transfer(swap.withdrawer, swap.value),\r\n            \"AtomicSwapERC20.claimFunds: Transaction failed\"\r\n        );\r\n\r\n        emit CloseProposal(_swapID, _secretKey);\r\n    }\r\n\r\n    function refundFunds(bytes32 _swapID)\r\n        public\r\n        onlyOpenSwaps(_swapID)\r\n        onlyExpirableSwaps(_swapID)\r\n        onlyProposer(_swapID)\r\n    {\r\n        // Expire the swap.\r\n        Swap memory swap = swaps[_swapID];\r\n        swapStates[_swapID] = States.EXPIRED;\r\n\r\n        // Transfer the token from this contract back to the proposer.\r\n        IERC20 contractInstance = IERC20(swap.contractAddress);\r\n        require(\r\n            contractInstance.transfer(swap.proposer, swap.value),\r\n            \"AtomicSwapERC20.refundFunds: Transaction failed\"\r\n        );\r\n\r\n        emit ExpireProposal(_swapID);\r\n    }\r\n\r\n    function getSwapInfo(bytes32 _swapID)\r\n        public\r\n        view\r\n        returns (\r\n        uint256 timelock,\r\n        uint256 value,\r\n        address contractAddress,\r\n        address withdrawer,\r\n        bytes32 secretLock\r\n        )\r\n    {\r\n        Swap memory swap = swaps[_swapID];\r\n        return (\r\n        swap.timelock,\r\n        swap.value,\r\n        swap.contractAddress,\r\n        swap.withdrawer,\r\n        swap.secretLock\r\n        );\r\n    }\r\n\r\n    function getSecretKey(bytes32 _swapID)\r\n        public\r\n        view\r\n        onlyClosedSwaps(_swapID)\r\n        returns (bytes32 secretKey)\r\n    {\r\n        Swap memory swap = swaps[_swapID];\r\n        return swap.secretKey;\r\n    }\r\n\r\n    function _getNow() internal view virtual returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/AtomicSwap/AtomicSwapERC20.sol",
  "ast": {
    "absolutePath": "/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/AtomicSwap/AtomicSwapERC20.sol",
    "exportedSymbols": {
      "AtomicSwapERC20": [
        1027
      ],
      "Counters": [
        16230
      ],
      "IBridgeManager": [
        9854
      ],
      "IERC20": [
        14746
      ]
    },
    "id": 1028,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 553,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 554,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 16231,
        "src": "69:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 555,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 14747,
        "src": "123:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/interfaces/IBridgeManager.sol",
        "file": "../interfaces/IBridgeManager.sol",
        "id": 556,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 9855,
        "src": "181:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1027,
        "linearizedBaseContracts": [
          1027
        ],
        "name": "AtomicSwapERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapERC20.Swap",
            "id": 571,
            "members": [
              {
                "constant": false,
                "id": 558,
                "mutability": "mutable",
                "name": "timelock",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "282:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 557,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "282:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 560,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "309:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 559,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 562,
                "mutability": "mutable",
                "name": "proposer",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "333:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "mutability": "mutable",
                "name": "contractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "360:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "394:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 565,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 568,
                "mutability": "mutable",
                "name": "secretLock",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "423:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 567,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 570,
                "mutability": "mutable",
                "name": "secretKey",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "452:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 569,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nodeType": "StructDefinition",
            "scope": 1027,
            "src": "259:218:1",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapERC20.States",
            "id": 576,
            "members": [
              {
                "id": 572,
                "name": "EMPTY",
                "nodeType": "EnumValue",
                "src": "665:5:1"
              },
              {
                "id": 573,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "672:4:1"
              },
              {
                "id": 574,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "678:6:1"
              },
              {
                "id": 575,
                "name": "EXPIRED",
                "nodeType": "EnumValue",
                "src": "686:7:1"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "652:42:1"
          },
          {
            "constant": false,
            "id": 581,
            "mutability": "mutable",
            "name": "swaps",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "702:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap)"
            },
            "typeName": {
              "id": 580,
              "keyType": {
                "id": 577,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "710:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "702:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap)"
              },
              "valueType": {
                "id": 579,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 578,
                  "name": "Swap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 571,
                  "src": "721:4:1"
                },
                "referencedDeclaration": 571,
                "src": "721:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                  "typeString": "struct AtomicSwapERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 586,
            "mutability": "mutable",
            "name": "swapStates",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "747:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
            },
            "typeName": {
              "id": 585,
              "keyType": {
                "id": 582,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "755:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "747:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
              },
              "valueType": {
                "id": 584,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 583,
                  "name": "States",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 576,
                  "src": "766:6:1"
                },
                "referencedDeclaration": 576,
                "src": "766:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$576",
                  "typeString": "enum AtomicSwapERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 589,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "801:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBridgeManager_$9854",
              "typeString": "contract IBridgeManager"
            },
            "typeName": {
              "id": 588,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 587,
                "name": "IBridgeManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9854,
                "src": "801:14:1"
              },
              "referencedDeclaration": 9854,
              "src": "801:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                "typeString": "contract IBridgeManager"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 597,
            "name": "OpenProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "868:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "894:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "924:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "857:93:1"
            },
            "src": "839:112:1"
          },
          {
            "anonymous": false,
            "id": 601,
            "name": "ExpireProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "978:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:17:1"
            },
            "src": "957:38:1"
          },
          {
            "anonymous": false,
            "id": 607,
            "name": "CloseProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "1021:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "1038:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:37:1"
            },
            "src": "1001:57:1"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1107:150:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 612,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1140:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 614,
                          "indexExpression": {
                            "id": 613,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "1151:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1140:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 615,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1163:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "EMPTY",
                          "nodeType": "MemberAccess",
                          "src": "1163:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1140:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206974206e6f7420656d707479",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap it not empty\""
                        },
                        "value": "AtomicSwapERC20: Swap it not empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap it not empty\""
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1118:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:119:1"
                },
                {
                  "id": 621,
                  "nodeType": "PlaceholderStatement",
                  "src": "1248:1:1"
                }
              ]
            },
            "id": 623,
            "name": "onlyEmptySwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1090:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:17:1"
            },
            "src": "1066:191:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "1305:150:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 628,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1338:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "id": 629,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "1349:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1338:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 631,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1361:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "src": "1361:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1338:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f74206f70656e6564",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1387:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not opened\""
                        },
                        "value": "AtomicSwapERC20: Swap is not opened"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not opened\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1316:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:119:1"
                },
                {
                  "id": 637,
                  "nodeType": "PlaceholderStatement",
                  "src": "1446:1:1"
                }
              ]
            },
            "id": 639,
            "name": "onlyOpenSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "1288:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:17:1"
            },
            "src": "1265:190:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1505:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 644,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1538:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 646,
                          "indexExpression": {
                            "id": 645,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "1549:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1538:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 647,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1561:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "src": "1561:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1538:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f7420636c6f736564",
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1589:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not closed\""
                        },
                        "value": "AtomicSwapERC20: Swap is not closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not closed\""
                        }
                      ],
                      "id": 643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1516:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:121:1"
                },
                {
                  "id": 653,
                  "nodeType": "PlaceholderStatement",
                  "src": "1648:1:1"
                }
              ]
            },
            "id": 655,
            "name": "onlyClosedSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1488:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:17:1"
            },
            "src": "1463:194:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1710:153:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 660,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "1743:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 662,
                            "indexExpression": {
                              "id": 661,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1749:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1743:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timelock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 558,
                          "src": "1743:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 664,
                            "name": "_getNow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1770:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:9:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1743:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f742065787069726564",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not expired\""
                        },
                        "value": "AtomicSwapERC20: Swap is not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not expired\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1721:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:122:1"
                },
                {
                  "id": 670,
                  "nodeType": "PlaceholderStatement",
                  "src": "1854:1:1"
                }
              ]
            },
            "id": 672,
            "name": "onlyExpirableSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "1693:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:17:1"
            },
            "src": "1665:198:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "1935:251:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 679,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2035:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "2041:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2035:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "secretLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 568,
                          "src": "2035:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 686,
                                  "name": "_secretKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 676,
                                  "src": "2091:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 684,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2074:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2074:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2074:28:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 683,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "2064:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2035:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a20496e76616c696420736563726574206b6579",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2118:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a",
                          "typeString": "literal_string \"AtomicSwapERC20: Invalid secret key\""
                        },
                        "value": "AtomicSwapERC20: Invalid secret key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a",
                          "typeString": "literal_string \"AtomicSwapERC20: Invalid secret key\""
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2013:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:153:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:153:1"
                },
                {
                  "id": 693,
                  "nodeType": "PlaceholderStatement",
                  "src": "2177:1:1"
                }
              ]
            },
            "id": 695,
            "name": "onlyWithSecretKey",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1898:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1915:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1897:37:1"
            },
            "src": "1871:315:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "2235:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 700,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2268:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2268:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 702,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2282:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 704,
                            "indexExpression": {
                              "id": 703,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "2288:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2282:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 566,
                          "src": "2282:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2268:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207468652077697468647261776572",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2322:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the withdrawer\""
                        },
                        "value": "AtomicSwapERC20: Caller is not the withdrawer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the withdrawer\""
                        }
                      ],
                      "id": 699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2246:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:134:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:134:1"
                },
                {
                  "id": 710,
                  "nodeType": "PlaceholderStatement",
                  "src": "2391:1:1"
                }
              ]
            },
            "id": 712,
            "name": "onlyWithdrawer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "2218:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:17:1"
            },
            "src": "2194:206:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 728,
              "nodeType": "Block",
              "src": "2447:161:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 717,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2480:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2480:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 719,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2494:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 721,
                            "indexExpression": {
                              "id": 720,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "2500:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2494:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "2494:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2480:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207468652070726f706f736572",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the proposer\""
                        },
                        "value": "AtomicSwapERC20: Caller is not the proposer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the proposer\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:130:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:130:1"
                },
                {
                  "id": 727,
                  "nodeType": "PlaceholderStatement",
                  "src": "2599:1:1"
                }
              ]
            },
            "id": 729,
            "name": "onlyProposer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "2430:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:17:1"
            },
            "src": "2408:200:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "2652:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "2663:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                        "typeString": "contract IBridgeManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 736,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "2672:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                        "typeString": "contract IBridgeManager"
                      }
                    },
                    "src": "2663:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                      "typeString": "contract IBridgeManager"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:16:1"
                }
              ]
            },
            "id": 740,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "2628:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                    "typeString": "contract IBridgeManager"
                  },
                  "typeName": {
                    "id": 731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 730,
                      "name": "IBridgeManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9854,
                      "src": "2628:14:1"
                    },
                    "referencedDeclaration": 9854,
                    "src": "2628:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                      "typeString": "contract IBridgeManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:24:1"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:0:1"
            },
            "scope": 1027,
            "src": "2616:71:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 845,
              "nodeType": "Block",
              "src": "2931:1191:1",
              "statements": [
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "2942:20:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2942:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 762,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "2997:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 760,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "2965:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                          "typeString": "contract IBridgeManager"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getErc20SymbolRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9749,
                      "src": "2965:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) view external returns (string memory)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2942:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 768,
                                "name": "symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 759,
                                "src": "3053:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3047:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 766,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3047:5:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3047:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3047:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3071:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3047:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761704d616e616765723a20546f6b656e206973206e6f742072656769737465726564",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3087:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3",
                          "typeString": "literal_string \"SwapManager: Token is not registered\""
                        },
                        "value": "SwapManager: Token is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3",
                          "typeString": "literal_string \"SwapManager: Token is not registered\""
                        }
                      ],
                      "id": 765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3025:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:111:1"
                },
                {
                  "assignments": [
                    778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 778,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "3216:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 777,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 776,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "3216:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "3216:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3249:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "3242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3216:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 784,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 744,
                          "src": "3299:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 787,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3336:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3336:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 791,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3356:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                    "typeString": "contract AtomicSwapERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                    "typeString": "contract AtomicSwapERC20"
                                  }
                                ],
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3348:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 789,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3348:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3348:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 785,
                              "name": "contractInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "3309:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$14746",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14705,
                            "src": "3309:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3309:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3299:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e63726561746550726f706f73616c3a2043616c6c657220686173206e6f7420656e6f7567682062616c616e6365",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3377:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Caller has not enough balance\""
                        },
                        "value": "AtomicSwapERC20.createProposal: Caller has not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Caller has not enough balance\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3277:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:174:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:174:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 801,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3514:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3514:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 805,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3534:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                  "typeString": "contract AtomicSwapERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                  "typeString": "contract AtomicSwapERC20"
                                }
                              ],
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3526:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 803,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3526:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 807,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 744,
                            "src": "3541:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 799,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3484:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14727,
                          "src": "3484:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3484:64:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e63726561746550726f706f73616c3a205472616e73616374696f6e206661696c6564",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.createProposal: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Transaction failed\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3462:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:164:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:164:1"
                },
                {
                  "assignments": [
                    814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 814,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "3682:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 813,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 812,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "3682:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "3682:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "3740:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 817,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "3771:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3802:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3802:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 820,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3844:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 821,
                        "name": "_withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3887:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "_secretLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3925:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3962:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 815,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "3710:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$571_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapERC20.Swap storage pointer)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "timelock",
                      "value",
                      "proposer",
                      "contractAddress",
                      "withdrawer",
                      "secretLock",
                      "secretKey"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3710:265:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                      "typeString": "struct AtomicSwapERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3682:293:1"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 826,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "3986:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                        }
                      },
                      "id": 828,
                      "indexExpression": {
                        "id": 827,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "3992:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3986:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_storage",
                        "typeString": "struct AtomicSwapERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 829,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "4003:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap memory"
                      }
                    },
                    "src": "3986:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "3986:21:1"
                },
                {
                  "expression": {
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 832,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "4018:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 834,
                      "indexExpression": {
                        "id": 833,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4029:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4018:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 835,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "4040:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "src": "4040:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "4018:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 840,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4080:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 841,
                        "name": "_withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4089:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 842,
                        "name": "_secretLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "4102:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 839,
                      "name": "OpenProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "4067:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "EmitStatement",
                  "src": "4062:52:1"
                }
              ]
            },
            "functionSelector": "72509503",
            "id": 846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 755,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 742,
                    "src": "2922:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 756,
                "modifierName": {
                  "id": 754,
                  "name": "onlyEmptySwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "2907:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2907:23:1"
              }
            ],
            "name": "createProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2729:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2755:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2780:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2815:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "_secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2845:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2875:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:181:1"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:0:1"
            },
            "scope": 1027,
            "src": "2695:1427:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "4321:523:1",
              "statements": [
                {
                  "assignments": [
                    865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "4360:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 864,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 863,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "4360:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "4360:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 869,
                  "initialValue": {
                    "baseExpression": {
                      "id": 866,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "4379:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 868,
                    "indexExpression": {
                      "id": 867,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "4385:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4379:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4360:33:1"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 870,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "4404:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                            "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "id": 871,
                          "name": "_swapID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 848,
                          "src": "4410:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4404:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage",
                          "typeString": "struct AtomicSwapERC20.Swap storage ref"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "secretKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 570,
                      "src": "4404:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "_secretKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "4431:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4404:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:37:1"
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 877,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "4452:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "id": 878,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "4463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4452:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 880,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "4474:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "src": "4474:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "4452:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "4452:35:1"
                },
                {
                  "assignments": [
                    886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 886,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "4569:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 884,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "4569:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "4569:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 891,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 888,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "4602:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "4602:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 887,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "4595:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 895,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "4682:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 896,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 566,
                            "src": "4682:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 897,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "4699:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 560,
                            "src": "4699:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 893,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "4656:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14695,
                          "src": "4656:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4656:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e636c61696d46756e64733a205472616e73616374696f6e206661696c6564",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4725:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56",
                          "typeString": "literal_string \"AtomicSwapERC20.claimFunds: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.claimFunds: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56",
                          "typeString": "literal_string \"AtomicSwapERC20.claimFunds: Transaction failed\""
                        }
                      ],
                      "id": 892,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4634:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4634:150:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "4634:150:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 904,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "4816:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 905,
                        "name": "_secretKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "4825:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 903,
                      "name": "CloseProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "4802:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "EmitStatement",
                  "src": "4797:39:1"
                }
              ]
            },
            "functionSelector": "3269a9b6",
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 853,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4226:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 854,
                "modifierName": {
                  "id": 852,
                  "name": "onlyOpenSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 639,
                  "src": "4212:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4212:22:1"
              },
              {
                "arguments": [
                  {
                    "id": 856,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4262:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 857,
                    "name": "_secretKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 850,
                    "src": "4271:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 858,
                "modifierName": {
                  "id": 855,
                  "name": "onlyWithSecretKey",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 695,
                  "src": "4244:17:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4244:38:1"
              },
              {
                "arguments": [
                  {
                    "id": 860,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4307:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 861,
                "modifierName": {
                  "id": 859,
                  "name": "onlyWithdrawer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 712,
                  "src": "4292:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:23:1"
              }
            ],
            "name": "claimFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "4150:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4150:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "4167:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4149:37:1"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:1"
            },
            "scope": 1027,
            "src": "4130:714:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "5011:468:1",
              "statements": [
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 960,
                      "src": "5051:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 924,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 923,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "5051:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "5051:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 929,
                  "initialValue": {
                    "baseExpression": {
                      "id": 926,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "5070:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 928,
                    "indexExpression": {
                      "id": 927,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "5076:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5070:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5051:33:1"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 930,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "5095:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 932,
                      "indexExpression": {
                        "id": 931,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "5106:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5095:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 933,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "5117:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "src": "5117:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "5095:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:36:1"
                },
                {
                  "assignments": [
                    939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 960,
                      "src": "5216:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 938,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 937,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "5216:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "5216:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 941,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "5249:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "5249:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 940,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "5242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5242:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5216:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 948,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "5329:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 562,
                            "src": "5329:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 950,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "5344:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 560,
                            "src": "5344:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 946,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "5303:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14695,
                          "src": "5303:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5303:52:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e726566756e6446756e64733a205472616e73616374696f6e206661696c6564",
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5370:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003",
                          "typeString": "literal_string \"AtomicSwapERC20.refundFunds: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.refundFunds: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003",
                          "typeString": "literal_string \"AtomicSwapERC20.refundFunds: Transaction failed\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5281:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:149:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:149:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "5463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 956,
                      "name": "ExpireProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "5448:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "EmitStatement",
                  "src": "5443:28:1"
                }
              ]
            },
            "functionSelector": "9fd70182",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 914,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4929:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 915,
                "modifierName": {
                  "id": 913,
                  "name": "onlyOpenSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 639,
                  "src": "4915:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4915:22:1"
              },
              {
                "arguments": [
                  {
                    "id": 917,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4966:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 918,
                "modifierName": {
                  "id": 916,
                  "name": "onlyExpirableSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 672,
                  "src": "4947:18:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4947:27:1"
              },
              {
                "arguments": [
                  {
                    "id": 920,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4997:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 921,
                "modifierName": {
                  "id": 919,
                  "name": "onlyProposer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 729,
                  "src": "4984:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4984:21:1"
              }
            ],
            "name": "refundFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "4873:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4872:17:1"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:0:1"
            },
            "scope": 1027,
            "src": "4852:627:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "5732:209:1",
              "statements": [
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "5743:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 976,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "5743:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "5743:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 982,
                  "initialValue": {
                    "baseExpression": {
                      "id": 979,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "5762:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 981,
                    "indexExpression": {
                      "id": 980,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "5768:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5762:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5743:33:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 983,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5805:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timelock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 558,
                        "src": "5805:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 985,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5829:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 560,
                        "src": "5829:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 987,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5850:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "5850:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 989,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5881:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 566,
                        "src": "5881:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 991,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5907:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "secretLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 568,
                        "src": "5907:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 993,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5794:139:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bytes32_$",
                      "typeString": "tuple(uint256,uint256,address,address,bytes32)"
                    }
                  },
                  "functionReturnParameters": 975,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "5787:146:1"
                }
              ]
            },
            "functionSelector": "2d0fc6b4",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5508:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5507:17:1"
            },
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "timelock",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5583:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5583:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5610:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5610:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5634:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5668:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5668:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5697:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:154:1"
            },
            "scope": 1027,
            "src": "5487:454:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "6094:84:1",
              "statements": [
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 1016,
                      "src": "6105:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 1007,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1006,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "6105:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "6105:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1012,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1009,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "6124:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 1011,
                    "indexExpression": {
                      "id": 1010,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "6130:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6124:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6105:33:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 1013,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "6156:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap memory"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "secretKey",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 570,
                    "src": "6156:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1005,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "6149:21:1"
                }
              ]
            },
            "functionSelector": "fc443cd9",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1001,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 998,
                    "src": "6043:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1002,
                "modifierName": {
                  "id": 1000,
                  "name": "onlyClosedSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "6027:15:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6027:24:1"
              }
            ],
            "name": "getSecretKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "5971:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5971:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5970:17:1"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "6070:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:19:1"
            },
            "scope": 1027,
            "src": "5949:229:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "6245:41:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1022,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "6263:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6263:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1021,
                  "id": 1024,
                  "nodeType": "Return",
                  "src": "6256:22:1"
                }
              ]
            },
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6202:2:1"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "6236:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6236:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6235:9:1"
            },
            "scope": 1027,
            "src": "6186:100:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1028,
        "src": "227:6062:1"
      }
    ],
    "src": "42:6251:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/AtomicSwap/AtomicSwapERC20.sol",
    "exportedSymbols": {
      "AtomicSwapERC20": [
        1027
      ],
      "Counters": [
        16230
      ],
      "IBridgeManager": [
        9854
      ],
      "IERC20": [
        14746
      ]
    },
    "id": 1028,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 553,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 554,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 16231,
        "src": "69:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 555,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 14747,
        "src": "123:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anthowen/Projects/Privi/PRIVIethereum/contracts/interfaces/IBridgeManager.sol",
        "file": "../interfaces/IBridgeManager.sol",
        "id": 556,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 9855,
        "src": "181:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1027,
        "linearizedBaseContracts": [
          1027
        ],
        "name": "AtomicSwapERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapERC20.Swap",
            "id": 571,
            "members": [
              {
                "constant": false,
                "id": 558,
                "mutability": "mutable",
                "name": "timelock",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "282:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 557,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "282:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 560,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "309:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 559,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 562,
                "mutability": "mutable",
                "name": "proposer",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "333:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "mutability": "mutable",
                "name": "contractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "360:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "394:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 565,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 568,
                "mutability": "mutable",
                "name": "secretLock",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "423:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 567,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 570,
                "mutability": "mutable",
                "name": "secretKey",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "452:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 569,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nodeType": "StructDefinition",
            "scope": 1027,
            "src": "259:218:1",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapERC20.States",
            "id": 576,
            "members": [
              {
                "id": 572,
                "name": "EMPTY",
                "nodeType": "EnumValue",
                "src": "665:5:1"
              },
              {
                "id": 573,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "672:4:1"
              },
              {
                "id": 574,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "678:6:1"
              },
              {
                "id": 575,
                "name": "EXPIRED",
                "nodeType": "EnumValue",
                "src": "686:7:1"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "652:42:1"
          },
          {
            "constant": false,
            "id": 581,
            "mutability": "mutable",
            "name": "swaps",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "702:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap)"
            },
            "typeName": {
              "id": 580,
              "keyType": {
                "id": 577,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "710:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "702:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap)"
              },
              "valueType": {
                "id": 579,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 578,
                  "name": "Swap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 571,
                  "src": "721:4:1"
                },
                "referencedDeclaration": 571,
                "src": "721:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                  "typeString": "struct AtomicSwapERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 586,
            "mutability": "mutable",
            "name": "swapStates",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "747:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
            },
            "typeName": {
              "id": 585,
              "keyType": {
                "id": 582,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "755:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "747:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
              },
              "valueType": {
                "id": 584,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 583,
                  "name": "States",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 576,
                  "src": "766:6:1"
                },
                "referencedDeclaration": 576,
                "src": "766:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$576",
                  "typeString": "enum AtomicSwapERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 589,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 1027,
            "src": "801:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBridgeManager_$9854",
              "typeString": "contract IBridgeManager"
            },
            "typeName": {
              "id": 588,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 587,
                "name": "IBridgeManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9854,
                "src": "801:14:1"
              },
              "referencedDeclaration": 9854,
              "src": "801:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                "typeString": "contract IBridgeManager"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 597,
            "name": "OpenProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "868:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "894:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "924:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "857:93:1"
            },
            "src": "839:112:1"
          },
          {
            "anonymous": false,
            "id": 601,
            "name": "ExpireProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "978:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:17:1"
            },
            "src": "957:38:1"
          },
          {
            "anonymous": false,
            "id": 607,
            "name": "CloseProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "1021:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "1038:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:37:1"
            },
            "src": "1001:57:1"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1107:150:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 612,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1140:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 614,
                          "indexExpression": {
                            "id": 613,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "1151:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1140:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 615,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1163:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "EMPTY",
                          "nodeType": "MemberAccess",
                          "src": "1163:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1140:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206974206e6f7420656d707479",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap it not empty\""
                        },
                        "value": "AtomicSwapERC20: Swap it not empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59586438cb18012fcd97eecf5361690473009efd3b8cdd7c19926764a5945413",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap it not empty\""
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1118:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:119:1"
                },
                {
                  "id": 621,
                  "nodeType": "PlaceholderStatement",
                  "src": "1248:1:1"
                }
              ]
            },
            "id": 623,
            "name": "onlyEmptySwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1090:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:17:1"
            },
            "src": "1066:191:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "1305:150:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 628,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1338:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "id": 629,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "1349:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1338:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 631,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1361:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "src": "1361:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1338:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f74206f70656e6564",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1387:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not opened\""
                        },
                        "value": "AtomicSwapERC20: Swap is not opened"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c405858d286ea0460987f1b8624b195c26e1fcfb1e5f59c35111843f1465b5",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not opened\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1316:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:119:1"
                },
                {
                  "id": 637,
                  "nodeType": "PlaceholderStatement",
                  "src": "1446:1:1"
                }
              ]
            },
            "id": 639,
            "name": "onlyOpenSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "1288:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:17:1"
            },
            "src": "1265:190:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1505:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$576",
                          "typeString": "enum AtomicSwapERC20.States"
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 644,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "1538:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 646,
                          "indexExpression": {
                            "id": 645,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "1549:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1538:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 647,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1561:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                              "typeString": "type(enum AtomicSwapERC20.States)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "src": "1561:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$576",
                            "typeString": "enum AtomicSwapERC20.States"
                          }
                        },
                        "src": "1538:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f7420636c6f736564",
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1589:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not closed\""
                        },
                        "value": "AtomicSwapERC20: Swap is not closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90e6eef1e1e5dc94d0029f340677506c64d03eac699b87df7c4eb4f8ee1f415d",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not closed\""
                        }
                      ],
                      "id": 643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1516:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:121:1"
                },
                {
                  "id": 653,
                  "nodeType": "PlaceholderStatement",
                  "src": "1648:1:1"
                }
              ]
            },
            "id": 655,
            "name": "onlyClosedSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1488:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:17:1"
            },
            "src": "1463:194:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1710:153:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 660,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "1743:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 662,
                            "indexExpression": {
                              "id": 661,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1749:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1743:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timelock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 558,
                          "src": "1743:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 664,
                            "name": "_getNow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1770:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:9:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1743:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2053776170206973206e6f742065787069726564",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not expired\""
                        },
                        "value": "AtomicSwapERC20: Swap is not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85777f97cb2d77736a8a4bf84a6aadc7aea2c9ab0e16f0913cd2e313f4625136",
                          "typeString": "literal_string \"AtomicSwapERC20: Swap is not expired\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1721:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:122:1"
                },
                {
                  "id": 670,
                  "nodeType": "PlaceholderStatement",
                  "src": "1854:1:1"
                }
              ]
            },
            "id": 672,
            "name": "onlyExpirableSwaps",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "1693:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:17:1"
            },
            "src": "1665:198:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "1935:251:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 679,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2035:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "2041:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2035:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "secretLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 568,
                          "src": "2035:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 686,
                                  "name": "_secretKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 676,
                                  "src": "2091:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 684,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2074:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2074:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2074:28:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 683,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "2064:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2035:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a20496e76616c696420736563726574206b6579",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2118:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a",
                          "typeString": "literal_string \"AtomicSwapERC20: Invalid secret key\""
                        },
                        "value": "AtomicSwapERC20: Invalid secret key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eddce85aa57d65ae47f282f2cdf29346be3cf48e0929555e2406826d3194b06a",
                          "typeString": "literal_string \"AtomicSwapERC20: Invalid secret key\""
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2013:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:153:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:153:1"
                },
                {
                  "id": 693,
                  "nodeType": "PlaceholderStatement",
                  "src": "2177:1:1"
                }
              ]
            },
            "id": 695,
            "name": "onlyWithSecretKey",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1898:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1915:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1897:37:1"
            },
            "src": "1871:315:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "2235:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 700,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2268:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2268:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 702,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2282:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 704,
                            "indexExpression": {
                              "id": 703,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "2288:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2282:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 566,
                          "src": "2282:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2268:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207468652077697468647261776572",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2322:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the withdrawer\""
                        },
                        "value": "AtomicSwapERC20: Caller is not the withdrawer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ab93defccc11c83f3eec55872575a61d37ef6043226052886cca60fd5d075b",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the withdrawer\""
                        }
                      ],
                      "id": 699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2246:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:134:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:134:1"
                },
                {
                  "id": 710,
                  "nodeType": "PlaceholderStatement",
                  "src": "2391:1:1"
                }
              ]
            },
            "id": 712,
            "name": "onlyWithdrawer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "2218:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:17:1"
            },
            "src": "2194:206:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 728,
              "nodeType": "Block",
              "src": "2447:161:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 717,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2480:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2480:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 719,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "2494:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                                "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                              }
                            },
                            "id": 721,
                            "indexExpression": {
                              "id": 720,
                              "name": "_swapID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "2500:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2494:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$571_storage",
                              "typeString": "struct AtomicSwapERC20.Swap storage ref"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "2494:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2480:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332303a2043616c6c6572206973206e6f74207468652070726f706f736572",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the proposer\""
                        },
                        "value": "AtomicSwapERC20: Caller is not the proposer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7108785dc4f9bd26e8116c472d6b7645c543a0cdf58bf24074d0715e2477ad72",
                          "typeString": "literal_string \"AtomicSwapERC20: Caller is not the proposer\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:130:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:130:1"
                },
                {
                  "id": 727,
                  "nodeType": "PlaceholderStatement",
                  "src": "2599:1:1"
                }
              ]
            },
            "id": 729,
            "name": "onlyProposer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "2430:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:17:1"
            },
            "src": "2408:200:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "2652:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "2663:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                        "typeString": "contract IBridgeManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 736,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "2672:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                        "typeString": "contract IBridgeManager"
                      }
                    },
                    "src": "2663:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                      "typeString": "contract IBridgeManager"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:16:1"
                }
              ]
            },
            "id": 740,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "2628:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                    "typeString": "contract IBridgeManager"
                  },
                  "typeName": {
                    "id": 731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 730,
                      "name": "IBridgeManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9854,
                      "src": "2628:14:1"
                    },
                    "referencedDeclaration": 9854,
                    "src": "2628:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                      "typeString": "contract IBridgeManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:24:1"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:0:1"
            },
            "scope": 1027,
            "src": "2616:71:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 845,
              "nodeType": "Block",
              "src": "2931:1191:1",
              "statements": [
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "2942:20:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2942:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 762,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "2997:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 760,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "2965:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridgeManager_$9854",
                          "typeString": "contract IBridgeManager"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getErc20SymbolRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9749,
                      "src": "2965:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) view external returns (string memory)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2942:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 768,
                                "name": "symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 759,
                                "src": "3053:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3047:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 766,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3047:5:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3047:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3047:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3071:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3047:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761704d616e616765723a20546f6b656e206973206e6f742072656769737465726564",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3087:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3",
                          "typeString": "literal_string \"SwapManager: Token is not registered\""
                        },
                        "value": "SwapManager: Token is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebbfa009d370660ccb6cced1525917876ead3bbd7ada6d1843b19e34c809b5d3",
                          "typeString": "literal_string \"SwapManager: Token is not registered\""
                        }
                      ],
                      "id": 765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3025:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:111:1"
                },
                {
                  "assignments": [
                    778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 778,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "3216:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 777,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 776,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "3216:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "3216:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3249:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "3242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3216:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 784,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 744,
                          "src": "3299:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 787,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3336:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3336:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 791,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3356:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                    "typeString": "contract AtomicSwapERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                    "typeString": "contract AtomicSwapERC20"
                                  }
                                ],
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3348:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 789,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3348:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3348:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 785,
                              "name": "contractInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "3309:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$14746",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14705,
                            "src": "3309:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3309:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3299:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e63726561746550726f706f73616c3a2043616c6c657220686173206e6f7420656e6f7567682062616c616e6365",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3377:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Caller has not enough balance\""
                        },
                        "value": "AtomicSwapERC20.createProposal: Caller has not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4fbd5542673f0e10facb8b6963fb12875d6d23db3fcd85ffdf222a377777fd7",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Caller has not enough balance\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3277:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:174:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:174:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 801,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3514:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3514:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 805,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3534:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                  "typeString": "contract AtomicSwapERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20_$1027",
                                  "typeString": "contract AtomicSwapERC20"
                                }
                              ],
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3526:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 803,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3526:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 807,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 744,
                            "src": "3541:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 799,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "3484:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14727,
                          "src": "3484:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3484:64:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e63726561746550726f706f73616c3a205472616e73616374696f6e206661696c6564",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.createProposal: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17241743827e47e6f941c46dcfdd80e241c35f75e61d6e2dc0352947832c1d80",
                          "typeString": "literal_string \"AtomicSwapERC20.createProposal: Transaction failed\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3462:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:164:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:164:1"
                },
                {
                  "assignments": [
                    814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 814,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 845,
                      "src": "3682:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 813,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 812,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "3682:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "3682:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "3740:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 817,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "3771:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3802:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3802:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 820,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "3844:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 821,
                        "name": "_withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3887:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "_secretLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3925:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3962:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 815,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "3710:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$571_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapERC20.Swap storage pointer)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "timelock",
                      "value",
                      "proposer",
                      "contractAddress",
                      "withdrawer",
                      "secretLock",
                      "secretKey"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3710:265:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                      "typeString": "struct AtomicSwapERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3682:293:1"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 826,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "3986:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                        }
                      },
                      "id": 828,
                      "indexExpression": {
                        "id": 827,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "3992:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3986:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_storage",
                        "typeString": "struct AtomicSwapERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 829,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "4003:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap memory"
                      }
                    },
                    "src": "3986:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "3986:21:1"
                },
                {
                  "expression": {
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 832,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "4018:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 834,
                      "indexExpression": {
                        "id": 833,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4029:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4018:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 835,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "4040:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "src": "4040:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "4018:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 840,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4080:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 841,
                        "name": "_withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4089:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 842,
                        "name": "_secretLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "4102:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 839,
                      "name": "OpenProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "4067:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "EmitStatement",
                  "src": "4062:52:1"
                }
              ]
            },
            "functionSelector": "72509503",
            "id": 846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 755,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 742,
                    "src": "2922:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 756,
                "modifierName": {
                  "id": 754,
                  "name": "onlyEmptySwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "2907:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2907:23:1"
              }
            ],
            "name": "createProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2729:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2755:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2780:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2815:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "_secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2845:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2875:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:181:1"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:0:1"
            },
            "scope": 1027,
            "src": "2695:1427:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "4321:523:1",
              "statements": [
                {
                  "assignments": [
                    865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "4360:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 864,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 863,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "4360:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "4360:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 869,
                  "initialValue": {
                    "baseExpression": {
                      "id": 866,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "4379:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 868,
                    "indexExpression": {
                      "id": 867,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "4385:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4379:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4360:33:1"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 870,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "4404:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                            "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "id": 871,
                          "name": "_swapID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 848,
                          "src": "4410:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4404:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage",
                          "typeString": "struct AtomicSwapERC20.Swap storage ref"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "secretKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 570,
                      "src": "4404:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "_secretKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "4431:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4404:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:37:1"
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 877,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "4452:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "id": 878,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "4463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4452:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 880,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "4474:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "src": "4474:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "4452:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "4452:35:1"
                },
                {
                  "assignments": [
                    886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 886,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "4569:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 884,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "4569:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "4569:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 891,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 888,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "4602:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "4602:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 887,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "4595:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 895,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "4682:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 896,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 566,
                            "src": "4682:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 897,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "4699:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 560,
                            "src": "4699:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 893,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "4656:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14695,
                          "src": "4656:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4656:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e636c61696d46756e64733a205472616e73616374696f6e206661696c6564",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4725:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56",
                          "typeString": "literal_string \"AtomicSwapERC20.claimFunds: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.claimFunds: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89fe41b171269809e5dd73d57338c28f2d7a1457fb9dd3b0a2849ce5b3508c56",
                          "typeString": "literal_string \"AtomicSwapERC20.claimFunds: Transaction failed\""
                        }
                      ],
                      "id": 892,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4634:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4634:150:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "4634:150:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 904,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "4816:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 905,
                        "name": "_secretKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "4825:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 903,
                      "name": "CloseProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "4802:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "EmitStatement",
                  "src": "4797:39:1"
                }
              ]
            },
            "functionSelector": "3269a9b6",
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 853,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4226:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 854,
                "modifierName": {
                  "id": 852,
                  "name": "onlyOpenSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 639,
                  "src": "4212:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4212:22:1"
              },
              {
                "arguments": [
                  {
                    "id": 856,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4262:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 857,
                    "name": "_secretKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 850,
                    "src": "4271:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 858,
                "modifierName": {
                  "id": 855,
                  "name": "onlyWithSecretKey",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 695,
                  "src": "4244:17:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4244:38:1"
              },
              {
                "arguments": [
                  {
                    "id": 860,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "4307:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 861,
                "modifierName": {
                  "id": 859,
                  "name": "onlyWithdrawer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 712,
                  "src": "4292:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:23:1"
              }
            ],
            "name": "claimFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "4150:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4150:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "_secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "4167:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4149:37:1"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:1"
            },
            "scope": 1027,
            "src": "4130:714:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "5011:468:1",
              "statements": [
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 960,
                      "src": "5051:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 924,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 923,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "5051:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "5051:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 929,
                  "initialValue": {
                    "baseExpression": {
                      "id": 926,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "5070:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 928,
                    "indexExpression": {
                      "id": 927,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "5076:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5070:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5051:33:1"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 930,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "5095:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$576_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 932,
                      "indexExpression": {
                        "id": 931,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "5106:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5095:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 933,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "5117:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$576_$",
                          "typeString": "type(enum AtomicSwapERC20.States)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "src": "5117:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$576",
                        "typeString": "enum AtomicSwapERC20.States"
                      }
                    },
                    "src": "5095:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$576",
                      "typeString": "enum AtomicSwapERC20.States"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:36:1"
                },
                {
                  "assignments": [
                    939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "contractInstance",
                      "nodeType": "VariableDeclaration",
                      "scope": 960,
                      "src": "5216:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14746",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 938,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 937,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14746,
                          "src": "5216:6:1"
                        },
                        "referencedDeclaration": 14746,
                        "src": "5216:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14746",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 941,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "5249:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "5249:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 940,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14746,
                      "src": "5242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14746_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5242:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14746",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5216:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 948,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "5329:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 562,
                            "src": "5329:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 950,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "5344:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                                "typeString": "struct AtomicSwapERC20.Swap memory"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 560,
                            "src": "5344:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 946,
                            "name": "contractInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "5303:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14746",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14695,
                          "src": "5303:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5303:52:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41746f6d69635377617045524332302e726566756e6446756e64733a205472616e73616374696f6e206661696c6564",
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5370:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003",
                          "typeString": "literal_string \"AtomicSwapERC20.refundFunds: Transaction failed\""
                        },
                        "value": "AtomicSwapERC20.refundFunds: Transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86fa9da740810de492f87deafd7a75ad03473e479d34e57ed66939298e11d003",
                          "typeString": "literal_string \"AtomicSwapERC20.refundFunds: Transaction failed\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5281:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:149:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:149:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "5463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 956,
                      "name": "ExpireProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "5448:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "EmitStatement",
                  "src": "5443:28:1"
                }
              ]
            },
            "functionSelector": "9fd70182",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 914,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4929:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 915,
                "modifierName": {
                  "id": 913,
                  "name": "onlyOpenSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 639,
                  "src": "4915:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4915:22:1"
              },
              {
                "arguments": [
                  {
                    "id": 917,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4966:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 918,
                "modifierName": {
                  "id": 916,
                  "name": "onlyExpirableSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 672,
                  "src": "4947:18:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4947:27:1"
              },
              {
                "arguments": [
                  {
                    "id": 920,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 911,
                    "src": "4997:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 921,
                "modifierName": {
                  "id": 919,
                  "name": "onlyProposer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 729,
                  "src": "4984:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4984:21:1"
              }
            ],
            "name": "refundFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "4873:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4872:17:1"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:0:1"
            },
            "scope": 1027,
            "src": "4852:627:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "5732:209:1",
              "statements": [
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "5743:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 976,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "5743:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "5743:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 982,
                  "initialValue": {
                    "baseExpression": {
                      "id": 979,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "5762:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 981,
                    "indexExpression": {
                      "id": 980,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "5768:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5762:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5743:33:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 983,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5805:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timelock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 558,
                        "src": "5805:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 985,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5829:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 560,
                        "src": "5829:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 987,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5850:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "5850:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 989,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5881:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 566,
                        "src": "5881:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 991,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "5907:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                            "typeString": "struct AtomicSwapERC20.Swap memory"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "secretLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 568,
                        "src": "5907:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 993,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5794:139:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bytes32_$",
                      "typeString": "tuple(uint256,uint256,address,address,bytes32)"
                    }
                  },
                  "functionReturnParameters": 975,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "5787:146:1"
                }
              ]
            },
            "functionSelector": "2d0fc6b4",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5508:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5507:17:1"
            },
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "timelock",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5583:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5583:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5610:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5610:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5634:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5668:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5668:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "secretLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "5697:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:154:1"
            },
            "scope": 1027,
            "src": "5487:454:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "6094:84:1",
              "statements": [
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "swap",
                      "nodeType": "VariableDeclaration",
                      "scope": 1016,
                      "src": "6105:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap"
                      },
                      "typeName": {
                        "id": 1007,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1006,
                          "name": "Swap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "6105:4:1"
                        },
                        "referencedDeclaration": 571,
                        "src": "6105:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$571_storage_ptr",
                          "typeString": "struct AtomicSwapERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1012,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1009,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "6124:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$571_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20.Swap storage ref)"
                      }
                    },
                    "id": 1011,
                    "indexExpression": {
                      "id": 1010,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "6130:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6124:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$571_storage",
                      "typeString": "struct AtomicSwapERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6105:33:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 1013,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "6156:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$571_memory_ptr",
                        "typeString": "struct AtomicSwapERC20.Swap memory"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "secretKey",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 570,
                    "src": "6156:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1005,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "6149:21:1"
                }
              ]
            },
            "functionSelector": "fc443cd9",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1001,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 998,
                    "src": "6043:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1002,
                "modifierName": {
                  "id": 1000,
                  "name": "onlyClosedSwaps",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "6027:15:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6027:24:1"
              }
            ],
            "name": "getSecretKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "5971:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5971:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5970:17:1"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "secretKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "6070:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:19:1"
            },
            "scope": 1027,
            "src": "5949:229:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "6245:41:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1022,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "6263:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6263:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1021,
                  "id": 1024,
                  "nodeType": "Return",
                  "src": "6256:22:1"
                }
              ]
            },
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6202:2:1"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "6236:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6236:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6235:9:1"
            },
            "scope": 1027,
            "src": "6186:100:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1028,
        "src": "227:6062:1"
      }
    ],
    "src": "42:6251:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xB369Faed9Ce736A66A5e312863a415E707Bb5599",
      "transactionHash": "0x404edc5e959bd161593fad5529bd6526810649fee8ebd64367989c4deeded13c"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xAF120de9a48D0C6D176BB4D0b18eAed4c4c1fEc9",
      "transactionHash": "0x46d0579ef70172db2ce3b3a38cfb845a04556dea2793a870ec6f9ad4acd1cef9"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-01T16:35:34.564Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}