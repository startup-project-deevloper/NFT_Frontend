{
  "contractName": "StakePool",
  "abi": [
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eric Nordelo\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_totalFundsReceived\":{\"details\":\"the total number of funds received to distribute (extracted + pending)\"}},\"title\":\"song stake pool contract implementation for minimal proxy multiple deployments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize()\":{\"notice\":\"initializes the minimal proxy clone\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/implementations/StakePool.sol\":\"StakePool\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"project:/contracts/implementations/StakePool.sol\":{\"keccak256\":\"0xef3458c99c0d739f9f15e500b003d0f1f3119deb70a6cb7cd87a495eb445c034\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f10ec6b1b73c90b0905c08c3619b3216002b6e74cbd5be0261a4c0618310e1e\",\"dweb:/ipfs/QmYSKDVr7vsXJ1HDkhZgGuzPGocRC9W2GR7KcvBc1Ygdau\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600060019054906101000a900460ff1680610060575060008054906101000a900460ff16155b61009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009690610136565b60405180910390fd5b60008060019054906101000a900460ff1615905080156100ef576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156101105760008060016101000a81548160ff0219169083151502179055505b50565b6000610120602e83610156565b915061012b82610167565b604082019050919050565b6000602082019050818103600083015261014f81610113565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a656400000000000000000000000000000000000060208201525056fea264697066735822122064dadea4b5c9e542314730640fc7329e1a2be09f687d29f24f19eb57d14147cf64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600060019054906101000a900460ff1680610060575060008054906101000a900460ff16155b61009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009690610136565b60405180910390fd5b60008060019054906101000a900460ff1615905080156100ef576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156101105760008060016101000a81548160ff0219169083151502179055505b50565b6000610120602e83610156565b915061012b82610167565b604082019050919050565b6000602082019050818103600083015261014f81610113565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a656400000000000000000000000000000000000060208201525056fea264697066735822122064dadea4b5c9e542314730640fc7329e1a2be09f687d29f24f19eb57d14147cf64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1215:54",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "153:220:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "163:74:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "229:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:2:54",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "170:58:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:67:54"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "335:3:54"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                      "nodeType": "YulIdentifier",
                      "src": "246:88:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:93:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "246:93:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:19:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "359:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "355:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:12:54"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "348:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "141:3:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "149:3:54",
                "type": ""
              }
            ],
            "src": "7:366:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:248:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "560:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "572:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "560:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "607:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:17:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "626:4:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "596:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "596:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "652:139:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "786:4:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "660:124:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:131:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "530:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "545:4:54",
                "type": ""
              }
            ],
            "src": "379:419:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:73:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "917:3:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "910:19:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "957:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:4:54",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:14:54"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "938:11:54"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "872:3:54",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "877:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "888:11:54",
                "type": ""
              }
            ],
            "src": "804:169:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1085:127:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1115:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1103:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:14:54"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1119:34:54",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1096:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:58:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1096:58:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:15:54"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1188:16:54",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1164:41:54"
                }
              ]
            },
            "name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1077:6:54",
                "type": ""
              }
            ],
            "src": "979:233:54"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n}\n",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "243:297:42:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "243:297:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:45;;;:::i;:::-;;;1409:13:14;;;;;;;;;;;:30;;;;1427:12;;;;;;;;;;1426:13;1409:30;1401:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1501:19;1524:13;;;;;;;;;;;1523:14;1501:36;;1551:14;1547:98;;;1597:4;1581:13;;:20;;;;;;;;;;;;;;;;;;1630:4;1615:12;;:19;;;;;;;;;;;;;;;;;;1547:98;1671:14;1667:66;;;1717:5;1701:13;;:21;;;;;;;;;;;;;;;;;;1667:66;1391:348;493:45:42:o;7:366:54:-;149:3;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:419::-;545:4;583:2;572:9;568:18;560:26;;632:9;626:4;622:20;618:1;607:9;603:17;596:47;660:131;786:4;660:131;:::i;:::-;652:139;;550:248;;;:::o;804:169::-;888:11;922:6;917:3;910:19;962:4;957:3;953:14;938:29;;900:73;;;;:::o;979:233::-;1119:34;1115:1;1107:6;1103:14;1096:58;1188:16;1183:2;1175:6;1171:15;1164:41;1085:127;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/**\n * @title song stake pool contract implementation for minimal proxy multiple deployments\n * @author Eric Nordelo\n */\ncontract StakePool is Initializable {\n    /**\n     * @dev the total number of funds received to distribute (extracted + pending)\n     */\n    uint256 private _totalFundsReceived;\n\n    /**\n     * @notice initializes the minimal proxy clone\n     */\n    function initialize() external initializer {}\n}\n",
  "sourcePath": "/Users/angelsatorresalmenara/Desktop/privi-trax-smart-contracts/contracts/implementations/StakePool.sol",
  "ast": {
    "absolutePath": "project:/contracts/implementations/StakePool.sol",
    "exportedSymbols": {
      "Initializable": [
        2686
      ],
      "StakePool": [
        8617
      ]
    },
    "id": 8618,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8602,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:42"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 8603,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8618,
        "sourceUnit": 2687,
        "src": "57:63:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8605,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2686,
              "src": "265:13:42"
            },
            "id": 8606,
            "nodeType": "InheritanceSpecifier",
            "src": "265:13:42"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8604,
          "nodeType": "StructuredDocumentation",
          "src": "122:120:42",
          "text": " @title song stake pool contract implementation for minimal proxy multiple deployments\n @author Eric Nordelo"
        },
        "fullyImplemented": true,
        "id": 8617,
        "linearizedBaseContracts": [
          8617,
          2686
        ],
        "name": "StakePool",
        "nameLocation": "252:9:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 8607,
              "nodeType": "StructuredDocumentation",
              "src": "285:94:42",
              "text": " @dev the total number of funds received to distribute (extracted + pending)"
            },
            "id": 8609,
            "mutability": "mutable",
            "name": "_totalFundsReceived",
            "nameLocation": "400:19:42",
            "nodeType": "VariableDeclaration",
            "scope": 8617,
            "src": "384:35:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8608,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "384:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8615,
              "nodeType": "Block",
              "src": "536:2:42",
              "statements": []
            },
            "documentation": {
              "id": 8610,
              "nodeType": "StructuredDocumentation",
              "src": "426:62:42",
              "text": " @notice initializes the minimal proxy clone"
            },
            "functionSelector": "8129fc1c",
            "id": 8616,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8612,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2685,
                  "src": "524:11:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "524:11:42"
              }
            ],
            "name": "initialize",
            "nameLocation": "502:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:42"
            },
            "returnParameters": {
              "id": 8614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:42"
            },
            "scope": 8617,
            "src": "493:45:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8618,
        "src": "243:297:42",
        "usedErrors": []
      }
    ],
    "src": "32:509:42"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/implementations/StakePool.sol",
    "exportedSymbols": {
      "Initializable": [
        2686
      ],
      "StakePool": [
        8617
      ]
    },
    "id": 8618,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8602,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:42"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 8603,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8618,
        "sourceUnit": 2687,
        "src": "57:63:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8605,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2686,
              "src": "265:13:42"
            },
            "id": 8606,
            "nodeType": "InheritanceSpecifier",
            "src": "265:13:42"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8604,
          "nodeType": "StructuredDocumentation",
          "src": "122:120:42",
          "text": " @title song stake pool contract implementation for minimal proxy multiple deployments\n @author Eric Nordelo"
        },
        "fullyImplemented": true,
        "id": 8617,
        "linearizedBaseContracts": [
          8617,
          2686
        ],
        "name": "StakePool",
        "nameLocation": "252:9:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 8607,
              "nodeType": "StructuredDocumentation",
              "src": "285:94:42",
              "text": " @dev the total number of funds received to distribute (extracted + pending)"
            },
            "id": 8609,
            "mutability": "mutable",
            "name": "_totalFundsReceived",
            "nameLocation": "400:19:42",
            "nodeType": "VariableDeclaration",
            "scope": 8617,
            "src": "384:35:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8608,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "384:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8615,
              "nodeType": "Block",
              "src": "536:2:42",
              "statements": []
            },
            "documentation": {
              "id": 8610,
              "nodeType": "StructuredDocumentation",
              "src": "426:62:42",
              "text": " @notice initializes the minimal proxy clone"
            },
            "functionSelector": "8129fc1c",
            "id": 8616,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8612,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2685,
                  "src": "524:11:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "524:11:42"
              }
            ],
            "name": "initialize",
            "nameLocation": "502:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:42"
            },
            "returnParameters": {
              "id": 8614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:42"
            },
            "scope": 8617,
            "src": "493:45:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8618,
        "src": "243:297:42",
        "usedErrors": []
      }
    ],
    "src": "32:509:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x9c56725CBb77D40D07CaA59c011EE3fFBcEBf828",
      "transactionHash": "0x461299af9651a2e34521381866ba1392b9a147653532f148d7e32b3efb8e274c"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-02T15:30:08.544Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Eric Nordelo",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "_totalFundsReceived": {
        "details": "the total number of funds received to distribute (extracted + pending)"
      }
    },
    "title": "song stake pool contract implementation for minimal proxy multiple deployments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initialize()": {
        "notice": "initializes the minimal proxy clone"
      }
    },
    "version": 1
  }
}