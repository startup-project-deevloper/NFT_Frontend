{
  "contractName": "ERC20TokenExchange",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenBuyingOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenBuyingOfferPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialOfferId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenExchangeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenFromOfferBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenFromOfferSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenSellingOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenSellingOfferPlaced",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getErc20ExchangeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20OfferCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20ExchangeAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Exchange[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getErc20OfferAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "offerType",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Offer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "getErc20ExchangeById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Exchange",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getErc20OfferById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "offerType",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creatorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.ERC20Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "exchangeName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "exchangeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CreateERC20TokenExchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PlaceERC20TokenBuyingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PlaceERC20TokenSellingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CancelOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CancelERC20TokenBuyingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.CancelOfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "CancelERC20TokenSellingOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.OfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "BuyERC20TokenFromOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20TokenExchange.OfferRequest",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SellERC20TokenFromOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenBuyingOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenBuyingOfferPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialOfferId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenExchangeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenFromOfferBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenFromOfferSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenSellingOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenSellingOfferPlaced\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.OfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"BuyERC20TokenFromOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CancelOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CancelERC20TokenBuyingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CancelOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CancelERC20TokenSellingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.CreateERC20TokenExchangeRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CreateERC20TokenExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.PlaceERC20TokenOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PlaceERC20TokenBuyingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.PlaceERC20TokenOfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PlaceERC20TokenSellingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.OfferRequest\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SellERC20TokenFromOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20ExchangeAll\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Exchange[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getErc20ExchangeById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"exchangeName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exchangeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"offerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Exchange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20ExchangeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20OfferAll\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getErc20OfferById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"offerType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20TokenExchange.ERC20Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getErc20OfferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Exchange Contract for ERC20 Token\",\"kind\":\"dev\",\"methods\":{\"BuyERC20TokenFromOffer((uint256,uint256),address)\":{\"details\":\"someone can buy token(ERC20) from selling offerexchangeTokenId id of exchange offerId id of offer\"},\"CancelERC20TokenBuyingOffer((uint256,uint256),address)\":{\"details\":\"creator of buying offer can cancel his ERC20Token BuyingOfferexchangeTokenId id of exchange offerId id of offer\"},\"CancelERC20TokenSellingOffer((uint256,uint256),address)\":{\"details\":\"creator of selling offer can cancel his ERC20 SellingOfferexchangeTokenId id of exchange offerId id of offer\"},\"CreateERC20TokenExchange((string,address,address,uint256,uint256),address)\":{\"details\":\"Owner of token can create Exchange of ERC20exchangeTokenAddress address of exchangeToken(ERC20) offerTokenAddress address of exchangeToken(ERC20) amount amount of Exchangeprice token price of Exchange\"},\"PlaceERC20TokenBuyingOffer((uint256,uint256,uint256),address)\":{\"details\":\"someone can create buying offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange\"},\"PlaceERC20TokenSellingOffer((uint256,uint256,uint256),address)\":{\"details\":\"owner of token can create selling offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange\"},\"SellERC20TokenFromOffer((uint256,uint256),address)\":{\"details\":\"owner of token can sell token(ERC20) from buying offerexchangeTokenId id of exchange offerId id of offer\"},\"constructor\":{\"details\":\"Constructor Function\"}},\"stateVariables\":{\"_erc20ExchangeCount\":{\"details\":\"count variables for ERC20Token exchange and offer mapping\"},\"_erc20Exchanges\":{\"details\":\"variables for storing ERC20TOken Exchange and Offer\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20TokenExchange.sol\":\"ERC20TokenExchange\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"project:/contracts/ERC20TokenExchange.sol\":{\"keccak256\":\"0xae0f007fdb9e5f133840272abdb86fbe947d7ba1635b4124ddc80ab5de61d678\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6a483f064ad0a46a9051e643e6513d6675b4da1dda6c15d1746e40cd57b8fab\",\"dweb:/ipfs/QmUUyM91xyuiAXvrqyMQU2qrweekGMGSfz6vorDeP9GBnn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008080556001556131ee806100286000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e060020a900480636f2663d411610090578063d50853e81161006a578063d50853e8146101ab578063d56aa3b4146101be578063e9851111146101d1578063fd6683aa146101e457600080fd5b80636f2663d414610158578063969de53b14610178578063cddcc5391461018b57600080fd5b80631431975b146100d85780631eb582da146100f65780632584fab61461010857806328069dfd1461011d5780635415b227146101325780635f88144114610145575b600080fd5b6100e06101ec565b6040516100ed9190612e54565b60405180910390f35b6001545b6040519081526020016100ed565b61011b610116366004612b46565b6103a0565b005b6101256108f2565b6040516100ed9190612eb4565b61011b610140366004612b46565b610aa1565b61011b610153366004612c8b565b610fc3565b61016b610166366004612cf8565b61137d565b6040516100ed919061300d565b61011b610186366004612c79565b611476565b61019e610199366004612cf8565b611a51565b6040516100ed9190613020565b61011b6101b9366004612c8b565b611b4b565b61011b6101cc366004612b79565b611ee0565b61011b6101df366004612c79565b61235a565b6000546100fa565b60606000805467ffffffffffffffff81111561021b5760e060020a634e487b7102600052604160045260246000fd5b60405190808252806020026020018201604052801561025457816020015b61024161294f565b8152602001906001900390816102395790505b50905060015b600054811161039a5760008181526002602052604090819020815160c0810190925280548290829061028b906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b7906130f3565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050509183525050600182810154600160a060020a03908116602084015260028401548116604084015260038401541660608301526004830154608083015260059092015460a090910152839061035b90846130ac565b8151811061037c5760e060020a634e487b7102600052603260045260246000fd5b602002602001018190525080806103929061312b565b91505061025a565b50919050565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546103e8906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610414906130f3565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050509183525050600382810154600160a060020a039081166020808501919091526004850154604080860191909152600590950154606094850152885160009081526002909152939093200154908301519293508116918116908416146105275760405160e560020a62461bcd02815260206004820152603a602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c64206265206f776e657200000000000060648201526084015b60405180910390fd5b83518251146105b55760405160e560020a62461bcd028152602060048201526048602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c64206265207468652073616d6520657860648201527f6368616e67654964000000000000000000000000000000000000000000000000608482015260a40161051e565b6040517f4255590000000000000000000000000000000000000000000000000000000000602082015260230160405160208183030381529060405280519060200120826040015160405160200161060c9190612e14565b60405160208183030381529060405280519060200120146106ac5760405160e560020a62461bcd028152602060048201526045602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c642062652074686520627579696e672060648201527f6f66666572000000000000000000000000000000000000000000000000000000608482015260a40161051e565b81608001518260a001516106c0919061308d565b60405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190612d10565b10156107c55760405160e560020a62461bcd028152602060048201526048602482015260008051602061319983398151915260448201527f79696e674f666665723a20796f7520646f6e2774206861766520656e6f75676860648201527f2062616c616e6365000000000000000000000000000000000000000000000000608482015260a40161051e565b80600160a060020a031663a9059cbb8484608001518560a001516107e9919061308d565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190612b1f565b506020808501516000908152600390915260408120818155600181018290559061089260028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020848101516040519081527f96ed5f54696f3eb2323e78c776ded20e24a0ddbfe707dfc11dd0de974789d6bb91015b60405180910390a150505050565b6060600060015467ffffffffffffffff8111156109225760e060020a634e487b7102600052604160045260246000fd5b60405190808252806020026020018201604052801561095b57816020015b6109486129dd565b8152602001906001900390816109405790505b50905060015b600154811161039a57600360008281526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546109ac906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546109d8906130f3565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b50505091835250506003820154600160a060020a031660208201526004820154604082015260059091015460609091015282610a626001846130ac565b81518110610a835760e060020a634e487b7102600052603260045260246000fd5b60200260200101819052508080610a999061312b565b915050610961565b600060036000846020015181526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282018054610ae9906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b15906130f3565b8015610b625780601f10610b3757610100808354040283529160200191610b62565b820191906000526020600020905b815481529060010190602001808311610b4557829003601f168201915b50505091835250506003820154600160a060020a03908116602080840191909152600484015460408085019190915260059094015460609384015287516000908152600291829052939093209092015490830151929350811691811690841614610c255760405160e560020a62461bcd02815260206004820152603b602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265206f776e65720000000000606482015260840161051e565b8351825114610cb35760405160e560020a62461bcd028152602060048201526049602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265207468652073616d65206560648201527f786368616e676549640000000000000000000000000000000000000000000000608482015260a40161051e565b60405160e260020a6314d15313026020820152602401604051602081830303815290604052805190602001208260400151604051602001610cf49190612e14565b6040516020818303038152906040528051906020012014610d945760405160e560020a62461bcd028152602060048201526047602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e60648201527f67206f6666657200000000000000000000000000000000000000000000000000608482015260a40161051e565b608082015160405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b158015610ddb57600080fd5b505afa158015610def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e139190612d10565b1015610e9e5760405160e560020a62461bcd028152602060048201526049602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f756760648201527f682062616c616e63650000000000000000000000000000000000000000000000608482015260a40161051e565b60808201516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260248201929092529082169063a9059cbb90604401602060405180830381600087803b158015610f0857600080fd5b505af1158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f409190612b1f565b5060208085015160009081526003909152604081208181556001810182905590610f6d60028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020848101516040519081527f8d0df4f0232f5407a296ed885c296c859d94584a4d45be9aab5286605108e7fa91016108e4565b8151600090815260026020908152604091829020600301549084015191840151600160a060020a0390911691610ff89161308d565b60405160e060020a6370a08231028152600160a060020a0384811660048301528316906370a082319060240160206040518083038186803b15801561103c57600080fd5b505afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110749190612d10565b10156111115760405160e560020a62461bcd02815260206004820152604760248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e42757960448201527f696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682060648201527f62616c616e636500000000000000000000000000000000000000000000000000608482015260a40161051e565b60008360400151116111b45760405160e560020a62461bcd02815260206004820152604f60248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e42757960448201527f696e674f666665723a2070726963652063616e2774206265206c6f776572206f60648201527f7220657175616c20746f207a65726f0000000000000000000000000000000000608482015260a40161051e565b80600160a060020a03166323b872dd8330866020015187604001516111d9919061308d565b6040518463ffffffff1660e060020a0281526004016111fa93929190612e30565b602060405180830381600087803b15801561121457600080fd5b505af1158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612b1f565b506112556129dd565b83518152604080518082018252600381527f425559000000000000000000000000000000000000000000000000000000000060208083019190915282840191909152600160a060020a0385166060840152850151608083015284015160a0820152600180549060006112c68361312b565b90915550506001805460208084018281526000928352600382526040928390208551815590519381019390935590830151805184939261130d926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556001546040519081527fab9887ec7581399be45c8d57b068532854a80523f0728e10e7d1ec8b211bf2d9906020016108e4565b61138561294f565b60008281526002602052604090819020815160c081019092528054829082906113ad906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546113d9906130f3565b80156114265780601f106113fb57610100808354040283529160200191611426565b820191906000526020600020905b81548152906001019060200180831161140957829003601f168201915b50505091835250506001820154600160a060020a03908116602083015260028301548116604083015260038301541660608201526004820154608082015260059091015460a09091015292915050565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546114be906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546114ea906130f3565b80156115375780601f1061150c57610100808354040283529160200191611537565b820191906000526020600020905b81548152906001019060200180831161151a57829003601f168201915b5050509183525050600382810154600160a060020a03908116602080850191909152600485015460408086019190915260059095015460609094019390935287516000908152600293849052848120909201548851835293909120909101548651845194955092821693911691146116405760405160e560020a62461bcd02815260206004820152604360248201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60448201527f666665723a2073686f756c64206265207468652073616d652065786368616e6760648201527f6549640000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b60405160e260020a6314d153130260208201526024016040516020818303038152906040528051906020012083604001516040516020016116819190612e14565b60405160208183030381529060405280519060200120146117335760405160e560020a62461bcd02815260206004820152604160248201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60448201527f666665723a2073686f756c64206265207468652073656c6c696e67206f66666560648201527f7200000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b82608001518360a00151611747919061308d565b60405160e060020a6370a08231028152600160a060020a0386811660048301528416906370a082319060240160206040518083038186803b15801561178b57600080fd5b505afa15801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612d10565b10156117e45760405160e560020a62461bcd02815260040161051e90612f8a565b608083015160405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b15801561182b57600080fd5b505afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118639190612d10565b10156118845760405160e560020a62461bcd02815260040161051e90612f8a565b81600160a060020a03166323b872dd85856060015186608001518760a001516118ad919061308d565b6040518463ffffffff1660e060020a0281526004016118ce93929190612e30565b602060405180830381600087803b1580156118e857600080fd5b505af11580156118fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119209190612b1f565b5060808301516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201929092529082169063a9059cbb90604401602060405180830381600087803b15801561198b57600080fd5b505af115801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c39190612b1f565b50602080860151600090815260039091526040812081815560018101829055906119f060028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020858101516040519081527f86d25bd27e55d1b7c838591f76c447846cd021f68d4df79ccc9c8d267a0c620491015b60405180910390a15050505050565b611a596129dd565b600360008381526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282018054611a9b906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac7906130f3565b8015611b145780601f10611ae957610100808354040283529160200191611b14565b820191906000526020600020905b815481529060010190602001808311611af757829003601f168201915b50505091835250506003820154600160a060020a031660208201526004820154604082015260059091015460609091015292915050565b81516000908152600260208181526040928390209091015490840151915160e060020a6370a08231028152600160a060020a038481166004830152909116919082906370a082319060240160206040518083038186803b158015611bae57600080fd5b505afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190612d10565b1015611c835760405160e560020a62461bcd02815260206004820152604860248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c60448201527f6c696e674f666665723a20796f7520646f6e2774206861766520656e6f75676860648201527f2062616c616e6365000000000000000000000000000000000000000000000000608482015260a40161051e565b6000836040015111611d265760405160e560020a62461bcd02815260206004820152605060248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c60448201527f6c696e674f666665723a2070726963652063616e2774206265206c6f7765722060648201527f6f7220657175616c20746f207a65726f00000000000000000000000000000000608482015260a40161051e565b60208301516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038316916323b872dd91611d73918691309190600401612e30565b602060405180830381600087803b158015611d8d57600080fd5b505af1158015611da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc59190612b1f565b50611dce6129dd565b835181526040805180820182526004815260e260020a6314d153130260208083019190915282840191909152600160a060020a0385166060840152850151608083015284015160a082015260018054906000611e298361312b565b909155505060018054602080840182815260009283526003825260409283902085518155905193810193909355908301518051849392611e70926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556001546040519081527f43f199d36aa09ee55761dfb7de2a3feb37719fb3aee5302d9d41a419ab319239906020016108e4565b6020820151606083015160405160e060020a6370a08231028152600160a060020a0384811660048301528316906370a082319060240160206040518083038186803b158015611f2e57600080fd5b505afa158015611f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f669190612d10565b10156120035760405160e560020a62461bcd02815260206004820152604260248201527f546f6b656e45786368616e67652e4372656174654552433230546f6b656e457860448201527f6368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f7560648201527f6768000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b60008360800151116120a65760405160e560020a62461bcd02815260206004820152604d60248201527f546f6b656e45786368616e67652e4372656174654552433230546f6b656e457860448201527f6368616e67653a2070726963652063616e2774206265206c6f776572206f722060648201527f657175616c20746f207a65726f00000000000000000000000000000000000000608482015260a40161051e565b60608301516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038316916323b872dd916120f3918691309190600401612e30565b602060405180830381600087803b15801561210d57600080fd5b505af1158015612121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121459190612b1f565b5061214e61294f565b83518152600160a060020a0380841660208084019190915285015181166040808401919091528501511660608083019190915284015160808083019190915284015160a08201526000805490806121a48361312b565b90915550506000805481526002602090815260409091208251805184936121cf928492910190612a1c565b506020820151600182018054600160a060020a03928316600160a060020a031991821617909155604084015160028401805491841691831691909117905560608401516003840180549190931691161790556080820151600482015560a09091015160059091015561223f6129dd565b6000805482526040805180820182526004815260e260020a6314d1531302602082015290830152600160a060020a038516606080840191909152860151608083015260a0808401519083015260018054916122998361312b565b9091555050600180546020808401828152600092835260038252604092839020855181559051938101939093559083015180518493926122e0926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556000546001546040805192835260208301919091527fc9d070d04e9cdf59bbe1f8c1888df22780e9a769051ecae7049fdebd648057199101611a42565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546123a2906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546123ce906130f3565b801561241b5780601f106123f05761010080835404028352916020019161241b565b820191906000526020600020905b8154815290600101906020018083116123fe57829003601f168201915b5050509183525050600382810154600160a060020a03908116602080850191909152600485015460408086019190915260059095015460609094019390935287516000908152600293849052848120909201548851835293909120909101548651845194955092821693911691146125255760405160e560020a62461bcd028152602060048201526044602482018190527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d908201527f4f666665723a2073686f756c64206265207468652073616d652065786368616e60648201527f6765496400000000000000000000000000000000000000000000000000000000608482015260a40161051e565b6040517f4255590000000000000000000000000000000000000000000000000000000000602082015260230160405160208183030381529060405280519060200120836040015160405160200161257c9190612e14565b604051602081830303815290604052805190602001201461262e5760405160e560020a62461bcd02815260206004820152604160248201527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d60448201527f4f666665723a2073686f756c642062652074686520627579696e67206f66666560648201527f7200000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b82608001518360a00151612642919061308d565b60405160e060020a6370a08231028152306004820152600160a060020a038416906370a082319060240160206040518083038186803b15801561268457600080fd5b505afa158015612698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bc9190612d10565b10156126dd5760405160e560020a62461bcd02815260040161051e90612f07565b6080830151606084015160405160e060020a6370a08231028152600160a060020a039182166004820152908316906370a082319060240160206040518083038186803b15801561272c57600080fd5b505afa158015612740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127649190612d10565b10156127855760405160e560020a62461bcd02815260040161051e90612f07565b81600160a060020a031663a9059cbb846060015185608001518660a001516127ad919061308d565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1580156127f157600080fd5b505af1158015612805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128299190612b1f565b50606083015160808401516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038416926323b872dd9261287a92899190600401612e30565b602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc9190612b1f565b50602080860151600090815260039091526040812081815560018101829055906128f960028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020858101516040519081527fb546f371a0e2970e03a2a9397a8965f347a3216b70fb3f3da67e8ba0a9c8900c9101611a42565b6040518060c00160405280606081526020016000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a0316815260200160008152602001600081525090565b5080546129ac906130f3565b6000825580601f106129bc575050565b601f0160209004906000526020600020908101906129da9190612aa0565b50565b6040518060c001604052806000815260200160008152602001606081526020016000600160a060020a0316815260200160008152602001600081525090565b828054612a28906130f3565b90600052602060002090601f016020900481019282612a4a5760008555612a90565b82601f10612a6357805160ff1916838001178555612a90565b82800160010185558215612a90579182015b82811115612a90578251825591602001919060010190612a75565b50612a9c929150612aa0565b5090565b5b80821115612a9c5760008155600101612aa1565b8035600160a060020a0381168114612acc57600080fd5b919050565b600060408284031215612ae2578081fd5b6040516040810181811067ffffffffffffffff82111715612b0557612b0561315f565b604052823581526020928301359281019290925250919050565b600060208284031215612b30578081fd5b81518015158114612b3f578182fd5b9392505050565b60008060608385031215612b58578081fd5b612b628484612ad1565b9150612b7060408401612ab5565b90509250929050565b60008060408385031215612b8b578182fd5b823567ffffffffffffffff80821115612ba2578384fd5b9084019060a08287031215612bb5578384fd5b612bbd613033565b823582811115612bcb578586fd5b8301601f81018813612bdb578586fd5b8035602084821115612bef57612bef61315f565b612c01601f8301601f1916820161305c565b94508185528981838501011115612c16578788fd5b818184018287013787818387010152848452612c33818701612ab5565b81850152612c4360408701612ab5565b60408501526060860135606085015260808601356080850152839750612c6a818a01612ab5565b96505050505050509250929050565b60008060608385031215612b58578182fd5b6000808284036080811215612c9e578283fd5b6060811215612cab578283fd5b506040516060810181811067ffffffffffffffff82111715612ccf57612ccf61315f565b6040908152843582526020808601359083015284810135908201529150612b7060608401612ab5565b600060208284031215612d09578081fd5b5035919050565b600060208284031215612d21578081fd5b5051919050565b60008151808452612d408160208601602086016130c3565b601f01601f19169290920160200192915050565b6000815160c08452612d6960c0850182612d28565b90506020830151600160a060020a03808216602087015280604086015116604087015280606086015116606087015250506080830151608085015260a083015160a08501528091505092915050565b80518252602081015160208301526000604082015160c06040850152612de160c0850182612d28565b9050600160a060020a0360608401511660608501526080830151608085015260a083015160a08501528091505092915050565b60008251612e268184602087016130c3565b9190910192915050565b600160a060020a039384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612ea757603f19888603018452612e95858351612d54565b94509285019290850190600101612e79565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612ea757603f19888603018452612ef5858351612db8565b94509285019290850190600101612ed9565b60208082526044908201527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d60408201527f4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c60608201527f616e636500000000000000000000000000000000000000000000000000000000608082015260a00190565b60208082526043908201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60408201527f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c6160608201527f6e63650000000000000000000000000000000000000000000000000000000000608082015260a00190565b602081526000612b3f6020830184612d54565b602081526000612b3f6020830184612db8565b60405160a0810167ffffffffffffffff811182821017156130565761305661315f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156130855761308561315f565b604052919050565b60008160001904831182151516156130a7576130a7613146565b500290565b6000828210156130be576130be613146565b500390565b60005b838110156130de5781810151838201526020016130c6565b838111156130ed576000848401525b50505050565b60028104600182168061310757607f821691505b6020821081141561039a5760e060020a634e487b7102600052602260045260246000fd5b600060001982141561313f5761313f613146565b5060010190565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfe546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e5365546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e4275a264697066735822122033461cf0024a07a93072e45f89cac779162eded0c4a65b7afa687cfa298d8f0564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d35760003560e060020a900480636f2663d411610090578063d50853e81161006a578063d50853e8146101ab578063d56aa3b4146101be578063e9851111146101d1578063fd6683aa146101e457600080fd5b80636f2663d414610158578063969de53b14610178578063cddcc5391461018b57600080fd5b80631431975b146100d85780631eb582da146100f65780632584fab61461010857806328069dfd1461011d5780635415b227146101325780635f88144114610145575b600080fd5b6100e06101ec565b6040516100ed9190612e54565b60405180910390f35b6001545b6040519081526020016100ed565b61011b610116366004612b46565b6103a0565b005b6101256108f2565b6040516100ed9190612eb4565b61011b610140366004612b46565b610aa1565b61011b610153366004612c8b565b610fc3565b61016b610166366004612cf8565b61137d565b6040516100ed919061300d565b61011b610186366004612c79565b611476565b61019e610199366004612cf8565b611a51565b6040516100ed9190613020565b61011b6101b9366004612c8b565b611b4b565b61011b6101cc366004612b79565b611ee0565b61011b6101df366004612c79565b61235a565b6000546100fa565b60606000805467ffffffffffffffff81111561021b5760e060020a634e487b7102600052604160045260246000fd5b60405190808252806020026020018201604052801561025457816020015b61024161294f565b8152602001906001900390816102395790505b50905060015b600054811161039a5760008181526002602052604090819020815160c0810190925280548290829061028b906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b7906130f3565b80156103045780601f106102d957610100808354040283529160200191610304565b820191906000526020600020905b8154815290600101906020018083116102e757829003601f168201915b5050509183525050600182810154600160a060020a03908116602084015260028401548116604084015260038401541660608301526004830154608083015260059092015460a090910152839061035b90846130ac565b8151811061037c5760e060020a634e487b7102600052603260045260246000fd5b602002602001018190525080806103929061312b565b91505061025a565b50919050565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546103e8906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610414906130f3565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050509183525050600382810154600160a060020a039081166020808501919091526004850154604080860191909152600590950154606094850152885160009081526002909152939093200154908301519293508116918116908416146105275760405160e560020a62461bcd02815260206004820152603a602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c64206265206f776e657200000000000060648201526084015b60405180910390fd5b83518251146105b55760405160e560020a62461bcd028152602060048201526048602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c64206265207468652073616d6520657860648201527f6368616e67654964000000000000000000000000000000000000000000000000608482015260a40161051e565b6040517f4255590000000000000000000000000000000000000000000000000000000000602082015260230160405160208183030381529060405280519060200120826040015160405160200161060c9190612e14565b60405160208183030381529060405280519060200120146106ac5760405160e560020a62461bcd028152602060048201526045602482015260008051602061319983398151915260448201527f79696e674f666665723a2073686f756c642062652074686520627579696e672060648201527f6f66666572000000000000000000000000000000000000000000000000000000608482015260a40161051e565b81608001518260a001516106c0919061308d565b60405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190612d10565b10156107c55760405160e560020a62461bcd028152602060048201526048602482015260008051602061319983398151915260448201527f79696e674f666665723a20796f7520646f6e2774206861766520656e6f75676860648201527f2062616c616e6365000000000000000000000000000000000000000000000000608482015260a40161051e565b80600160a060020a031663a9059cbb8484608001518560a001516107e9919061308d565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190612b1f565b506020808501516000908152600390915260408120818155600181018290559061089260028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020848101516040519081527f96ed5f54696f3eb2323e78c776ded20e24a0ddbfe707dfc11dd0de974789d6bb91015b60405180910390a150505050565b6060600060015467ffffffffffffffff8111156109225760e060020a634e487b7102600052604160045260246000fd5b60405190808252806020026020018201604052801561095b57816020015b6109486129dd565b8152602001906001900390816109405790505b50905060015b600154811161039a57600360008281526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546109ac906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546109d8906130f3565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b50505091835250506003820154600160a060020a031660208201526004820154604082015260059091015460609091015282610a626001846130ac565b81518110610a835760e060020a634e487b7102600052603260045260246000fd5b60200260200101819052508080610a999061312b565b915050610961565b600060036000846020015181526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282018054610ae9906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b15906130f3565b8015610b625780601f10610b3757610100808354040283529160200191610b62565b820191906000526020600020905b815481529060010190602001808311610b4557829003601f168201915b50505091835250506003820154600160a060020a03908116602080840191909152600484015460408085019190915260059094015460609384015287516000908152600291829052939093209092015490830151929350811691811690841614610c255760405160e560020a62461bcd02815260206004820152603b602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265206f776e65720000000000606482015260840161051e565b8351825114610cb35760405160e560020a62461bcd028152602060048201526049602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265207468652073616d65206560648201527f786368616e676549640000000000000000000000000000000000000000000000608482015260a40161051e565b60405160e260020a6314d15313026020820152602401604051602081830303815290604052805190602001208260400151604051602001610cf49190612e14565b6040516020818303038152906040528051906020012014610d945760405160e560020a62461bcd028152602060048201526047602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e60648201527f67206f6666657200000000000000000000000000000000000000000000000000608482015260a40161051e565b608082015160405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b158015610ddb57600080fd5b505afa158015610def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e139190612d10565b1015610e9e5760405160e560020a62461bcd028152602060048201526049602482015260008051602061317983398151915260448201527f6c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f756760648201527f682062616c616e63650000000000000000000000000000000000000000000000608482015260a40161051e565b60808201516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260248201929092529082169063a9059cbb90604401602060405180830381600087803b158015610f0857600080fd5b505af1158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f409190612b1f565b5060208085015160009081526003909152604081208181556001810182905590610f6d60028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020848101516040519081527f8d0df4f0232f5407a296ed885c296c859d94584a4d45be9aab5286605108e7fa91016108e4565b8151600090815260026020908152604091829020600301549084015191840151600160a060020a0390911691610ff89161308d565b60405160e060020a6370a08231028152600160a060020a0384811660048301528316906370a082319060240160206040518083038186803b15801561103c57600080fd5b505afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110749190612d10565b10156111115760405160e560020a62461bcd02815260206004820152604760248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e42757960448201527f696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682060648201527f62616c616e636500000000000000000000000000000000000000000000000000608482015260a40161051e565b60008360400151116111b45760405160e560020a62461bcd02815260206004820152604f60248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e42757960448201527f696e674f666665723a2070726963652063616e2774206265206c6f776572206f60648201527f7220657175616c20746f207a65726f0000000000000000000000000000000000608482015260a40161051e565b80600160a060020a03166323b872dd8330866020015187604001516111d9919061308d565b6040518463ffffffff1660e060020a0281526004016111fa93929190612e30565b602060405180830381600087803b15801561121457600080fd5b505af1158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612b1f565b506112556129dd565b83518152604080518082018252600381527f425559000000000000000000000000000000000000000000000000000000000060208083019190915282840191909152600160a060020a0385166060840152850151608083015284015160a0820152600180549060006112c68361312b565b90915550506001805460208084018281526000928352600382526040928390208551815590519381019390935590830151805184939261130d926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556001546040519081527fab9887ec7581399be45c8d57b068532854a80523f0728e10e7d1ec8b211bf2d9906020016108e4565b61138561294f565b60008281526002602052604090819020815160c081019092528054829082906113ad906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546113d9906130f3565b80156114265780601f106113fb57610100808354040283529160200191611426565b820191906000526020600020905b81548152906001019060200180831161140957829003601f168201915b50505091835250506001820154600160a060020a03908116602083015260028301548116604083015260038301541660608201526004820154608082015260059091015460a09091015292915050565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546114be906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546114ea906130f3565b80156115375780601f1061150c57610100808354040283529160200191611537565b820191906000526020600020905b81548152906001019060200180831161151a57829003601f168201915b5050509183525050600382810154600160a060020a03908116602080850191909152600485015460408086019190915260059095015460609094019390935287516000908152600293849052848120909201548851835293909120909101548651845194955092821693911691146116405760405160e560020a62461bcd02815260206004820152604360248201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60448201527f666665723a2073686f756c64206265207468652073616d652065786368616e6760648201527f6549640000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b60405160e260020a6314d153130260208201526024016040516020818303038152906040528051906020012083604001516040516020016116819190612e14565b60405160208183030381529060405280519060200120146117335760405160e560020a62461bcd02815260206004820152604160248201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60448201527f666665723a2073686f756c64206265207468652073656c6c696e67206f66666560648201527f7200000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b82608001518360a00151611747919061308d565b60405160e060020a6370a08231028152600160a060020a0386811660048301528416906370a082319060240160206040518083038186803b15801561178b57600080fd5b505afa15801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612d10565b10156117e45760405160e560020a62461bcd02815260040161051e90612f8a565b608083015160405160e060020a6370a08231028152306004820152600160a060020a038316906370a082319060240160206040518083038186803b15801561182b57600080fd5b505afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118639190612d10565b10156118845760405160e560020a62461bcd02815260040161051e90612f8a565b81600160a060020a03166323b872dd85856060015186608001518760a001516118ad919061308d565b6040518463ffffffff1660e060020a0281526004016118ce93929190612e30565b602060405180830381600087803b1580156118e857600080fd5b505af11580156118fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119209190612b1f565b5060808301516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201929092529082169063a9059cbb90604401602060405180830381600087803b15801561198b57600080fd5b505af115801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c39190612b1f565b50602080860151600090815260039091526040812081815560018101829055906119f060028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020858101516040519081527f86d25bd27e55d1b7c838591f76c447846cd021f68d4df79ccc9c8d267a0c620491015b60405180910390a15050505050565b611a596129dd565b600360008381526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282018054611a9b906130f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac7906130f3565b8015611b145780601f10611ae957610100808354040283529160200191611b14565b820191906000526020600020905b815481529060010190602001808311611af757829003601f168201915b50505091835250506003820154600160a060020a031660208201526004820154604082015260059091015460609091015292915050565b81516000908152600260208181526040928390209091015490840151915160e060020a6370a08231028152600160a060020a038481166004830152909116919082906370a082319060240160206040518083038186803b158015611bae57600080fd5b505afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190612d10565b1015611c835760405160e560020a62461bcd02815260206004820152604860248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c60448201527f6c696e674f666665723a20796f7520646f6e2774206861766520656e6f75676860648201527f2062616c616e6365000000000000000000000000000000000000000000000000608482015260a40161051e565b6000836040015111611d265760405160e560020a62461bcd02815260206004820152605060248201527f546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c60448201527f6c696e674f666665723a2070726963652063616e2774206265206c6f7765722060648201527f6f7220657175616c20746f207a65726f00000000000000000000000000000000608482015260a40161051e565b60208301516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038316916323b872dd91611d73918691309190600401612e30565b602060405180830381600087803b158015611d8d57600080fd5b505af1158015611da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc59190612b1f565b50611dce6129dd565b835181526040805180820182526004815260e260020a6314d153130260208083019190915282840191909152600160a060020a0385166060840152850151608083015284015160a082015260018054906000611e298361312b565b909155505060018054602080840182815260009283526003825260409283902085518155905193810193909355908301518051849392611e70926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556001546040519081527f43f199d36aa09ee55761dfb7de2a3feb37719fb3aee5302d9d41a419ab319239906020016108e4565b6020820151606083015160405160e060020a6370a08231028152600160a060020a0384811660048301528316906370a082319060240160206040518083038186803b158015611f2e57600080fd5b505afa158015611f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f669190612d10565b10156120035760405160e560020a62461bcd02815260206004820152604260248201527f546f6b656e45786368616e67652e4372656174654552433230546f6b656e457860448201527f6368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f7560648201527f6768000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b60008360800151116120a65760405160e560020a62461bcd02815260206004820152604d60248201527f546f6b656e45786368616e67652e4372656174654552433230546f6b656e457860448201527f6368616e67653a2070726963652063616e2774206265206c6f776572206f722060648201527f657175616c20746f207a65726f00000000000000000000000000000000000000608482015260a40161051e565b60608301516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038316916323b872dd916120f3918691309190600401612e30565b602060405180830381600087803b15801561210d57600080fd5b505af1158015612121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121459190612b1f565b5061214e61294f565b83518152600160a060020a0380841660208084019190915285015181166040808401919091528501511660608083019190915284015160808083019190915284015160a08201526000805490806121a48361312b565b90915550506000805481526002602090815260409091208251805184936121cf928492910190612a1c565b506020820151600182018054600160a060020a03928316600160a060020a031991821617909155604084015160028401805491841691831691909117905560608401516003840180549190931691161790556080820151600482015560a09091015160059091015561223f6129dd565b6000805482526040805180820182526004815260e260020a6314d1531302602082015290830152600160a060020a038516606080840191909152860151608083015260a0808401519083015260018054916122998361312b565b9091555050600180546020808401828152600092835260038252604092839020855181559051938101939093559083015180518493926122e0926002850192910190612a1c565b506060820151600382018054600160a060020a031916600160a060020a039092169190911790556080820151600482015560a0909101516005909101556000546001546040805192835260208301919091527fc9d070d04e9cdf59bbe1f8c1888df22780e9a769051ecae7049fdebd648057199101611a42565b600060036000846020015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820180546123a2906130f3565b80601f01602080910402602001604051908101604052809291908181526020018280546123ce906130f3565b801561241b5780601f106123f05761010080835404028352916020019161241b565b820191906000526020600020905b8154815290600101906020018083116123fe57829003601f168201915b5050509183525050600382810154600160a060020a03908116602080850191909152600485015460408086019190915260059095015460609094019390935287516000908152600293849052848120909201548851835293909120909101548651845194955092821693911691146125255760405160e560020a62461bcd028152602060048201526044602482018190527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d908201527f4f666665723a2073686f756c64206265207468652073616d652065786368616e60648201527f6765496400000000000000000000000000000000000000000000000000000000608482015260a40161051e565b6040517f4255590000000000000000000000000000000000000000000000000000000000602082015260230160405160208183030381529060405280519060200120836040015160405160200161257c9190612e14565b604051602081830303815290604052805190602001201461262e5760405160e560020a62461bcd02815260206004820152604160248201527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d60448201527f4f666665723a2073686f756c642062652074686520627579696e67206f66666560648201527f7200000000000000000000000000000000000000000000000000000000000000608482015260a40161051e565b82608001518360a00151612642919061308d565b60405160e060020a6370a08231028152306004820152600160a060020a038416906370a082319060240160206040518083038186803b15801561268457600080fd5b505afa158015612698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bc9190612d10565b10156126dd5760405160e560020a62461bcd02815260040161051e90612f07565b6080830151606084015160405160e060020a6370a08231028152600160a060020a039182166004820152908316906370a082319060240160206040518083038186803b15801561272c57600080fd5b505afa158015612740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127649190612d10565b10156127855760405160e560020a62461bcd02815260040161051e90612f07565b81600160a060020a031663a9059cbb846060015185608001518660a001516127ad919061308d565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1580156127f157600080fd5b505af1158015612805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128299190612b1f565b50606083015160808401516040517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038416926323b872dd9261287a92899190600401612e30565b602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc9190612b1f565b50602080860151600090815260039091526040812081815560018101829055906128f960028301826129a0565b50600381018054600160a060020a03191690556000600482018190556005909101556020858101516040519081527fb546f371a0e2970e03a2a9397a8965f347a3216b70fb3f3da67e8ba0a9c8900c9101611a42565b6040518060c00160405280606081526020016000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a0316815260200160008152602001600081525090565b5080546129ac906130f3565b6000825580601f106129bc575050565b601f0160209004906000526020600020908101906129da9190612aa0565b50565b6040518060c001604052806000815260200160008152602001606081526020016000600160a060020a0316815260200160008152602001600081525090565b828054612a28906130f3565b90600052602060002090601f016020900481019282612a4a5760008555612a90565b82601f10612a6357805160ff1916838001178555612a90565b82800160010185558215612a90579182015b82811115612a90578251825591602001919060010190612a75565b50612a9c929150612aa0565b5090565b5b80821115612a9c5760008155600101612aa1565b8035600160a060020a0381168114612acc57600080fd5b919050565b600060408284031215612ae2578081fd5b6040516040810181811067ffffffffffffffff82111715612b0557612b0561315f565b604052823581526020928301359281019290925250919050565b600060208284031215612b30578081fd5b81518015158114612b3f578182fd5b9392505050565b60008060608385031215612b58578081fd5b612b628484612ad1565b9150612b7060408401612ab5565b90509250929050565b60008060408385031215612b8b578182fd5b823567ffffffffffffffff80821115612ba2578384fd5b9084019060a08287031215612bb5578384fd5b612bbd613033565b823582811115612bcb578586fd5b8301601f81018813612bdb578586fd5b8035602084821115612bef57612bef61315f565b612c01601f8301601f1916820161305c565b94508185528981838501011115612c16578788fd5b818184018287013787818387010152848452612c33818701612ab5565b81850152612c4360408701612ab5565b60408501526060860135606085015260808601356080850152839750612c6a818a01612ab5565b96505050505050509250929050565b60008060608385031215612b58578182fd5b6000808284036080811215612c9e578283fd5b6060811215612cab578283fd5b506040516060810181811067ffffffffffffffff82111715612ccf57612ccf61315f565b6040908152843582526020808601359083015284810135908201529150612b7060608401612ab5565b600060208284031215612d09578081fd5b5035919050565b600060208284031215612d21578081fd5b5051919050565b60008151808452612d408160208601602086016130c3565b601f01601f19169290920160200192915050565b6000815160c08452612d6960c0850182612d28565b90506020830151600160a060020a03808216602087015280604086015116604087015280606086015116606087015250506080830151608085015260a083015160a08501528091505092915050565b80518252602081015160208301526000604082015160c06040850152612de160c0850182612d28565b9050600160a060020a0360608401511660608501526080830151608085015260a083015160a08501528091505092915050565b60008251612e268184602087016130c3565b9190910192915050565b600160a060020a039384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612ea757603f19888603018452612e95858351612d54565b94509285019290850190600101612e79565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612ea757603f19888603018452612ef5858351612db8565b94509285019290850190600101612ed9565b60208082526044908201527f546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d60408201527f4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c60608201527f616e636500000000000000000000000000000000000000000000000000000000608082015260a00190565b60208082526043908201527f546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f60408201527f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c6160608201527f6e63650000000000000000000000000000000000000000000000000000000000608082015260a00190565b602081526000612b3f6020830184612d54565b602081526000612b3f6020830184612db8565b60405160a0810167ffffffffffffffff811182821017156130565761305661315f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156130855761308561315f565b604052919050565b60008160001904831182151516156130a7576130a7613146565b500290565b6000828210156130be576130be613146565b500390565b60005b838110156130de5781810151838201526020016130c6565b838111156130ed576000848401525b50505050565b60028104600182168061310757607f821691505b6020821081141561039a5760e060020a634e487b7102600052602260045260246000fd5b600060001982141561313f5761313f613146565b5060010190565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfe546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e5365546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e4275a264697066735822122033461cf0024a07a93072e45f89cac779162eded0c4a65b7afa687cfa298d8f0564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:21750:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:27",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:27"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:27"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:27",
                "type": ""
              }
            ],
            "src": "14:196:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:420:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "334:24:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "343:5:27"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "350:5:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "336:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "336:20:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "336:20:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "311:3:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "316:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:19:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "328:4:27",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "303:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:30:27"
                  },
                  "nodeType": "YulIf",
                  "src": "300:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "367:25:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "387:4:27",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "381:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:11:27"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "371:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "401:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "423:6:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "431:4:27",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "419:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:17:27"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "405:10:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "511:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "513:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "513:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "513:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "454:10:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "466:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "451:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:34:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "490:10:27"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "502:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "487:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "448:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:62:27"
                  },
                  "nodeType": "YulIf",
                  "src": "445:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "549:4:27",
                        "type": "",
                        "value": "0x40"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "555:10:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "542:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:24:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "542:24:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "575:15:27",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "584:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "575:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "606:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "627:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "614:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "614:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "599:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "599:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "658:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "666:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "688:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "699:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "684:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "671:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "671:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "647:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "647:57:27"
                }
              ]
            },
            "name": "abi_decode_struct_CancelOfferRequest",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "272:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "280:5:27",
                "type": ""
              }
            ],
            "src": "215:495:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "793:219:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "839:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "848:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "856:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "841:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "841:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "841:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "814:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "810:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "810:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "835:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "806:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "806:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "803:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "874:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "893:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "887:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "878:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "956:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "965:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "973:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "958:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "958:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "958:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "925:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "946:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "939:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "939:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "932:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "932:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "922:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "922:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "915:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "915:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "912:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "991:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1001:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "991:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "759:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "770:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "782:6:27",
                "type": ""
              }
            ],
            "src": "715:297:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1140:210:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1186:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1195:6:27"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1203:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1188:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1188:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1188:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1161:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1170:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1182:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1153:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1150:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1221:66:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1268:9:27"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1279:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_CancelOfferRequest",
                      "nodeType": "YulIdentifier",
                      "src": "1231:36:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:56:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1221:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:48:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1329:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1340:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1325:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1325:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1306:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:38:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1296:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_CancelOfferRequest_$4872_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1098:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1109:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1121:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1129:6:27",
                "type": ""
              }
            ],
            "src": "1017:333:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1491:1305:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1537:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1546:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1554:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1539:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1539:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1539:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1512:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1521:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1508:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1508:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1533:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:37:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1599:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1586:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:23:27"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1576:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1618:28:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1628:18:27",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1622:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1673:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1682:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1690:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1675:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1675:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1675:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1661:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1669:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1658:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:14:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1655:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1708:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1722:9:27"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1733:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1718:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:22:27"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1712:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1780:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1789:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1797:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1782:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1782:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1782:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1760:7:27"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1769:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1756:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:16:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1774:4:27",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:27:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1749:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1815:35:27",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3392",
                      "nodeType": "YulIdentifier",
                      "src": "1828:20:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:22:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1819:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1859:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1888:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1875:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:16:27"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1863:8:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1920:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1929:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1937:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1922:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1922:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1922:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1906:8:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1916:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1903:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1903:16:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1900:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1955:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1969:2:27"
                      },
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1973:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1965:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:17:27"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1959:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2030:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2039:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2047:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2032:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2032:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2032:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2009:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2013:4:27",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2005:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2005:13:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2020:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2001:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:27:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1994:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:35:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1991:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2065:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2088:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2075:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:16:27"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2069:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2100:14:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2110:4:27",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2104:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2137:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2139:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2139:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2139:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2129:2:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2133:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2126:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:10:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2123:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2168:66:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2209:2:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2213:4:27",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2205:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2205:13:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2224:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2201:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2201:27:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2230:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2197:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:36:27"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2181:15:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:53:27"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "2172:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2250:5:27"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2257:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2243:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2243:17:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2243:17:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2306:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2315:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2323:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2308:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2308:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2308:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2283:2:27"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2287:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2279:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2279:11:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2292:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2275:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:20:27"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2297:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2272:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2272:33:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2269:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2358:5:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2365:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2354:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2354:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2374:2:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2378:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2370:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2370:11:27"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2383:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2341:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:45:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2341:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2410:5:27"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2417:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2406:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2406:14:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2422:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2402:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:23:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2427:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2395:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2395:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2395:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2450:5:27"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2457:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2443:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:20:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2443:20:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2483:5:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2490:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2479:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2479:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2518:2:27"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2522:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2514:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2514:11:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:31:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2547:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2554:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2543:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2582:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2586:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2578:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2578:11:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2559:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2559:31:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2536:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2536:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2611:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2618:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2640:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2644:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2636:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2636:11:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2623:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:25:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:49:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:49:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2669:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2676:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2665:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2665:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2699:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2703:3:27",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2695:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2695:12:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2682:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2682:26:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2658:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2658:51:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2718:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2728:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2718:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2742:48:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2775:9:27"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2786:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2771:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2771:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2752:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:38:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2742:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1449:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1460:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1472:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1480:6:27",
                "type": ""
              }
            ],
            "src": "1355:1441:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2918:210:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2964:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2973:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2981:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2966:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2966:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2966:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2939:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2948:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2935:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2935:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2960:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2931:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2928:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2999:66:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3046:9:27"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3057:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_CancelOfferRequest",
                      "nodeType": "YulIdentifier",
                      "src": "3009:36:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:56:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2999:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3074:48:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3107:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3118:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3103:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3103:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3084:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:38:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3074:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_OfferRequest_$4877_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2876:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2887:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2899:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2907:6:27",
                "type": ""
              }
            ],
            "src": "2801:327:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3265:620:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3275:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3289:7:27"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3298:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3285:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:23:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3279:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3333:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3342:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3350:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3335:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3335:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3335:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3324:2:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3328:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3320:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3320:12:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3317:2:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3385:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3394:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3402:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3387:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3387:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3387:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3375:2:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3379:4:27",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3371:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3368:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3420:23:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3440:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3434:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:9:27"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3424:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3452:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3474:6:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3482:4:27",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3470:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:17:27"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3456:10:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3562:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3564:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3564:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3564:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3505:10:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3517:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3502:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:34:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3541:10:27"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3553:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3538:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3538:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3499:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3499:62:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3496:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3600:2:27",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3604:10:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3593:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3593:22:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3631:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3639:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3639:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3624:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3624:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3683:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3691:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3679:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3679:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3713:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3724:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3709:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3709:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3696:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3696:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3672:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3672:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3672:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3749:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3757:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3745:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3745:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3779:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3790:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3775:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3775:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3762:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:57:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3804:16:27",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3814:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3804:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3829:50:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3862:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3873:4:27",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3858:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3839:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:40:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3829:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3223:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3234:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3246:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3254:6:27",
                "type": ""
              }
            ],
            "src": "3133:752:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3960:120:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4006:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4015:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4023:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4008:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4008:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4008:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3981:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3990:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3977:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4002:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3973:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3973:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3970:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4041:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4064:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4051:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4041:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3926:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3937:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3949:6:27",
                "type": ""
              }
            ],
            "src": "3890:190:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4166:113:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4212:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4221:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4229:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4214:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4214:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4214:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4187:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4196:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4208:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4179:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4176:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4247:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4263:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4257:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4247:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4132:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4143:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4155:6:27",
                "type": ""
              }
            ],
            "src": "4085:194:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4334:208:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4344:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4364:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4358:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4358:12:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4348:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4386:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4391:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4379:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4379:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4379:19:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4433:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4429:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4429:16:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4451:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4456:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4447:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4447:14:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4463:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4407:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4407:63:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4407:63:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4479:57:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4494:3:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4507:6:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4515:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4503:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4503:15:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4524:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4520:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4520:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4499:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4499:29:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4490:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4490:39:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:4:27",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4486:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4486:50:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4479:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4311:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4318:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4326:3:27",
                "type": ""
              }
            ],
            "src": "4284:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4611:575:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4621:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4647:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4641:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4641:12:27"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "4625:12:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4669:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4674:4:27",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4662:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4662:17:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4662:17:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4688:59:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "4718:12:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4736:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4741:4:27",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4732:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4732:14:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4700:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4700:47:27"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4692:4:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4756:45:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4788:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4795:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4784:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4784:16:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4778:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:23:27"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "4760:14:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4810:52:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4820:42:27",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4814:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4882:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4887:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4878:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4878:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulIdentifier",
                            "src": "4898:14:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4914:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4894:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4871:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4871:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4938:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4943:4:27",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4934:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4934:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4964:5:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4971:4:27",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4960:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4960:16:27"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4954:5:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4954:23:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4979:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4950:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4927:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4927:56:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4927:56:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5003:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5008:4:27",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4999:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4999:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5029:5:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5036:4:27",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5025:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5025:16:27"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5019:5:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5019:23:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5044:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5015:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5015:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4992:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4992:56:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4992:56:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5068:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5073:4:27",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5064:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5064:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5090:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5097:4:27",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5086:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5086:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5080:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5080:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5057:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5057:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5057:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5124:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5129:4:27",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5120:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5120:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5146:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5153:4:27",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5142:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5142:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5136:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5136:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5113:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5113:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5169:11:27",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5176:4:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5169:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_ERC20Exchange",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4588:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4595:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4603:3:27",
                "type": ""
              }
            ],
            "src": "4547:639:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5252:491:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5269:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5280:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5274:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5274:12:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5262:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5262:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5262:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5307:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5312:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5303:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5303:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5329:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5336:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5325:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5325:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5319:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5319:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5296:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5296:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5296:47:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5352:43:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5382:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5389:4:27",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5378:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5378:16:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5372:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:23:27"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "5356:12:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5415:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5420:4:27",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5411:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5411:14:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5427:4:27",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5404:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5404:28:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5404:28:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5441:59:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "5471:12:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5489:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5494:4:27",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5485:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5485:14:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "5453:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5453:47:27"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5445:4:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5520:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5525:4:27",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5516:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5516:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5546:5:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5553:4:27",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5542:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5542:16:27"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5536:5:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5536:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5561:42:27",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5532:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5532:72:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5509:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5509:96:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5509:96:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5625:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5630:4:27",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5621:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5621:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5647:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5654:4:27",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5643:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5643:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5637:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5637:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5614:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5614:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5614:47:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5681:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5686:4:27",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5677:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5677:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5703:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5710:4:27",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5699:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5699:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5693:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5693:23:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5670:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5670:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5670:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5726:11:27",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5733:4:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5726:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_ERC20Offer",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5229:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5236:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5244:3:27",
                "type": ""
              }
            ],
            "src": "5191:552:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5887:137:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5897:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5917:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5911:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5911:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5901:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5959:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5955:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5955:17:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5974:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5979:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5933:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5933:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5933:53:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5995:23:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6006:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6011:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6002:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6002:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5995:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5863:3:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5868:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5879:3:27",
                "type": ""
              }
            ],
            "src": "5748:276:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6221:62:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6238:3:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6243:6:27",
                        "type": "",
                        "value": "SELL"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6231:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6231:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6231:19:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6259:18:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6270:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6275:1:27",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6266:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6266:11:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6259:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6205:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6213:3:27",
                "type": ""
              }
            ],
            "src": "6029:254:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6480:61:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6497:3:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6502:5:27",
                        "type": "",
                        "value": "BUY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6490:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:18:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6490:18:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6517:18:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6528:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6533:1:27",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6524:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6524:11:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6517:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6464:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6472:3:27",
                "type": ""
              }
            ],
            "src": "6288:253:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6647:125:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6657:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6669:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6680:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6665:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6665:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6657:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6699:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6714:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:42:27",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6710:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6710:55:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6692:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6692:74:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6692:74:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6616:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6627:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6638:4:27",
                "type": ""
              }
            ],
            "src": "6546:226:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6934:241:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6944:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6956:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6967:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6952:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6944:4:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6979:52:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6989:42:27",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6983:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7047:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7062:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7070:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7058:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7058:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7040:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7040:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7094:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7105:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7090:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7090:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7114:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7122:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7110:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7110:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7083:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7083:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7083:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7146:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7157:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7142:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7142:18:27"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7162:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7135:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7135:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7135:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6887:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6898:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6906:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6914:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6925:4:27",
                "type": ""
              }
            ],
            "src": "6777:398:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7309:168:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7319:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7331:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7342:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7327:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7327:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7319:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7361:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7376:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7384:42:27",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7372:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7372:55:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:74:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:74:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7448:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7459:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7444:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7444:18:27"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7464:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7437:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7437:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7270:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7281:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7289:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7300:4:27",
                "type": ""
              }
            ],
            "src": "7180:297:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7695:650:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7705:12:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7715:2:27",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7709:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7726:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7744:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7755:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7740:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7740:18:27"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "7730:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7774:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7785:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7767:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7767:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7767:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7797:17:27",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "7808:6:27"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "7801:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7823:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7843:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7837:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7837:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7827:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7866:6:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7859:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7859:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7859:22:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7901:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7912:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:3:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7924:54:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7946:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7961:6:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7969:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "7957:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7957:15:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7942:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7942:31:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7975:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7938:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7938:40:27"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "7928:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7987:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8005:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8013:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8001:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8001:15:27"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "7991:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8025:13:27",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "8034:4:27"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8029:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8096:220:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8117:3:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "8130:6:27"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8138:9:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8126:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8126:22:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8154:2:27",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "8150:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8150:7:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8122:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8122:36:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8110:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8110:49:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8110:49:27"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8172:64:27",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8220:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8214:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8214:13:27"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "8229:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_ERC20Exchange",
                            "nodeType": "YulIdentifier",
                            "src": "8182:31:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8182:54:27"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "8172:6:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8249:25:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8263:6:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8271:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8259:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8259:15:27"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8249:6:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8287:19:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8298:3:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8303:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8294:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8294:12:27"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8287:3:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8058:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8061:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8055:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8069:18:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8071:14:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8080:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8083:1:27",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8076:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8076:9:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8071:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8051:3:27",
                    "statements": []
                  },
                  "src": "8047:269:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8325:14:27",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "8333:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8325:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7664:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7675:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7686:4:27",
                "type": ""
              }
            ],
            "src": "7482:863:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8557:647:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8567:12:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8577:2:27",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8571:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8588:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8606:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8617:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8602:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8602:18:27"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8592:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8636:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8647:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8629:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8629:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8659:17:27",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "8670:6:27"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "8663:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8685:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8705:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8699:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8699:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8689:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8728:6:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8736:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8721:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8721:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8721:22:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8752:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8763:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8774:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8759:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8759:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8752:3:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8786:54:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8808:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8823:6:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "8831:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "8819:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8819:15:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8804:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:31:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8837:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8800:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8800:40:27"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "8790:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8849:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8867:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8875:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8863:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8863:15:27"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8853:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8887:13:27",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "8896:4:27"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8891:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8958:217:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8979:3:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "8992:6:27"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9000:9:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8988:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8988:22:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9016:2:27",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "9012:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9012:7:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8984:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8984:36:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8972:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8972:49:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8972:49:27"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9034:61:27",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9079:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9073:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9073:13:27"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "9088:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_ERC20Offer",
                            "nodeType": "YulIdentifier",
                            "src": "9044:28:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9044:51:27"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "9034:6:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9108:25:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9122:6:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9130:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9118:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9118:15:27"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9108:6:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9146:19:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9157:3:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9162:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9153:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9153:12:27"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9146:3:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8920:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8923:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8917:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8917:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8931:18:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8933:14:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8942:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8945:1:27",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8938:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8938:9:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8933:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8913:3:27",
                    "statements": []
                  },
                  "src": "8909:266:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9184:14:27",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "9192:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9184:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8526:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8537:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8548:4:27",
                "type": ""
              }
            ],
            "src": "8350:854:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9383:302:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9400:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9411:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9393:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9434:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9445:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9430:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9430:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9450:2:27",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9423:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9423:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9423:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9484:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9469:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9469:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9489:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9462:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9462:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9462:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9544:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9555:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9540:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9540:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9560:34:27",
                        "type": "",
                        "value": "yingOffer: should be the same ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9533:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9533:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9615:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9626:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9611:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9611:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9632:10:27",
                        "type": "",
                        "value": "changeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9604:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9604:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9604:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9652:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9664:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9675:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9660:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9660:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9652:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9360:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9374:4:27",
                "type": ""
              }
            ],
            "src": "9209:476:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9864:301:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9881:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9892:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9874:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9874:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9874:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9915:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9926:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9911:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9911:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9931:2:27",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9904:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9904:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9904:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9954:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9965:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9950:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9950:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9970:34:27",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenBuy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9943:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9943:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9943:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10025:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10036:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10021:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10021:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10041:34:27",
                        "type": "",
                        "value": "ingOffer: you don't have enough "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10014:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10014:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10014:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10096:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10107:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10092:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10092:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10113:9:27",
                        "type": "",
                        "value": "balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10085:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10085:38:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10085:38:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10132:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10144:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10155:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10140:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10140:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10132:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9841:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9855:4:27",
                "type": ""
              }
            ],
            "src": "9690:475:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10344:298:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10361:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10372:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10354:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10354:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10354:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10395:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10406:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10391:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10391:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10411:2:27",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10384:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10384:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10384:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10434:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10445:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10430:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10430:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10450:34:27",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10423:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10423:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10423:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10505:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10516:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10501:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10501:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10521:34:27",
                        "type": "",
                        "value": "Offer: should be the same exchan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10494:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10494:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10494:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10576:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10587:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10572:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10572:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10593:6:27",
                        "type": "",
                        "value": "geId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10565:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10565:35:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10565:35:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10609:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10621:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10632:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10617:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10617:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10609:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10321:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10335:4:27",
                "type": ""
              }
            ],
            "src": "10170:472:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10821:310:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10838:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10849:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10831:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10831:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10831:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10872:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10883:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10868:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10868:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10888:2:27",
                        "type": "",
                        "value": "80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10861:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10861:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10861:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10911:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10922:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10907:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10907:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10927:34:27",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenSel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10900:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10900:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10900:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10982:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10993:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10978:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10978:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10998:34:27",
                        "type": "",
                        "value": "lingOffer: price can't be lower "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10971:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10971:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10971:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11053:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11064:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11049:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11049:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11070:18:27",
                        "type": "",
                        "value": "or equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11042:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11042:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11042:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11098:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11110:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11121:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11106:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11098:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10798:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10812:4:27",
                "type": ""
              }
            ],
            "src": "10647:484:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11310:299:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11327:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11338:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11320:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11320:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11320:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11361:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11372:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11357:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11357:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11377:2:27",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11350:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11350:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11350:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11400:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11411:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11396:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11396:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11416:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11389:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11389:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11389:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11471:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11482:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11467:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11467:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11487:34:27",
                        "type": "",
                        "value": "yingOffer: should be the buying "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11460:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11460:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11460:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11542:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11553:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11538:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11538:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11559:7:27",
                        "type": "",
                        "value": "offer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11531:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11531:36:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11531:36:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11576:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11588:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11599:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11584:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11584:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11576:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11287:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11301:4:27",
                "type": ""
              }
            ],
            "src": "11136:473:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11788:301:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11805:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11816:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11798:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11798:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11798:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11839:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11850:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11835:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11835:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11855:2:27",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11828:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11828:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11828:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11878:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11889:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11874:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11874:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11894:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11867:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11867:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11867:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11949:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11960:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11945:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11945:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11965:34:27",
                        "type": "",
                        "value": "llingOffer: should be the sellin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11938:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11938:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11938:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12020:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12031:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12016:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12016:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12037:9:27",
                        "type": "",
                        "value": "g offer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12009:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12009:38:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12009:38:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12056:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12068:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12079:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12064:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12064:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12056:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11765:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11779:4:27",
                "type": ""
              }
            ],
            "src": "11614:475:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12268:302:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12285:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12296:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12278:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12278:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12278:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12319:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12330:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12315:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12315:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12335:2:27",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12308:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12308:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12308:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12358:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12369:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12354:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12354:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12374:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12347:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12347:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12347:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12429:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12440:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12425:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12425:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12445:34:27",
                        "type": "",
                        "value": "yingOffer: you don't have enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12418:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12418:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12418:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12500:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12511:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12496:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12496:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12517:10:27",
                        "type": "",
                        "value": " balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12489:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12489:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12489:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12537:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12549:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12560:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12545:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12545:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12537:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12245:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12259:4:27",
                "type": ""
              }
            ],
            "src": "12094:476:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12749:298:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12766:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12777:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12759:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12759:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12759:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12800:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12811:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12796:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12796:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12816:2:27",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12789:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12789:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12789:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12839:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12850:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12835:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12835:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12855:34:27",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12828:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12828:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12828:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12910:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12921:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12906:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12906:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12926:34:27",
                        "type": "",
                        "value": "Offer: you don't have enough bal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12899:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12899:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12899:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12981:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12992:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12977:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12977:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12998:6:27",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12970:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12970:35:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12970:35:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13014:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13026:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13037:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13022:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13022:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13014:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12726:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12740:4:27",
                "type": ""
              }
            ],
            "src": "12575:472:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13226:302:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13243:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13254:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13277:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13288:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13273:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13273:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13293:2:27",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13266:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13266:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13266:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13316:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13327:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13312:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13312:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13332:34:27",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenSel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13305:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13305:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13305:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13387:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13398:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13383:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13383:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13403:34:27",
                        "type": "",
                        "value": "lingOffer: you don't have enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13376:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13376:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13376:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13458:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13469:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13454:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13454:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13475:10:27",
                        "type": "",
                        "value": " balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13447:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13447:39:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13447:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13495:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13507:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13518:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13503:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13503:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13495:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13203:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13217:4:27",
                "type": ""
              }
            ],
            "src": "13052:476:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13707:307:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13724:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13735:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13758:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13769:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13754:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13754:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13774:2:27",
                        "type": "",
                        "value": "77"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13747:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13747:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13747:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13797:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13808:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13793:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13793:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13813:34:27",
                        "type": "",
                        "value": "TokenExchange.CreateERC20TokenEx"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13786:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13786:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13786:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13868:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13879:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13864:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13864:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13884:34:27",
                        "type": "",
                        "value": "change: price can't be lower or "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13857:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13857:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13857:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13939:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13950:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13935:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13935:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13956:15:27",
                        "type": "",
                        "value": "equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13928:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13928:44:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13928:44:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13981:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13993:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14004:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13989:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13989:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13981:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13684:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13698:4:27",
                "type": ""
              }
            ],
            "src": "13533:481:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14193:295:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14210:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14221:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14203:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14203:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14203:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14244:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14255:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14240:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14240:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14260:2:27",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14233:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14233:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14233:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14283:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14294:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14279:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14279:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14299:34:27",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14272:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14272:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14272:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14354:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14365:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14350:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14350:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14370:34:27",
                        "type": "",
                        "value": "ffer: should be the selling offe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14343:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14343:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14343:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14425:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14436:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14421:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14421:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14442:3:27",
                        "type": "",
                        "value": "r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14414:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14414:32:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14414:32:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14455:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14467:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14478:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14463:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14463:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14455:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14170:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14184:4:27",
                "type": ""
              }
            ],
            "src": "14019:469:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14667:309:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14684:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14695:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14677:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14677:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14677:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14718:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14729:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14714:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14714:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14734:2:27",
                        "type": "",
                        "value": "79"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14707:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14707:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14707:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14757:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14768:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14753:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14753:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14773:34:27",
                        "type": "",
                        "value": "TokenExchange.PlaceERC20TokenBuy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14746:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14746:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14746:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14828:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14839:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14824:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14824:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14844:34:27",
                        "type": "",
                        "value": "ingOffer: price can't be lower o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14817:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14817:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14817:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14899:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14910:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14895:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14895:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14916:17:27",
                        "type": "",
                        "value": "r equal to zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14888:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14888:46:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14888:46:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14943:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14955:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14966:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14951:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14951:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14943:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14644:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14658:4:27",
                "type": ""
              }
            ],
            "src": "14493:483:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15155:296:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15172:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15183:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15206:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15217:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15202:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15202:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15222:2:27",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15195:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15195:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15195:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15245:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15256:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15241:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15241:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15261:34:27",
                        "type": "",
                        "value": "TokenExchange.CreateERC20TokenEx"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15234:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15234:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15234:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15316:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15327:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15312:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15312:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15332:34:27",
                        "type": "",
                        "value": "change: Your balance is not enou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15305:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15305:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15305:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15387:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15398:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15383:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15383:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15404:4:27",
                        "type": "",
                        "value": "gh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15376:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15376:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15376:33:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15418:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15430:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15441:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15426:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15426:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15418:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15132:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15146:4:27",
                "type": ""
              }
            ],
            "src": "14981:470:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15630:297:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15647:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15658:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15640:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15640:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15640:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15681:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15692:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15677:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15677:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15697:2:27",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15670:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15670:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15670:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15720:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15731:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15716:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15716:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15736:34:27",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15709:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15709:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15709:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15791:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15802:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15787:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15787:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15807:34:27",
                        "type": "",
                        "value": "ffer: you don't have enough bala"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15780:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15780:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15780:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15862:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15873:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15858:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15858:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15879:5:27",
                        "type": "",
                        "value": "nce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15851:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15851:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15851:34:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15894:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15906:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15917:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15902:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15902:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15894:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15607:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15621:4:27",
                "type": ""
              }
            ],
            "src": "15456:471:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16106:249:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16123:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16134:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16116:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16116:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16116:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16157:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16168:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16153:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16153:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16173:2:27",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16146:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16146:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16146:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16196:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16207:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16192:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16192:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16212:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16185:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16185:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16185:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16267:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16278:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16263:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16263:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16283:29:27",
                        "type": "",
                        "value": "llingOffer: should be owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16256:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16256:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16256:57:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16322:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16334:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16345:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16330:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16330:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16322:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16083:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16097:4:27",
                "type": ""
              }
            ],
            "src": "15932:423:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16534:303:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16551:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16562:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16544:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16544:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16544:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16585:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16596:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16581:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16581:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16601:2:27",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16574:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16574:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16574:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16624:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16635:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16620:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16620:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16640:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16613:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16613:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16613:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16695:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16706:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16691:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16691:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16711:34:27",
                        "type": "",
                        "value": "llingOffer: should be the same e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16684:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16684:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16684:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16766:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16777:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16762:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16762:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16783:11:27",
                        "type": "",
                        "value": "xchangeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16755:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16755:40:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16755:40:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16804:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16816:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16827:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16812:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16812:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16804:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16511:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16525:4:27",
                "type": ""
              }
            ],
            "src": "16360:477:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17016:295:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17033:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17044:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17026:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17026:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17026:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17067:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17078:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17063:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17063:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17083:2:27",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17056:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17056:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17056:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17106:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17117:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17102:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17102:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17122:34:27",
                        "type": "",
                        "value": "TokenExchange.SellERC20TokenFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17095:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17095:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17095:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17177:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17188:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17173:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17173:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17193:34:27",
                        "type": "",
                        "value": "Offer: should be the buying offe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17166:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17166:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17166:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17248:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17259:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17244:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17244:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17265:3:27",
                        "type": "",
                        "value": "r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17237:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17237:32:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17237:32:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17278:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17290:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17301:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17286:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17286:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17278:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16993:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17007:4:27",
                "type": ""
              }
            ],
            "src": "16842:469:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17490:303:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17507:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17518:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17500:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17500:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17500:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17541:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17552:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17537:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17537:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17557:2:27",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17530:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17530:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17530:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17580:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17591:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17576:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17576:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17596:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenSe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17569:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17569:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17569:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17651:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17662:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17647:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17647:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17667:34:27",
                        "type": "",
                        "value": "llingOffer: you don't have enoug"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17640:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17640:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17640:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17722:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17733:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17718:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17718:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17739:11:27",
                        "type": "",
                        "value": "h balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17711:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17711:40:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17711:40:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17760:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17772:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17783:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17768:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17768:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17760:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17467:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17481:4:27",
                "type": ""
              }
            ],
            "src": "17316:477:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17972:248:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17989:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18000:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17982:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17982:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17982:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18023:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18034:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18019:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18019:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18039:2:27",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18012:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18012:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18012:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18062:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18073:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18058:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18058:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18078:34:27",
                        "type": "",
                        "value": "TokenExchange.CancelERC20TokenBu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18051:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18051:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18051:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18133:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18144:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18129:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18129:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18149:28:27",
                        "type": "",
                        "value": "yingOffer: should be owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18122:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18122:56:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18122:56:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18187:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18199:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18210:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18195:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18195:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18187:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17949:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17963:4:27",
                "type": ""
              }
            ],
            "src": "17798:422:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18399:297:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18416:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18427:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18409:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18409:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18409:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18450:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18461:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18446:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18446:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18466:2:27",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18439:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18439:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18439:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18489:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18500:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18485:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18485:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18505:34:27",
                        "type": "",
                        "value": "TokenExchange.BuyERC20TokenFromO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18478:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18478:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18478:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18560:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18571:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18556:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18556:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18576:34:27",
                        "type": "",
                        "value": "ffer: should be the same exchang"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18549:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18549:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18549:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18631:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18642:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18627:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18627:19:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18648:5:27",
                        "type": "",
                        "value": "eId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18620:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18620:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18620:34:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18663:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18675:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18686:3:27",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18671:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18671:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18663:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18376:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18390:4:27",
                "type": ""
              }
            ],
            "src": "18225:471:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18864:113:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18881:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18892:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18874:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18874:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18874:21:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18904:67:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18944:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18956:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18967:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18952:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18952:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC20Exchange",
                      "nodeType": "YulIdentifier",
                      "src": "18912:31:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18912:59:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18904:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20Exchange_$4836_memory_ptr__to_t_struct$_ERC20Exchange_$4836_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18833:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18844:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18855:4:27",
                "type": ""
              }
            ],
            "src": "18701:276:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19139:110:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19156:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19167:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19149:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19149:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19149:21:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19179:64:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19216:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19228:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19239:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19224:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19224:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC20Offer",
                      "nodeType": "YulIdentifier",
                      "src": "19187:28:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19187:56:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19179:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20Offer_$4849_memory_ptr__to_t_struct$_ERC20Offer_$4849_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19108:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19119:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19130:4:27",
                "type": ""
              }
            ],
            "src": "18982:267:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19355:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19365:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19377:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19388:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19373:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19373:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19365:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19407:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19418:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19400:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19400:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19400:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19324:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19335:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19346:4:27",
                "type": ""
              }
            ],
            "src": "19254:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19565:119:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19575:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19587:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19598:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19583:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19583:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19575:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19617:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19628:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19610:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19610:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19610:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19655:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19666:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19651:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19651:18:27"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19671:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19644:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19644:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19644:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19526:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19537:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19545:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19556:4:27",
                "type": ""
              }
            ],
            "src": "19436:248:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19735:207:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19745:19:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19761:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19755:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19755:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "19745:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19773:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "19795:6:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19803:4:27",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19791:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19791:17:27"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "19777:10:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19883:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19885:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19885:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19885:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19826:10:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19838:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "19823:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19823:34:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19862:10:27"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19874:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19859:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19859:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "19820:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19820:62:27"
                  },
                  "nodeType": "YulIf",
                  "src": "19817:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19921:2:27",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "19925:10:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19914:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19914:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19914:22:27"
                }
              ]
            },
            "name": "allocate_memory_3392",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19724:6:27",
                "type": ""
              }
            ],
            "src": "19689:253:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19992:230:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20002:19:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20018:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20012:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20012:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "20002:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20030:58:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "20052:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "20068:4:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20074:2:27",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20064:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20064:13:27"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20083:2:27",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "20079:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20079:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20060:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20060:27:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20048:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20048:40:27"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "20034:10:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20163:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "20165:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20165:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20165:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "20106:10:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20118:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20103:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20103:34:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "20142:10:27"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20154:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "20139:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20139:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "20100:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20100:62:27"
                  },
                  "nodeType": "YulIf",
                  "src": "20097:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20201:2:27",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "20205:10:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20194:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20194:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20194:22:27"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19972:4:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19981:6:27",
                "type": ""
              }
            ],
            "src": "19947:275:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20279:116:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20338:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20340:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20340:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20340:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20310:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20303:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20303:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20296:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20296:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20318:1:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20329:1:27",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "20325:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20325:6:27"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20333:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "20321:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20321:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20315:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20315:21:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20292:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20292:45:27"
                  },
                  "nodeType": "YulIf",
                  "src": "20289:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20369:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20384:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20387:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "20380:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20380:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "20369:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20258:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20261:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "20267:7:27",
                "type": ""
              }
            ],
            "src": "20227:168:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20449:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20471:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20473:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20473:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20473:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20465:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20468:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20462:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20462:8:27"
                  },
                  "nodeType": "YulIf",
                  "src": "20459:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20502:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20514:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20517:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20510:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20510:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20502:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20431:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20434:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20440:4:27",
                "type": ""
              }
            ],
            "src": "20400:125:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20583:205:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20593:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20602:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "20597:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20662:63:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20687:3:27"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "20692:1:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20683:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20683:11:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "20706:3:27"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "20711:1:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "20702:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20702:11:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "20696:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20696:18:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20676:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20676:39:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20676:39:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20623:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20626:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20620:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20620:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "20634:19:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20636:15:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "20645:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20648:2:27",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "20641:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20641:10:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "20636:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "20616:3:27",
                    "statements": []
                  },
                  "src": "20612:113:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20751:31:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20764:3:27"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "20769:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20760:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20760:16:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20778:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20753:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20753:27:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20753:27:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20740:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20743:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20737:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20737:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "20734:2:27"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "20561:3:27",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "20566:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20571:6:27",
                "type": ""
              }
            ],
            "src": "20530:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20848:382:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20858:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "20872:4:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20878:1:27",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "20868:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20868:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "20858:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20889:38:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "20919:4:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20925:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20915:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20915:12:27"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "20893:18:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20966:31:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20968:27:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "20982:6:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20990:4:27",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "20978:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20978:17:27"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "20968:6:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "20946:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20939:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20939:26:27"
                  },
                  "nodeType": "YulIf",
                  "src": "20936:2:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21056:168:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21077:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21080:77:27",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21070:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21070:88:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21070:88:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21178:1:27",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21181:4:27",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21171:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21171:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21171:15:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21206:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21209:4:27",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21199:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21199:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21199:15:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21012:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21035:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21043:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "21032:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21032:14:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21009:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21009:38:27"
                  },
                  "nodeType": "YulIf",
                  "src": "21006:2:27"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "20828:4:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20837:6:27",
                "type": ""
              }
            ],
            "src": "20793:437:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21282:88:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21313:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21315:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21315:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21315:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21298:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21309:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "21305:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21305:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21295:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21295:17:27"
                  },
                  "nodeType": "YulIf",
                  "src": "21292:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21344:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21355:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21362:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21351:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21351:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "21344:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21264:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "21274:3:27",
                "type": ""
              }
            ],
            "src": "21235:135:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21407:152:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21424:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21427:77:27",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21417:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21417:88:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21417:88:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21521:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21524:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21514:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21514:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21514:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21545:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21548:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21538:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21538:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21538:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "21375:184:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21596:152:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21613:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21616:77:27",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21606:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21606:88:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21606:88:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21710:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21713:4:27",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21703:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21703:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21703:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21734:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21737:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21727:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21727:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21727:15:27"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "21564:184:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_struct_CancelOfferRequest(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(value, value) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_CancelOfferRequest_$4872_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_struct_CancelOfferRequest(headStart, dataEnd)\n        value1 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xa0) { revert(value0, value0) }\n        let value := allocate_memory_3392()\n        let offset_1 := calldataload(_2)\n        if gt(offset_1, _1) { revert(value0, value0) }\n        let _3 := add(_2, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        let _5 := 0x20\n        if gt(_4, _1) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _5))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _5), dataEnd) { revert(value0, value0) }\n        calldatacopy(add(array, _5), add(_3, _5), _4)\n        mstore(add(add(array, _4), _5), value0)\n        mstore(value, array)\n        mstore(add(value, _5), abi_decode_address(add(_2, _5)))\n        mstore(add(value, 64), abi_decode_address(add(_2, 64)))\n        mstore(add(value, 96), calldataload(add(_2, 96)))\n        mstore(add(value, 128), calldataload(add(_2, 128)))\n        value0 := value\n        value1 := abi_decode_address(add(headStart, _5))\n    }\n    function abi_decode_tuple_t_struct$_OfferRequest_$4877_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_struct_CancelOfferRequest(headStart, dataEnd)\n        value1 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 128) { revert(value0, value0) }\n        if slt(_1, 0x60) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n        value0 := memPtr\n        value1 := abi_decode_address(add(headStart, 0x60))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_ERC20Exchange(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        let memberValue0_1 := mload(add(value, 0x20))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(pos, 0x20), and(memberValue0_1, _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        end := tail\n    }\n    function abi_encode_struct_ERC20Offer(value, pos) -> end\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        let memberValue0 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        end := tail\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"SELL\")\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"BUY\")\n        end := add(pos, 3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, mul(length, _1)), 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_ERC20Exchange(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, mul(length, _1)), 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_ERC20Offer(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be the same ex\")\n        mstore(add(headStart, 128), \"changeId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenBuy\")\n        mstore(add(headStart, 96), \"ingOffer: you don't have enough \")\n        mstore(add(headStart, 128), \"balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: should be the same exchan\")\n        mstore(add(headStart, 128), \"geId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenSel\")\n        mstore(add(headStart, 96), \"lingOffer: price can't be lower \")\n        mstore(add(headStart, 128), \"or equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be the buying \")\n        mstore(add(headStart, 128), \"offer\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be the sellin\")\n        mstore(add(headStart, 128), \"g offer\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: you don't have enough\")\n        mstore(add(headStart, 128), \" balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: you don't have enough bal\")\n        mstore(add(headStart, 128), \"ance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenSel\")\n        mstore(add(headStart, 96), \"lingOffer: you don't have enough\")\n        mstore(add(headStart, 128), \" balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"TokenExchange.CreateERC20TokenEx\")\n        mstore(add(headStart, 96), \"change: price can't be lower or \")\n        mstore(add(headStart, 128), \"equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: should be the selling offe\")\n        mstore(add(headStart, 128), \"r\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 79)\n        mstore(add(headStart, 64), \"TokenExchange.PlaceERC20TokenBuy\")\n        mstore(add(headStart, 96), \"ingOffer: price can't be lower o\")\n        mstore(add(headStart, 128), \"r equal to zero\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TokenExchange.CreateERC20TokenEx\")\n        mstore(add(headStart, 96), \"change: Your balance is not enou\")\n        mstore(add(headStart, 128), \"gh\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: you don't have enough bala\")\n        mstore(add(headStart, 128), \"nce\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: should be the same e\")\n        mstore(add(headStart, 128), \"xchangeId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"TokenExchange.SellERC20TokenFrom\")\n        mstore(add(headStart, 96), \"Offer: should be the buying offe\")\n        mstore(add(headStart, 128), \"r\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenSe\")\n        mstore(add(headStart, 96), \"llingOffer: you don't have enoug\")\n        mstore(add(headStart, 128), \"h balance\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"TokenExchange.CancelERC20TokenBu\")\n        mstore(add(headStart, 96), \"yingOffer: should be owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"TokenExchange.BuyERC20TokenFromO\")\n        mstore(add(headStart, 96), \"ffer: should be the same exchang\")\n        mstore(add(headStart, 128), \"eId\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_struct$_ERC20Exchange_$4836_memory_ptr__to_t_struct$_ERC20Exchange_$4836_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_ERC20Exchange(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_ERC20Offer_$4849_memory_ptr__to_t_struct$_ERC20Offer_$4849_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_ERC20Offer(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function allocate_memory_3392() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "180:13213:20:-:0;;;2365:87;;;;;;;;;-1:-1:-1;2412:1:20;2390:23;;;2424:16;:20;180:13213;;;;;;",
  "deployedSourceMap": "180:13213:20:-:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;180:13213:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:303;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:99;2681:16;;2606:99;;;19400:25:27;;;19388:2;19373:18;2606:99:20;19355:76:27;8094:1095:20;;;;;;:::i;:::-;;:::i;:::-;;3024:273;;;:::i;:::-;;;;;;;:::i;9361:1063::-;;;;;;:::i;:::-;;:::i;5594:1060::-;;;;;;:::i;:::-;;:::i;3305:145::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10585:1305::-;;;;;;:::i;:::-;;:::i;3458:130::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6880:1039::-;;;;;;:::i;:::-;;:::i;3916:1460::-;;;;;;:::i;:::-;;:::i;12056:1334::-;;;;;;:::i;:::-;;:::i;2493:105::-;2548:4;2571:19;2493:105;;2713:303;2766:22;2800:32;2855:19;;2835:40;;;;;;-1:-1:-1;;;;;2835:40:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2800:75:20;-1:-1:-1;2899:1:20;2886:95;2907:19;;2902:1;:24;2886:95;;2963:18;;;;:15;:18;;;;;;;2946:35;;;;;;;;;;;;2963:18;;2946:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2946:35:20;;;-1:-1:-1;;2946:35:20;;;;;-1:-1:-1;;;;;2946:35:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;2956:3;;:1;:3;:::i;:::-;2946:14;;;;;;-1:-1:-1;;;;;2946:14:20;;;;;;;;;;;;;;:35;;;;2928:3;;;;;:::i;:::-;;;;2886:95;;;-1:-1:-1;2999:9:20;2713:303;-1:-1:-1;2713:303:20:o;8094:1095::-;8199:23;8225:12;:27;8238:5;:13;;;8225:27;;;;;;;;;;;8199:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8199:53:20;;;-1:-1:-1;;8199:53:20;;;;;-1:-1:-1;;;;;8199:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8301:16;;8199:53;8285:33;;;:15;:33;;;;;;;:51;;8356:20;;;;8199:53;;-1:-1:-1;8285:51:20;;;8356:30;;;;;;8348:101;;;;-1:-1:-1;;;;;8348:101:20;;18000:2:27;8348:101:20;;;17982:21:27;18039:2;18019:18;;;18012:30;-1:-1:-1;;;;;;;;;;;18058:18:27;;;18051:62;18149:28;18129:18;;;18122:56;18195:19;;8348:101:20;;;;;;;;;8488:16;;8468;;:36;8460:121;;;;-1:-1:-1;;;;;8460:121:20;;9411:2:27;8460:121:20;;;9393:21:27;9450:2;9430:18;;;9423:30;-1:-1:-1;;;;;;;;;;;9469:18:27;;;9462:62;9560:34;9540:18;;;9533:62;9632:10;9611:19;;;9604:39;9660:19;;8460:121:20;9383:302:27;8460:121:20;8672:23;;6502:5:27;8672:23:20;;;6490:18:27;6524:11;;8672:23:20;;;;;;;;;;;;8662:34;;;;;;8641:5;:15;;;8624:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;8614:44;;;;;;:82;8592:202;;;;-1:-1:-1;;;;;8592:202:20;;11338:2:27;8592:202:20;;;11320:21:27;11377:2;11357:18;;;11350:30;-1:-1:-1;;;;;;;;;;;11396:18:27;;;11389:62;11487:34;11467:18;;;11460:62;11559:7;11538:19;;;11531:36;11584:19;;8592:202:20;11310:299:27;8592:202:20;8878:5;:12;;;8864:5;:11;;;:26;;;;:::i;:::-;8829:30;;-1:-1:-1;;;;;8829:30:20;;8853:4;8829:30;;;6692:74:27;-1:-1:-1;;;;;8829:15:20;;;;;6665:18:27;;8829:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;8807:184;;;;-1:-1:-1;;;;;8807:184:20;;12296:2:27;8807:184:20;;;12278:21:27;12335:2;12315:18;;;12308:30;-1:-1:-1;;;;;;;;;;;12354:18:27;;;12347:62;12445:34;12425:18;;;12418:62;12517:10;12496:19;;;12489:39;12545:19;;8807:184:20;12268:302:27;8807:184:20;9012:5;-1:-1:-1;;;;;9012:14:20;;9027:6;9049:5;:12;;;9035:5;:11;;;:26;;;;:::i;:::-;9012:50;;-1:-1:-1;;;9012:50:20;;;;;;-1:-1:-1;;;;;7372:55:27;;;9012:50:20;;;7354:74:27;7444:18;;;7437:34;7327:18;;9012:50:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9105:13:20;;;;;9092:27;;;;:12;:27;;;;;;9085:34;;;;;;;;;9092:27;9085:34;;;;9092:27;9085:34;:::i;:::-;-1:-1:-1;9085:34:20;;;;;-1:-1:-1;;;;;;9085:34:20;;;-1:-1:-1;9085:34:20;;;;;;;;;;;9167:13;;;;;9137:44;;19400:25:27;;;9137:44:20;;19373:18:27;9137:44:20;;;;;;;;8094:1095;;;;:::o;3024:273::-;3074:19;3105:26;3151:16;;3134:34;;;;;;-1:-1:-1;;;;;3134:34:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;3105:63:20;-1:-1:-1;3192:1:20;3179:86;3200:16;;3195:1;:21;3179:86;;3250:12;:15;3263:1;3250:15;;;;;;;;;;;3236:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3236:29:20;;;-1:-1:-1;;3236:29:20;;;;-1:-1:-1;;;;;3236:29:20;;;;;;;;;;;;;;;;;;;;;;;:6;3243:3;3236:29;3243:1;:3;:::i;:::-;3236:11;;;;;;-1:-1:-1;;;;;3236:11:20;;;;;;;;;;;;;;:29;;;;3218:3;;;;;:::i;:::-;;;;3179:86;;9361:1063;9467:23;9493:12;:27;9506:5;:13;;;9493:27;;;;;;;;;;;9467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9467:53:20;;;-1:-1:-1;;9467:53:20;;;;-1:-1:-1;;;;;9467:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9569:16;;9467:53;9553:33;;;:15;:33;;;;;;;;:54;;;;9627:20;;;;9467:53;;-1:-1:-1;9553:54:20;;;9627:30;;;;;;9619:102;;;;-1:-1:-1;;;;;9619:102:20;;16134:2:27;9619:102:20;;;16116:21:27;16173:2;16153:18;;;16146:30;-1:-1:-1;;;;;;;;;;;16192:18:27;;;16185:62;16283:29;16263:18;;;16256:57;16330:19;;9619:102:20;16106:249:27;9619:102:20;9760:16;;9740;;:36;9732:122;;;;-1:-1:-1;;;;;9732:122:20;;16562:2:27;9732:122:20;;;16544:21:27;16601:2;16581:18;;;16574:30;-1:-1:-1;;;;;;;;;;;16620:18:27;;;16613:62;16711:34;16691:18;;;16684:62;16783:11;16762:19;;;16755:40;16812:19;;9732:122:20;16534:303:27;9732:122:20;9945:24;;-1:-1:-1;;;;;9945:24:20;;;6231:19:27;6266:11;;9945:24:20;;;;;;;;;;;;9935:35;;;;;;9914:5;:15;;;9897:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;9887:44;;;;;;:83;9865:205;;;;-1:-1:-1;;;;;9865:205:20;;11816:2:27;9865:205:20;;;11798:21:27;11855:2;11835:18;;;11828:30;-1:-1:-1;;;;;;;;;;;11874:18:27;;;11867:62;11965:34;11945:18;;;11938:62;12037:9;12016:19;;;12009:38;12064:19;;9865:205:20;11788:301:27;9865:205:20;10137:12;;;;10103:30;;-1:-1:-1;;;;;10103:30:20;;10127:4;10103:30;;;6692:74:27;-1:-1:-1;;;;;10103:15:20;;;;;6665:18:27;;10103:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;10081:170;;;;-1:-1:-1;;;;;10081:170:20;;17518:2:27;10081:170:20;;;17500:21:27;17557:2;17537:18;;;17530:30;-1:-1:-1;;;;;;;;;;;17576:18:27;;;17569:62;17667:34;17647:18;;;17640:62;17739:11;17718:19;;;17711:40;17768:19;;10081:170:20;17490:303:27;10081:170:20;10295:12;;;;10272:36;;;;;-1:-1:-1;;;;;7372:55:27;;;10272:36:20;;;7354:74:27;7444:18;;;7437:34;;;;10272:14:20;;;;;;7327:18:27;;10272:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10339:13:20;;;;;10326:27;;;;:12;:27;;;;;;10319:34;;;;;;;;;10326:27;10319:34;;;;10326:27;10319:34;:::i;:::-;-1:-1:-1;10319:34:20;;;;;-1:-1:-1;;;;;;10319:34:20;;;-1:-1:-1;10319:34:20;;;;;;;;;;;10402:13;;;;;10371:45;;19400:25:27;;;10371:45:20;;19373:18:27;10371:45:20;19355:76:27;5594:1060:20;5746:16;;5708:12;5730:33;;;:15;:33;;;;;;;;;:51;;;5857:12;;;;5843:11;;;;-1:-1:-1;;;;;5730:51:20;;;;5843:26;;;:::i;:::-;5815:23;;-1:-1:-1;;;;;5815:23:20;;-1:-1:-1;;;;;6710:55:27;;;5815:23:20;;;6692:74:27;5815:15:20;;;;;6665:18:27;;5815:23:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;5793:177;;;;-1:-1:-1;;;;;5793:177:20;;9892:2:27;5793:177:20;;;9874:21:27;9931:2;9911:18;;;9904:30;9970:34;9950:18;;;9943:62;10041:34;10021:18;;;10014:62;10113:9;10092:19;;;10085:38;10140:19;;5793:177:20;9864:301:27;5793:177:20;6003:1;5989:5;:11;;;:15;5981:107;;;;-1:-1:-1;;;;;5981:107:20;;14695:2:27;5981:107:20;;;14677:21:27;14734:2;14714:18;;;14707:30;14773:34;14753:18;;;14746:62;14844:34;14824:18;;;14817:62;14916:17;14895:19;;;14888:46;14951:19;;5981:107:20;14667:309:27;5981:107:20;6101:5;-1:-1:-1;;;;;6101:18:20;;6120:6;6136:4;6157:5;:12;;;6143:5;:11;;;:26;;;;:::i;:::-;6101:69;;;;;-1:-1:-1;;;6101:69:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6243:23;;:::i;:::-;6296:16;;6277:35;;6323:23;;;;;;;;;;;;;;;;;;;;:15;;;:23;;;;-1:-1:-1;;;;;6357:29:20;;:20;;;:29;6412:12;;;6397;;;:27;6449:11;;;6435;;;:25;6473:16;:18;;;6296:16;6473:18;;;:::i;:::-;;;;-1:-1:-1;;6518:16:20;;;6502:13;;;;:32;;;6545:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;6502:5;;6545:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;6545:38:20;;;;;;;;;-1:-1:-1;;;;;;6545:38:20;-1:-1:-1;;;;;6545:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6629:16:20;6601:45;;19400:25:27;;;6601:45:20;;19388:2:27;19373:18;6601:45:20;19355:76:27;3305:145:20;3375:20;;:::i;:::-;3414:28;;;;:15;:28;;;;;;;3407:35;;;;;;;;;;;;3414:28;;3407:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3407:35:20;;;-1:-1:-1;;3407:35:20;;;;-1:-1:-1;;;;;3407:35:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:145;-1:-1:-1;;3305:145:20:o;10585:1305::-;10679:23;10705:12;:27;10718:5;:13;;;10705:27;;;;;;;;;;;10679:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10679:53:20;;;-1:-1:-1;;10679:53:20;;;;;-1:-1:-1;;;;;10679:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10786:16;;10679:53;10770:33;;;:15;:33;;;;;;;:51;;;;10879:16;;10863:33;;;;;;:54;;;;10959:16;;10939;;10679:53;;-1:-1:-1;10770:51:20;;;;10863:54;;;10939:36;10931:116;;;;-1:-1:-1;;;;;10931:116:20;;18427:2:27;10931:116:20;;;18409:21:27;18466:2;18446:18;;;18439:30;18505:34;18485:18;;;18478:62;18576:34;18556:18;;;18549:62;18648:5;18627:19;;;18620:34;18671:19;;10931:116:20;18399:297:27;10931:116:20;11138:24;;-1:-1:-1;;;;;11138:24:20;;;6231:19:27;6266:11;;11138:24:20;;;;;;;;;;;;11128:35;;;;;;11107:5;:15;;;11090:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;11080:44;;;;;;:83;11058:199;;;;-1:-1:-1;;;;;11058:199:20;;14221:2:27;11058:199:20;;;14203:21:27;14260:2;14240:18;;;14233:30;14299:34;14279:18;;;14272:62;14370:34;14350:18;;;14343:62;14442:3;14421:19;;;14414:32;14463:19;;11058:199:20;14193:295:27;11058:199:20;11337:5;:12;;;11323:5;:11;;;:26;;;;:::i;:::-;11290:28;;-1:-1:-1;;;;;11290:28:20;;-1:-1:-1;;;;;6710:55:27;;;11290:28:20;;;6692:74:27;11290:20:20;;;;;6665:18:27;;11290:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;11268:177;;;;-1:-1:-1;;;;;11268:177:20;;;;;;;:::i;:::-;11522:12;;;;11480:38;;-1:-1:-1;;;;;11480:38:20;;11512:4;11480:38;;;6692:74:27;-1:-1:-1;;;;;11480:23:20;;;;;6665:18:27;;11480:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;11458:171;;;;-1:-1:-1;;;;;11458:171:20;;;;;;;:::i;:::-;11642:10;-1:-1:-1;;;;;11642:23:20;;11666:6;11674:5;:20;;;11710:5;:12;;;11696:5;:11;;;:26;;;;:::i;:::-;11642:81;;;;;-1:-1:-1;;;11642:81:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11766:12:20;;;;11735:44;;;;;-1:-1:-1;;;;;7372:55:27;;;11735:44:20;;;7354:74:27;7444:18;;;7437:34;;;;11735:22:20;;;;;;7327:18:27;;11735:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11810:13:20;;;;;11797:27;;;;:12;:27;;;;;;11790:34;;;;;;;;;11797:27;11790:34;;;;11797:27;11790:34;:::i;:::-;-1:-1:-1;11790:34:20;;;;;-1:-1:-1;;;;;;11790:34:20;;;-1:-1:-1;11790:34:20;;;;;;;;;;;11868:13;;;;;11842:40;;19400:25:27;;;11842:40:20;;19373:18:27;11842:40:20;;;;;;;;10585:1305;;;;;:::o;3458:130::-;3522:17;;:::i;:::-;3558:12;:22;3571:8;3558:22;;;;;;;;;;;3551:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3551:29:20;;;-1:-1:-1;;3551:29:20;;;;-1:-1:-1;;;;;3551:29:20;;;;;;;;;;;;;;;;;;;;;;;;3458:130;-1:-1:-1;;3458:130:20:o;6880:1039::-;7033:16;;6995:12;7017:33;;;:15;:33;;;;;;;;;:54;;;;7132:12;;;;7105:23;;-1:-1:-1;;;;;7105:23:20;;-1:-1:-1;;;;;6710:55:27;;;7105:23:20;;;6692:74:27;7017:54:20;;;;7132:12;7017:54;;7105:15;;6665:18:27;;7105:23:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;7083:162;;;;-1:-1:-1;;;;;7083:162:20;;13254:2:27;7083:162:20;;;13236:21:27;13293:2;13273:18;;;13266:30;13332:34;13312:18;;;13305:62;13403:34;13383:18;;;13376:62;13475:10;13454:19;;;13447:39;13503:19;;7083:162:20;13226:302:27;7083:162:20;7278:1;7264:5;:11;;;:15;7256:108;;;;-1:-1:-1;;;;;7256:108:20;;10849:2:27;7256:108:20;;;10831:21:27;10888:2;10868:18;;;10861:30;10927:34;10907:18;;;10900:62;10998:34;10978:18;;;10971:62;11070:18;11049:19;;;11042:47;11106:19;;7256:108:20;10821:310:27;7256:108:20;7419:12;;;;7377:55;;;;;-1:-1:-1;;;;;7377:18:20;;;;;:55;;7396:6;;7412:4;;7419:12;7377:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7506:23;;:::i;:::-;7559:16;;7540:35;;7586:24;;;;;;;;;;;-1:-1:-1;;;;;7586:24:20;;;;;;;;:15;;;:24;;;;-1:-1:-1;;;;;7621:29:20;;:20;;;:29;7676:12;;;7661;;;:27;7713:11;;;7699;;;:25;7737:16;:18;;;7559:16;7737:18;;;:::i;:::-;;;;-1:-1:-1;;7782:16:20;;;7766:13;;;;:32;;;7809:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;7766:5;;7809:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;7809:38:20;;;;;;;;;-1:-1:-1;;;;;;7809:38:20;-1:-1:-1;;;;;7809:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7894:16:20;7865:46;;19400:25:27;;;7865:46:20;;19388:2:27;19373:18;7865:46:20;19355:76:27;3916:1460:20;4054:26;;;;4127:12;;;;4100:23;;-1:-1:-1;;;;;4100:23:20;;-1:-1:-1;;;;;6710:55:27;;;4100:23:20;;;6692:74:27;4100:15:20;;;;;6665:18:27;;4100:23:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;4092:118;;;;-1:-1:-1;;;;;4092:118:20;;15183:2:27;4092:118:20;;;15165:21:27;15222:2;15202:18;;;15195:30;15261:34;15241:18;;;15234:62;15332:34;15312:18;;;15305:62;15404:4;15383:19;;;15376:33;15426:19;;4092:118:20;15155:296:27;4092:118:20;4243:1;4229:5;:11;;;:15;4221:105;;;;-1:-1:-1;;;;;4221:105:20;;13735:2:27;4221:105:20;;;13717:21:27;13774:2;13754:18;;;13747:30;13813:34;13793:18;;;13786:62;13884:34;13864:18;;;13857:62;13956:15;13935:19;;;13928:44;13989:19;;4221:105:20;13707:307:27;4221:105:20;4389:12;;;;4347:55;;;;;-1:-1:-1;;;;;4347:18:20;;;;;:55;;4366:6;;4382:4;;4389:12;4347:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4489:29;;:::i;:::-;4553:18;;4529:42;;-1:-1:-1;;;;;4582:32:20;;;:23;;;;:32;;;;4657:26;;;4625:58;;:29;;;;:58;;;;4723:23;;;4694:52;:26;;;;:52;;;;4782:12;;;4757:22;;;;:37;;;;4822:11;;;4805:14;;;:28;4553:18;4847:21;;;4553:18;4847:21;;;:::i;:::-;;;;-1:-1:-1;;4879:36:20;4895:19;;4879:36;;:15;:36;;;;;;;;:47;;;;4918:8;;4879:47;;:36;;:47;;;;:::i;:::-;-1:-1:-1;4879:47:20;;;;;;;;;-1:-1:-1;;;;;4879:47:20;;;-1:-1:-1;;;;;;4879:47:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4939:23;;:::i;:::-;4992:19;;;4973:38;;5022:24;;;;;;;;;;;-1:-1:-1;;;;;5022:24:20;;;;:15;;;:24;-1:-1:-1;;;;;5057:29:20;;:20;;;;:29;;;;5112:12;;;5097;;;:27;5149:14;;;;;5135:11;;;:28;5176:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;5221:16:20;;;5205:13;;;;:32;;;5248:30;;;;:12;:30;;;;;;;:38;;;;;;;;;;;;;;;;;;;5205:5;;5248:30;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;5248:38:20;;;;;;;;;-1:-1:-1;;;;;;5248:38:20;-1:-1:-1;;;;;5248:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5330:19:20;-1:-1:-1;5351:16:20;5304:64;;;19610:25:27;;;19666:2;19651:18;;19644:34;;;;5304:64:20;;19583:18:27;5304:64:20;19565:119:27;12056:1334:20;12151:23;12177:12;:27;12190:5;:13;;;12177:27;;;;;;;;;;;12151:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12151:53:20;;;-1:-1:-1;;12151:53:20;;;;;-1:-1:-1;;;;;12151:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:16;;12151:53;12242:33;;;:15;:33;;;;;;;:51;;;;12351:16;;12335:33;;;;;;:54;;;;12431:16;;12411;;12151:53;;-1:-1:-1;12242:51:20;;;;12335:54;;;12411:36;12403:117;;;;-1:-1:-1;;;;;12403:117:20;;10372:2:27;12403:117:20;;;10354:21:27;10411:2;10391:18;;;10384:30;;;10450:34;10430:18;;;10423:62;10521:34;10501:18;;;10494:62;10593:6;10572:19;;;10565:35;10617:19;;12403:117:20;10344:298:27;12403:117:20;12611:23;;6502:5:27;12611:23:20;;;6490:18:27;6524:11;;12611:23:20;;;;;;;;;;;;12601:34;;;;;;12580:5;:15;;;12563:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;12553:44;;;;;;:82;12531:198;;;;-1:-1:-1;;;;;12531:198:20;;17044:2:27;12531:198:20;;;17026:21:27;17083:2;17063:18;;;17056:30;17122:34;17102:18;;;17095:62;17193:34;17173:18;;;17166:62;17265:3;17244:19;;;17237:32;17286:19;;12531:198:20;17016:295:27;12531:198:20;12816:5;:12;;;12802:5;:11;;;:26;;;;:::i;:::-;12762:35;;-1:-1:-1;;;;;12762:35:20;;12791:4;12762:35;;;6692:74:27;-1:-1:-1;;;;;12762:20:20;;;;;6665:18:27;;12762:35:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;12740:185;;;;-1:-1:-1;;;;;12740:185:20;;;;;;;:::i;:::-;13009:12;;;;12984:20;;;;12960:45;;-1:-1:-1;;;;;12960:45:20;;-1:-1:-1;;;;;6710:55:27;;;12960:45:20;;;6692:74:27;12960:23:20;;;;;;6665:18:27;;12960:45:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;12938:179;;;;-1:-1:-1;;;;;12938:179:20;;;;;;;:::i;:::-;13130:10;-1:-1:-1;;;;;13130:19:20;;13150:5;:20;;;13186:5;:12;;;13172:5;:11;;;:26;;;;:::i;:::-;13130:69;;-1:-1:-1;;;13130:69:20;;;;;;-1:-1:-1;;;;;7372:55:27;;;13130:69:20;;;7354:74:27;7444:18;;;7437:34;7327:18;;13130:69:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13238:20:20;;;;13268:12;;;;13211:70;;;;;-1:-1:-1;;;;;13211:26:20;;;;;:70;;13260:6;;13268:12;13211:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13312:13:20;;;;;13299:27;;;;:12;:27;;;;;;13292:34;;;;;;;;;13299:27;13292:34;;;;13299:27;13292:34;:::i;:::-;-1:-1:-1;13292:34:20;;;;;-1:-1:-1;;;;;;13292:34:20;;;-1:-1:-1;13292:34:20;;;;;;;;;;;13368:13;;;;;13344:38;;19400:25:27;;;13344:38:20;;19373:18:27;13344:38:20;19355:76:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:27;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:495::-;280:5;328:4;316:9;311:3;307:19;303:30;300:2;;;350:5;343;336:20;300:2;387:4;381:11;431:4;423:6;419:17;502:6;490:10;487:22;466:18;454:10;451:34;448:62;445:2;;;513:18;;:::i;:::-;549:4;542:24;614:23;;599:39;;699:2;684:18;;;671:32;654:15;;;647:57;;;;-1:-1:-1;584:6:27;290:420;-1:-1:-1;290:420:27:o;715:297::-;782:6;835:2;823:9;814:7;810:23;806:32;803:2;;;856:6;848;841:22;803:2;893:9;887:16;946:5;939:13;932:21;925:5;922:32;912:2;;973:6;965;958:22;912:2;1001:5;793:219;-1:-1:-1;;;793:219:27:o;1017:333::-;1121:6;1129;1182:2;1170:9;1161:7;1157:23;1153:32;1150:2;;;1203:6;1195;1188:22;1150:2;1231:56;1279:7;1268:9;1231:56;:::i;:::-;1221:66;;1306:38;1340:2;1329:9;1325:18;1306:38;:::i;:::-;1296:48;;1140:210;;;;;:::o;1355:1441::-;1472:6;1480;1533:2;1521:9;1512:7;1508:23;1504:32;1501:2;;;1554:6;1546;1539:22;1501:2;1599:9;1586:23;1628:18;1669:2;1661:6;1658:14;1655:2;;;1690:6;1682;1675:22;1655:2;1718:22;;;;1774:4;1756:16;;;1752:27;1749:2;;;1797:6;1789;1782:22;1749:2;1828:22;;:::i;:::-;1888:2;1875:16;1916:2;1906:8;1903:16;1900:2;;;1937:6;1929;1922:22;1900:2;1965:17;;2013:4;2005:13;;2001:27;-1:-1:-1;1991:2:27;;2047:6;2039;2032:22;1991:2;2088;2075:16;2110:4;2133:2;2129;2126:10;2123:2;;;2139:18;;:::i;:::-;2181:53;2224:2;2205:13;;-1:-1:-1;;2201:27:27;2197:36;;2181:53;:::i;:::-;2168:66;;2257:2;2250:5;2243:17;2297:7;2292:2;2287;2283;2279:11;2275:20;2272:33;2269:2;;;2323:6;2315;2308:22;2269:2;2383;2378;2374;2370:11;2365:2;2358:5;2354:14;2341:45;2427:6;2422:2;2417;2410:5;2406:14;2402:23;2395:39;2457:5;2450;2443:20;2495:31;2522:2;2518;2514:11;2495:31;:::i;:::-;2490:2;2483:5;2479:14;2472:55;2559:31;2586:2;2582;2578:11;2559:31;:::i;:::-;2554:2;2547:5;2543:14;2536:55;2644:2;2640;2636:11;2623:25;2618:2;2611:5;2607:14;2600:49;2703:3;2699:2;2695:12;2682:26;2676:3;2669:5;2665:15;2658:51;2728:5;2718:15;;2752:38;2786:2;2775:9;2771:18;2752:38;:::i;:::-;2742:48;;;;;;;;1491:1305;;;;;:::o;2801:327::-;2899:6;2907;2960:2;2948:9;2939:7;2935:23;2931:32;2928:2;;;2981:6;2973;2966:22;3133:752;3246:6;3254;3298:9;3289:7;3285:23;3328:3;3324:2;3320:12;3317:2;;;3350:6;3342;3335:22;3317:2;3379:4;3375:2;3371:13;3368:2;;;3402:6;3394;3387:22;3368:2;;3440;3434:9;3482:4;3474:6;3470:17;3553:6;3541:10;3538:22;3517:18;3505:10;3502:34;3499:62;3496:2;;;3564:18;;:::i;:::-;3600:2;3593:22;;;3639:23;;3624:39;;3724:2;3709:18;;;3696:32;3679:15;;;3672:57;3775:18;;;3762:32;3745:15;;;3738:57;3631:6;-1:-1:-1;3839:40:27;3873:4;3858:20;;3839:40;:::i;3890:190::-;3949:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:2;;;4023:6;4015;4008:22;3970:2;-1:-1:-1;4051:23:27;;3960:120;-1:-1:-1;3960:120:27:o;4085:194::-;4155:6;4208:2;4196:9;4187:7;4183:23;4179:32;4176:2;;;4229:6;4221;4214:22;4176:2;-1:-1:-1;4257:16:27;;4166:113;-1:-1:-1;4166:113:27:o;4284:258::-;4326:3;4364:5;4358:12;4391:6;4386:3;4379:19;4407:63;4463:6;4456:4;4451:3;4447:14;4440:4;4433:5;4429:16;4407:63;:::i;:::-;4524:2;4503:15;-1:-1:-1;;4499:29:27;4490:39;;;;4531:4;4486:50;;4334:208;-1:-1:-1;;4334:208:27:o;4547:639::-;4603:3;4647:5;4641:12;4674:4;4669:3;4662:17;4700:47;4741:4;4736:3;4732:14;4718:12;4700:47;:::i;:::-;4688:59;;4795:4;4788:5;4784:16;4778:23;-1:-1:-1;;;;;4914:2:27;4898:14;4894:23;4887:4;4882:3;4878:14;4871:47;4979:2;4971:4;4964:5;4960:16;4954:23;4950:32;4943:4;4938:3;4934:14;4927:56;5044:2;5036:4;5029:5;5025:16;5019:23;5015:32;5008:4;5003:3;4999:14;4992:56;;;5097:4;5090:5;5086:16;5080:23;5073:4;5068:3;5064:14;5057:47;5153:4;5146:5;5142:16;5136:23;5129:4;5124:3;5120:14;5113:47;5176:4;5169:11;;;4611:575;;;;:::o;5191:552::-;5280:5;5274:12;5269:3;5262:25;5336:4;5329:5;5325:16;5319:23;5312:4;5307:3;5303:14;5296:47;5244:3;5389:4;5382:5;5378:16;5372:23;5427:4;5420;5415:3;5411:14;5404:28;5453:47;5494:4;5489:3;5485:14;5471:12;5453:47;:::i;:::-;5441:59;;-1:-1:-1;;;;;5553:4:27;5546:5;5542:16;5536:23;5532:72;5525:4;5520:3;5516:14;5509:96;5654:4;5647:5;5643:16;5637:23;5630:4;5625:3;5621:14;5614:47;5710:4;5703:5;5699:16;5693:23;5686:4;5681:3;5677:14;5670:47;5733:4;5726:11;;;5252:491;;;;:::o;5748:276::-;5879:3;5917:6;5911:13;5933:53;5979:6;5974:3;5967:4;5959:6;5955:17;5933:53;:::i;:::-;6002:16;;;;;5887:137;-1:-1:-1;;5887:137:27:o;6777:398::-;-1:-1:-1;;;;;7058:15:27;;;7040:34;;7110:15;;;;7105:2;7090:18;;7083:43;7157:2;7142:18;;7135:34;;;;6967:2;6952:18;;6934:241::o;7482:863::-;7686:4;7715:2;7755;7744:9;7740:18;7785:2;7774:9;7767:21;7808:6;7843;7837:13;7874:6;7866;7859:22;7912:2;7901:9;7897:18;7890:25;;7975:2;7969;7961:6;7957:15;7946:9;7942:31;7938:40;7924:54;;8013:2;8005:6;8001:15;8034:4;8047:269;8061:6;8058:1;8055:13;8047:269;;;8154:2;8150:7;8138:9;8130:6;8126:22;8122:36;8117:3;8110:49;8182:54;8229:6;8220;8214:13;8182:54;:::i;:::-;8172:64;-1:-1:-1;8294:12:27;;;;8259:15;;;;8083:1;8076:9;8047:269;;;-1:-1:-1;8333:6:27;;7695:650;-1:-1:-1;;;;;;;7695:650:27:o;8350:854::-;8548:4;8577:2;8617;8606:9;8602:18;8647:2;8636:9;8629:21;8670:6;8705;8699:13;8736:6;8728;8721:22;8774:2;8763:9;8759:18;8752:25;;8837:2;8831;8823:6;8819:15;8808:9;8804:31;8800:40;8786:54;;8875:2;8867:6;8863:15;8896:4;8909:266;8923:6;8920:1;8917:13;8909:266;;;9016:2;9012:7;9000:9;8992:6;8988:22;8984:36;8979:3;8972:49;9044:51;9088:6;9079;9073:13;9044:51;:::i;:::-;9034:61;-1:-1:-1;9153:12:27;;;;9118:15;;;;8945:1;8938:9;8909:266;;12575:472;12777:2;12759:21;;;12816:2;12796:18;;;12789:30;12855:34;12850:2;12835:18;;12828:62;12926:34;12921:2;12906:18;;12899:62;12998:6;12992:3;12977:19;;12970:35;13037:3;13022:19;;12749:298::o;15456:471::-;15658:2;15640:21;;;15697:2;15677:18;;;15670:30;15736:34;15731:2;15716:18;;15709:62;15807:34;15802:2;15787:18;;15780:62;15879:5;15873:3;15858:19;;15851:34;15917:3;15902:19;;15630:297::o;18701:276::-;18892:2;18881:9;18874:21;18855:4;18912:59;18967:2;18956:9;18952:18;18944:6;18912:59;:::i;18982:267::-;19167:2;19156:9;19149:21;19130:4;19187:56;19239:2;19228:9;19224:18;19216:6;19187:56;:::i;19689:253::-;19761:2;19755:9;19803:4;19791:17;;19838:18;19823:34;;19859:22;;;19820:62;19817:2;;;19885:18;;:::i;:::-;19921:2;19914:22;19735:207;:::o;19947:275::-;20018:2;20012:9;20083:2;20064:13;;-1:-1:-1;;20060:27:27;20048:40;;20118:18;20103:34;;20139:22;;;20100:62;20097:2;;;20165:18;;:::i;:::-;20201:2;20194:22;19992:230;;-1:-1:-1;19992:230:27:o;20227:168::-;20267:7;20333:1;20329;20325:6;20321:14;20318:1;20315:21;20310:1;20303:9;20296:17;20292:45;20289:2;;;20340:18;;:::i;:::-;-1:-1:-1;20380:9:27;;20279:116::o;20400:125::-;20440:4;20468:1;20465;20462:8;20459:2;;;20473:18;;:::i;:::-;-1:-1:-1;20510:9:27;;20449:76::o;20530:258::-;20602:1;20612:113;20626:6;20623:1;20620:13;20612:113;;;20702:11;;;20696:18;20683:11;;;20676:39;20648:2;20641:10;20612:113;;;20743:6;20740:1;20737:13;20734:2;;;20778:1;20769:6;20764:3;20760:16;20753:27;20734:2;;20583:205;;;:::o;20793:437::-;20878:1;20868:12;;20925:1;20915:12;;;20936:2;;20990:4;20982:6;20978:17;20968:27;;20936:2;21043;21035:6;21032:14;21012:18;21009:38;21006:2;;;-1:-1:-1;;;;;21077:1:27;21070:88;21181:4;21178:1;21171:15;21209:4;21206:1;21199:15;21235:135;21274:3;-1:-1:-1;;21295:17:27;;21292:2;;;21315:18;;:::i;:::-;-1:-1:-1;21362:1:27;21351:13;;21282:88::o;21375:184::-;-1:-1:-1;;;;;21424:1:27;21417:88;21524:4;21521:1;21514:15;21548:4;21545:1;21538:15;21564:184;-1:-1:-1;;;;;21613:1:27;21606:88;21713:4;21710:1;21703:15;21737:4;21734:1;21727:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/**\r\n * @dev Exchange Contract for ERC20 Token\r\n */\r\ncontract ERC20TokenExchange{\r\n    /**\r\n    * @dev Exchange struct for ERC20 Token\r\n    */\r\n    struct ERC20Exchange {\r\n        string exchangeName;\r\n        address creatorAddress;\r\n        address exchangeTokenAddress;\r\n        address offerTokenAddress;\r\n        uint initialAmount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Offer struct for ERC20 Token\r\n    */\r\n    struct ERC20Offer {\r\n        uint exchangeId;\r\n        uint offerId;\r\n        string offerType;\r\n        address creatorAddress;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for creating ERC20TokenExchange\r\n    */\r\n    struct CreateERC20TokenExchangeRequest {\r\n        string exchangeName;\r\n        address exchangeTokenAddress;\r\n        address offerTokenAddress;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for Place ERC20Token Offer\r\n    */\r\n    struct PlaceERC20TokenOfferRequest {\r\n        uint exchangeId;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for cancel Exchange\r\n    */\r\n    struct CancelOfferRequest {\r\n        uint exchangeId;\r\n        uint offerId;\r\n    }\r\n\r\n    /**\r\n    * @dev Request struct for deal Exchange\r\n    */\r\n    struct OfferRequest {\r\n        uint exchangeId;\r\n        uint offerId;\r\n    }\r\n\r\n    /**\r\n    * @dev count variables for ERC20Token exchange and offer mapping\r\n    */\r\n    uint internal _erc20ExchangeCount;\r\n    uint internal _erc20OfferCount;\r\n\r\n    /**\r\n    * @dev variables for storing ERC20TOken Exchange and Offer\r\n    */\r\n    mapping(uint => ERC20Exchange) internal _erc20Exchanges;\r\n    mapping(uint => ERC20Offer) internal _erc20Offers;\r\n\r\n    // ----- EVENTS ----- //\r\n    event ERC20TokenExchangeCreated(uint exchangeId, uint initialOfferId);\r\n    event ERC20TokenBuyingOfferPlaced(uint offerId);\r\n    event ERC20TokenSellingOfferPlaced(uint offerId);\r\n    event ERC20TokenBuyingOfferCanceled(uint offerId);\r\n    event ERC20TokenSellingOfferCanceled(uint offerId);\r\n    event ERC20TokenFromOfferBought(uint offerId);\r\n    event ERC20TokenFromOfferSold(uint offerId);\r\n\r\n    /**\r\n    * @dev Constructor Function\r\n    */\r\n    constructor() {\r\n        _erc20ExchangeCount = 0;\r\n        _erc20OfferCount = 0;\r\n    }\r\n    \r\n    // ----- VIEWS ----- //\r\n    function getErc20ExchangeCount() external view returns(uint){\r\n        return _erc20ExchangeCount;\r\n    }\r\n\r\n    function getErc20OfferCount() external view returns(uint){\r\n        return _erc20OfferCount;\r\n    }\r\n\r\n    function getErc20ExchangeAll() external view returns(ERC20Exchange[] memory){\r\n        ERC20Exchange[] memory exchanges = new ERC20Exchange[](_erc20ExchangeCount);\r\n        for(uint i = 1; i <= _erc20ExchangeCount; i++)\r\n            exchanges[i-1] = _erc20Exchanges[i];\r\n        return exchanges;\r\n    }\r\n\r\n    function getErc20OfferAll() external view returns(ERC20Offer[] memory){\r\n        ERC20Offer[] memory offers = new ERC20Offer[](_erc20OfferCount);\r\n        for(uint i = 1; i <= _erc20OfferCount; i++)\r\n            offers[i-1] = _erc20Offers[i];\r\n        return offers;\r\n    }\r\n\r\n    function getErc20ExchangeById(uint _exchangeId) external view returns(ERC20Exchange memory){\r\n        return _erc20Exchanges[_exchangeId];\r\n    }\r\n\r\n    function getErc20OfferById(uint _offerId) external view returns(ERC20Offer memory){\r\n        return _erc20Offers[_offerId];\r\n    }\r\n\r\n    // ----- PUBLIC METHODS ----- //\r\n    /**\r\n    * @dev Owner of token can create Exchange of ERC20\r\n    * @dev exchangeTokenAddress address of exchangeToken(ERC20) \r\n    * @dev offerTokenAddress address of exchangeToken(ERC20) \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function CreateERC20TokenExchange(CreateERC20TokenExchangeRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(input.exchangeTokenAddress);\r\n        require(token.balanceOf(caller) >= input.amount, \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\");\r\n        require(input.price > 0, \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\");\r\n        \r\n        token.transferFrom(caller, address(this), input.amount);\r\n\r\n        /**\r\n        * @dev store exchange and initial offer\r\n        */\r\n        ERC20Exchange memory exchange;\r\n        exchange.exchangeName = input.exchangeName;\r\n        exchange.creatorAddress = caller;\r\n        exchange.exchangeTokenAddress = input.exchangeTokenAddress;\r\n        exchange.offerTokenAddress = input.offerTokenAddress;\r\n        exchange.initialAmount = input.amount;\r\n        exchange.price = input.price; \r\n\r\n        _erc20ExchangeCount++;\r\n        _erc20Exchanges[_erc20ExchangeCount] = exchange;\r\n\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = _erc20ExchangeCount;\r\n        offer.offerType = \"SELL\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = exchange.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenExchangeCreated(_erc20ExchangeCount, _erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev someone can create buying offer for ERC20 token exchange\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function PlaceERC20TokenBuyingOffer(PlaceERC20TokenOfferRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        require(\r\n            token.balanceOf(caller) >= (input.price * input.amount), \r\n            \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\"\r\n        );\r\n        require(input.price > 0, \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\");\r\n\r\n        token.transferFrom(caller, address(this), input.price * input.amount);\r\n\r\n        /**\r\n        * @dev store buying offer\r\n        */\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = input.exchangeId;\r\n        offer.offerType = \"BUY\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = input.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenBuyingOfferPlaced(_erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev owner of token can create selling offer for ERC20 token exchange\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev amount amount of Exchange\r\n    * @dev price token price of Exchange\r\n    */\r\n    function PlaceERC20TokenSellingOffer(PlaceERC20TokenOfferRequest memory input, address caller) external {\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n        require(\r\n            token.balanceOf(caller) >= input.amount, \r\n            \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\"\r\n        );\r\n        require(input.price > 0, \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\");\r\n\r\n        token.transferFrom(caller, address(this), input.amount);\r\n\r\n        /**\r\n        * @dev store selling offer\r\n        */\r\n        ERC20Offer memory offer;\r\n        offer.exchangeId = input.exchangeId;\r\n        offer.offerType = \"SELL\";\r\n        offer.creatorAddress = caller;\r\n        offer.amount = input.amount;\r\n        offer.price = input.price;\r\n\r\n        _erc20OfferCount++;\r\n        offer.offerId = _erc20OfferCount;\r\n        _erc20Offers[_erc20OfferCount] = offer;\r\n\r\n        emit ERC20TokenSellingOfferPlaced(_erc20OfferCount);\r\n    }\r\n\r\n    /**\r\n    * @dev creator of buying offer can cancel his ERC20Token BuyingOffer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function CancelERC20TokenBuyingOffer(CancelOfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        require(offer.creatorAddress == caller, \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\");\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"BUY\")), \r\n            \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\"\r\n        );\r\n\r\n        require(\r\n            token.balanceOf(address(this)) >= (offer.price * offer.amount),\r\n            \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\"\r\n        );\r\n        \r\n        token.transfer(caller, offer.price * offer.amount);            \r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenBuyingOfferCanceled(input.offerId);\r\n    }\r\n\r\n    /**\r\n    * @dev creator of selling offer can cancel his ERC20 SellingOffer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function CancelERC20TokenSellingOffer(CancelOfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 token = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n        require(offer.creatorAddress == caller, \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\");\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"SELL\")), \r\n            \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\"\r\n        );\r\n        require(\r\n            token.balanceOf(address(this)) >= offer.amount, \r\n            \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\"\r\n        );\r\n        \r\n        token.transfer(caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenSellingOfferCanceled(input.offerId);\r\n    }\r\n\r\n    /**\r\n    * @dev someone can buy token(ERC20) from selling offer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function BuyERC20TokenFromOffer(OfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 offerToken = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        IERC20 exchangeToken = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"SELL\")), \r\n            \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\"\r\n        );\r\n        require(\r\n            offerToken.balanceOf(caller) >= (offer.price * offer.amount),\r\n            \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        require(\r\n            exchangeToken.balanceOf(address(this)) >= offer.amount,\r\n            \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        offerToken.transferFrom(caller, offer.creatorAddress, offer.price * offer.amount); \r\n        exchangeToken.transfer(caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenFromOfferBought(input.offerId);\r\n    }\r\n    /**\r\n    * @dev owner of token can sell token(ERC20) from buying offer\r\n    * @dev exchangeTokenId id of exchange \r\n    * @dev offerId id of offer\r\n    */\r\n    function SellERC20TokenFromOffer(OfferRequest memory input, address caller) external{\r\n        ERC20Offer memory offer = _erc20Offers[input.offerId];\r\n        IERC20 offerToken = IERC20(_erc20Exchanges[input.exchangeId].offerTokenAddress);\r\n        IERC20 exchangeToken = IERC20(_erc20Exchanges[input.exchangeId].exchangeTokenAddress);\r\n\r\n        require(offer.exchangeId == input.exchangeId, \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\");\r\n        require(\r\n            keccak256(abi.encodePacked(offer.offerType)) == keccak256(abi.encodePacked(\"BUY\")), \r\n            \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\"\r\n        );\r\n        require(\r\n            offerToken.balanceOf(address(this)) >= (offer.price * offer.amount),\r\n            \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        require(\r\n            exchangeToken.balanceOf(offer.creatorAddress) >= offer.amount,\r\n            \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\"\r\n        );\r\n\r\n        offerToken.transfer(offer.creatorAddress, offer.price * offer.amount); \r\n        exchangeToken.transferFrom(offer.creatorAddress, caller, offer.amount);\r\n        delete _erc20Offers[input.offerId];\r\n\r\n        emit ERC20TokenFromOfferSold(input.offerId);\r\n    }\r\n}",
  "sourcePath": "/Users/angelsatorresalmenara/Privi-Polygon/privi-exchange/contracts/ERC20TokenExchange.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20TokenExchange.sol",
    "exportedSymbols": {
      "ERC20TokenExchange": [
        5909
      ],
      "IERC20": [
        2071
      ]
    },
    "id": 5910,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4821,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5910,
        "sourceUnit": 2072,
        "src": "67:56:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4823,
          "nodeType": "StructuredDocumentation",
          "src": "127:51:20",
          "text": " @dev Exchange Contract for ERC20 Token"
        },
        "fullyImplemented": true,
        "id": 5909,
        "linearizedBaseContracts": [
          5909
        ],
        "name": "ERC20TokenExchange",
        "nameLocation": "189:18:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20TokenExchange.ERC20Exchange",
            "id": 4836,
            "members": [
              {
                "constant": false,
                "id": 4825,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "314:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "307:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4824,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "307:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4827,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "345:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "337:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4826,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4829,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "378:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "370:28:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4828,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4831,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "417:17:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "409:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4830,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4833,
                "mutability": "mutable",
                "name": "initialAmount",
                "nameLocation": "450:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "445:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4832,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "445:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4835,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "479:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "474:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4834,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Exchange",
            "nameLocation": "282:13:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "275:217:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.ERC20Offer",
            "id": 4849,
            "members": [
              {
                "constant": false,
                "id": 4838,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "592:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "587:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4837,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4840,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "618:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "613:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4839,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4842,
                "mutability": "mutable",
                "name": "offerType",
                "nameLocation": "643:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "636:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4841,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4844,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "671:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "663:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4843,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4846,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "701:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "696:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4845,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4848,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "723:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "718:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4847,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Offer",
            "nameLocation": "565:10:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "558:178:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CreateERC20TokenExchangeRequest",
            "id": 4860,
            "members": [
              {
                "constant": false,
                "id": 4851,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "877:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "870:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4850,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4853,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "908:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "900:28:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4852,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4855,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "947:17:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "939:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4854,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4857,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "980:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "975:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4856,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "975:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4859,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1002:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "997:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4858,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20TokenExchangeRequest",
            "nameLocation": "827:31:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "820:195:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.PlaceERC20TokenOfferRequest",
            "id": 4867,
            "members": [
              {
                "constant": false,
                "id": 4862,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1145:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1140:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4861,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1140:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4864,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1171:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1166:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4863,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4866,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1193:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1188:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4865,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PlaceERC20TokenOfferRequest",
            "nameLocation": "1101:27:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1094:112:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CancelOfferRequest",
            "id": 4872,
            "members": [
              {
                "constant": false,
                "id": 4869,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1320:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4872,
                "src": "1315:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4868,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1315:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4871,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1346:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4872,
                "src": "1341:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4870,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CancelOfferRequest",
            "nameLocation": "1285:18:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1278:83:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.OfferRequest",
            "id": 4877,
            "members": [
              {
                "constant": false,
                "id": 4874,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1467:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4877,
                "src": "1462:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4873,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1462:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4876,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1493:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4877,
                "src": "1488:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4875,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OfferRequest",
            "nameLocation": "1438:12:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1431:77:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4878,
              "nodeType": "StructuredDocumentation",
              "src": "1516:81:20",
              "text": " @dev count variables for ERC20Token exchange and offer mapping"
            },
            "id": 4880,
            "mutability": "mutable",
            "name": "_erc20ExchangeCount",
            "nameLocation": "1617:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1603:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4879,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1603:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4882,
            "mutability": "mutable",
            "name": "_erc20OfferCount",
            "nameLocation": "1657:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1643:30:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4881,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1643:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4883,
              "nodeType": "StructuredDocumentation",
              "src": "1682:75:20",
              "text": " @dev variables for storing ERC20TOken Exchange and Offer"
            },
            "id": 4888,
            "mutability": "mutable",
            "name": "_erc20Exchanges",
            "nameLocation": "1803:15:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1763:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
            },
            "typeName": {
              "id": 4887,
              "keyType": {
                "id": 4884,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1771:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1763:30:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
              },
              "valueType": {
                "id": 4886,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4885,
                  "name": "ERC20Exchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4836,
                  "src": "1779:13:20"
                },
                "referencedDeclaration": 4836,
                "src": "1779:13:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4893,
            "mutability": "mutable",
            "name": "_erc20Offers",
            "nameLocation": "1862:12:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1825:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
            },
            "typeName": {
              "id": 4892,
              "keyType": {
                "id": 4889,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1833:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1825:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
              },
              "valueType": {
                "id": 4891,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4890,
                  "name": "ERC20Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4849,
                  "src": "1841:10:20"
                },
                "referencedDeclaration": 4849,
                "src": "1841:10:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Offer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 4899,
            "name": "ERC20TokenExchangeCreated",
            "nameLocation": "1919:25:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4895,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "1950:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "1945:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4897,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialOfferId",
                  "nameLocation": "1967:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "1962:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4896,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:38:20"
            },
            "src": "1913:70:20"
          },
          {
            "anonymous": false,
            "id": 4903,
            "name": "ERC20TokenBuyingOfferPlaced",
            "nameLocation": "1995:27:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4901,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2028:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "2023:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4900,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2022:14:20"
            },
            "src": "1989:48:20"
          },
          {
            "anonymous": false,
            "id": 4907,
            "name": "ERC20TokenSellingOfferPlaced",
            "nameLocation": "2049:28:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2083:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4907,
                  "src": "2078:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4904,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:14:20"
            },
            "src": "2043:49:20"
          },
          {
            "anonymous": false,
            "id": 4911,
            "name": "ERC20TokenBuyingOfferCanceled",
            "nameLocation": "2104:29:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4909,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2139:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4911,
                  "src": "2134:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4908,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:14:20"
            },
            "src": "2098:50:20"
          },
          {
            "anonymous": false,
            "id": 4915,
            "name": "ERC20TokenSellingOfferCanceled",
            "nameLocation": "2160:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4913,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2196:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "2191:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4912,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:14:20"
            },
            "src": "2154:51:20"
          },
          {
            "anonymous": false,
            "id": 4919,
            "name": "ERC20TokenFromOfferBought",
            "nameLocation": "2217:25:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4917,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2248:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "2243:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4916,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:14:20"
            },
            "src": "2211:46:20"
          },
          {
            "anonymous": false,
            "id": 4923,
            "name": "ERC20TokenFromOfferSold",
            "nameLocation": "2269:23:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4921,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2298:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "2293:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4920,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:14:20"
            },
            "src": "2263:44:20"
          },
          {
            "body": {
              "id": 4935,
              "nodeType": "Block",
              "src": "2379:73:20",
              "statements": [
                {
                  "expression": {
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4927,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2390:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2412:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2390:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4930,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:23:20"
                },
                {
                  "expression": {
                    "id": 4933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4931,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "2424:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2424:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4934,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:20:20"
                }
              ]
            },
            "documentation": {
              "id": 4924,
              "nodeType": "StructuredDocumentation",
              "src": "2315:44:20",
              "text": " @dev Constructor Function"
            },
            "id": 4936,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:2:20"
            },
            "returnParameters": {
              "id": 4926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:20"
            },
            "scope": 5909,
            "src": "2365:87:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4943,
              "nodeType": "Block",
              "src": "2553:45:20",
              "statements": [
                {
                  "expression": {
                    "id": 4941,
                    "name": "_erc20ExchangeCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4880,
                    "src": "2571:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4940,
                  "id": 4942,
                  "nodeType": "Return",
                  "src": "2564:26:20"
                }
              ]
            },
            "functionSelector": "fd6683aa",
            "id": 4944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeCount",
            "nameLocation": "2502:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:20"
            },
            "returnParameters": {
              "id": 4940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4944,
                  "src": "2548:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4938,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:6:20"
            },
            "scope": 5909,
            "src": "2493:105:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4951,
              "nodeType": "Block",
              "src": "2663:42:20",
              "statements": [
                {
                  "expression": {
                    "id": 4949,
                    "name": "_erc20OfferCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4882,
                    "src": "2681:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4948,
                  "id": 4950,
                  "nodeType": "Return",
                  "src": "2674:23:20"
                }
              ]
            },
            "functionSelector": "1eb582da",
            "id": 4952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferCount",
            "nameLocation": "2615:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:2:20"
            },
            "returnParameters": {
              "id": 4948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4952,
                  "src": "2658:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:6:20"
            },
            "scope": 5909,
            "src": "2606:99:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4994,
              "nodeType": "Block",
              "src": "2789:227:20",
              "statements": [
                {
                  "assignments": [
                    4963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4963,
                      "mutability": "mutable",
                      "name": "exchanges",
                      "nameLocation": "2823:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4994,
                      "src": "2800:32:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4961,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4960,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4836,
                            "src": "2800:13:20"
                          },
                          "referencedDeclaration": 4836,
                          "src": "2800:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 4962,
                        "nodeType": "ArrayTypeName",
                        "src": "2800:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4970,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4968,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "2855:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2835:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Exchange memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4965,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4964,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4836,
                            "src": "2839:13:20"
                          },
                          "referencedDeclaration": 4836,
                          "src": "2839:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 4966,
                        "nodeType": "ArrayTypeName",
                        "src": "2839:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      }
                    },
                    "id": 4969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2800:75:20"
                },
                {
                  "body": {
                    "expression": {
                      "id": 4989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 4981,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4963,
                          "src": "2946:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                          }
                        },
                        "id": 4985,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4982,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4972,
                            "src": "2956:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 4983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2958:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2956:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2946:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 4986,
                          "name": "_erc20Exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4888,
                          "src": "2963:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                          }
                        },
                        "id": 4988,
                        "indexExpression": {
                          "id": 4987,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4972,
                          "src": "2979:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2963:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                        }
                      },
                      "src": "2946:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "id": 4990,
                    "nodeType": "ExpressionStatement",
                    "src": "2946:35:20"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4975,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4972,
                      "src": "2902:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 4976,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2907:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4991,
                  "initializationExpression": {
                    "assignments": [
                      4972
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4972,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2895:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 4991,
                        "src": "2890:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4971,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2890:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4974,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 4973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2899:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2890:10:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2928:3:20",
                      "subExpression": {
                        "id": 4978,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4972,
                        "src": "2928:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4980,
                    "nodeType": "ExpressionStatement",
                    "src": "2928:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "2886:95:20"
                },
                {
                  "expression": {
                    "id": 4992,
                    "name": "exchanges",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4963,
                    "src": "2999:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "functionReturnParameters": 4958,
                  "id": 4993,
                  "nodeType": "Return",
                  "src": "2992:16:20"
                }
              ]
            },
            "functionSelector": "1431975b",
            "id": 4995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeAll",
            "nameLocation": "2722:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:20"
            },
            "returnParameters": {
              "id": 4958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4995,
                  "src": "2766:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4955,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4954,
                        "name": "ERC20Exchange",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4836,
                        "src": "2766:13:20"
                      },
                      "referencedDeclaration": 4836,
                      "src": "2766:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      }
                    },
                    "id": 4956,
                    "nodeType": "ArrayTypeName",
                    "src": "2766:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:24:20"
            },
            "scope": 5909,
            "src": "2713:303:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5037,
              "nodeType": "Block",
              "src": "3094:203:20",
              "statements": [
                {
                  "assignments": [
                    5006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5006,
                      "mutability": "mutable",
                      "name": "offers",
                      "nameLocation": "3125:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5037,
                      "src": "3105:26:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5004,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5003,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4849,
                            "src": "3105:10:20"
                          },
                          "referencedDeclaration": 4849,
                          "src": "3105:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 5005,
                        "nodeType": "ArrayTypeName",
                        "src": "3105:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5013,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5011,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "3151:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3134:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Offer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5007,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4849,
                            "src": "3138:10:20"
                          },
                          "referencedDeclaration": 4849,
                          "src": "3138:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 5009,
                        "nodeType": "ArrayTypeName",
                        "src": "3138:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      }
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3105:63:20"
                },
                {
                  "body": {
                    "expression": {
                      "id": 5032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 5024,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5006,
                          "src": "3236:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                          }
                        },
                        "id": 5028,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5025,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5015,
                            "src": "3243:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 5026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3245:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3243:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "3236:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 5029,
                          "name": "_erc20Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4893,
                          "src": "3250:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                          }
                        },
                        "id": 5031,
                        "indexExpression": {
                          "id": 5030,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5015,
                          "src": "3263:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3250:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                        }
                      },
                      "src": "3236:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "id": 5033,
                    "nodeType": "ExpressionStatement",
                    "src": "3236:29:20"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5018,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5015,
                      "src": "3195:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 5019,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "3200:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3195:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5034,
                  "initializationExpression": {
                    "assignments": [
                      5015
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5015,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3188:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 5034,
                        "src": "3183:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5014,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5017,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 5016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3192:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3183:10:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3218:3:20",
                      "subExpression": {
                        "id": 5021,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5015,
                        "src": "3218:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5023,
                    "nodeType": "ExpressionStatement",
                    "src": "3218:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "3179:86:20"
                },
                {
                  "expression": {
                    "id": 5035,
                    "name": "offers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5006,
                    "src": "3283:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5001,
                  "id": 5036,
                  "nodeType": "Return",
                  "src": "3276:13:20"
                }
              ]
            },
            "functionSelector": "28069dfd",
            "id": 5038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferAll",
            "nameLocation": "3033:16:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:20"
            },
            "returnParameters": {
              "id": 5001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "3074:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4998,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4997,
                        "name": "ERC20Offer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4849,
                        "src": "3074:10:20"
                      },
                      "referencedDeclaration": 4849,
                      "src": "3074:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      }
                    },
                    "id": 4999,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:21:20"
            },
            "scope": 5909,
            "src": "3024:273:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5050,
              "nodeType": "Block",
              "src": "3396:54:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5046,
                      "name": "_erc20Exchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4888,
                      "src": "3414:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                      }
                    },
                    "id": 5048,
                    "indexExpression": {
                      "id": 5047,
                      "name": "_exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5040,
                      "src": "3430:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3414:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "functionReturnParameters": 5045,
                  "id": 5049,
                  "nodeType": "Return",
                  "src": "3407:35:20"
                }
              ]
            },
            "functionSelector": "6f2663d4",
            "id": 5051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeById",
            "nameLocation": "3314:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5040,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "3340:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5051,
                  "src": "3335:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5039,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:18:20"
            },
            "returnParameters": {
              "id": 5045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5051,
                  "src": "3375:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                  },
                  "typeName": {
                    "id": 5043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5042,
                      "name": "ERC20Exchange",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4836,
                      "src": "3375:13:20"
                    },
                    "referencedDeclaration": 4836,
                    "src": "3375:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:20"
            },
            "scope": 5909,
            "src": "3305:145:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5063,
              "nodeType": "Block",
              "src": "3540:48:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5059,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "3558:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5061,
                    "indexExpression": {
                      "id": 5060,
                      "name": "_offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5053,
                      "src": "3571:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3558:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "functionReturnParameters": 5058,
                  "id": 5062,
                  "nodeType": "Return",
                  "src": "3551:29:20"
                }
              ]
            },
            "functionSelector": "cddcc539",
            "id": 5064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferById",
            "nameLocation": "3467:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5053,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3490:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5064,
                  "src": "3485:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5052,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:15:20"
            },
            "returnParameters": {
              "id": 5058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5064,
                  "src": "3522:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer"
                  },
                  "typeName": {
                    "id": 5056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5055,
                      "name": "ERC20Offer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4849,
                      "src": "3522:10:20"
                    },
                    "referencedDeclaration": 4849,
                    "src": "3522:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:19:20"
            },
            "scope": 5909,
            "src": "3458:130:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5223,
              "nodeType": "Block",
              "src": "4021:1355:20",
              "statements": [
                {
                  "assignments": [
                    5075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5075,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4039:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4032:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5074,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5073,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "4032:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "4032:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5080,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5077,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5068,
                          "src": "4054:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 5078,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4853,
                        "src": "4054:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5076,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "4047:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5084,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5070,
                              "src": "4116:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5082,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5075,
                              "src": "4100:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "4100:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4100:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5086,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5068,
                            "src": "4127:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 5087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4857,
                          "src": "4127:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4100:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 5089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:68:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        }
                      ],
                      "id": 5081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4092:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:118:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5091,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:118:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5093,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5068,
                            "src": "4229:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 5094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4859,
                          "src": "4229:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4243:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4229:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:79:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4221:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:105:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5099,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:105:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5103,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "4366:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5106,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4382:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4374:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4374:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4374:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5108,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5068,
                          "src": "4389:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 5109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4857,
                        "src": "4389:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5100,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "4347:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "4347:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5111,
                  "nodeType": "ExpressionStatement",
                  "src": "4347:55:20"
                },
                {
                  "assignments": [
                    5115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5115,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "4510:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4489:29:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      },
                      "typeName": {
                        "id": 5114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5113,
                          "name": "ERC20Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4836,
                          "src": "4489:13:20"
                        },
                        "referencedDeclaration": 4836,
                        "src": "4489:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store exchange and initial offer",
                  "id": 5116,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4489:29:20"
                },
                {
                  "expression": {
                    "id": 5122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5117,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4529:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "4529:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5120,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4553:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4851,
                      "src": "4553:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4529:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5123,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:42:20"
                },
                {
                  "expression": {
                    "id": 5128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5124,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4582:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4827,
                      "src": "4582:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5127,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5070,
                      "src": "4608:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4582:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5129,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:32:20"
                },
                {
                  "expression": {
                    "id": 5135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5130,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4625:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4829,
                      "src": "4625:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5133,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4657:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4853,
                      "src": "4657:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4625:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5136,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:58:20"
                },
                {
                  "expression": {
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5137,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4694:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4831,
                      "src": "4694:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5140,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4723:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "4723:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4694:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5143,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:52:20"
                },
                {
                  "expression": {
                    "id": 5149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5144,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4757:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4833,
                      "src": "4757:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5147,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4782:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "4782:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5150,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:37:20"
                },
                {
                  "expression": {
                    "id": 5156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5151,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4805:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "4805:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5154,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4822:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4859,
                      "src": "4822:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4805:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5157,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:28:20"
                },
                {
                  "expression": {
                    "id": 5159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4847:21:20",
                    "subExpression": {
                      "id": 5158,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "4847:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5160,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:21:20"
                },
                {
                  "expression": {
                    "id": 5165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5161,
                        "name": "_erc20Exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4888,
                        "src": "4879:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                        }
                      },
                      "id": 5163,
                      "indexExpression": {
                        "id": 5162,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "4895:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4879:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5164,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5115,
                      "src": "4918:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "src": "4879:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "id": 5166,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:20"
                },
                {
                  "assignments": [
                    5169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5169,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "4957:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4939:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5167,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "4939:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "4939:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5170,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4939:23:20"
                },
                {
                  "expression": {
                    "id": 5175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5171,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "4973:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "4973:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5174,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "4992:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4973:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5176,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:38:20"
                },
                {
                  "expression": {
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5177,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5022:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "5022:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 5180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5040:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "5022:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5182,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:24:20"
                },
                {
                  "expression": {
                    "id": 5187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5183,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5057:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "5057:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5186,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5070,
                      "src": "5080:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5057:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5188,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:29:20"
                },
                {
                  "expression": {
                    "id": 5194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5189,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5097:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "5097:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5192,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "5112:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "5112:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5097:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5195,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:27:20"
                },
                {
                  "expression": {
                    "id": 5201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5196,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5135:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "5135:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5199,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "5149:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "5149:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5135:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5202,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:28:20"
                },
                {
                  "expression": {
                    "id": 5204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5176:18:20",
                    "subExpression": {
                      "id": 5203,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "5176:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5205,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:18:20"
                },
                {
                  "expression": {
                    "id": 5210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5206,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5205:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "5205:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5209,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "5221:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5211,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:32:20"
                },
                {
                  "expression": {
                    "id": 5216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5212,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "5248:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5214,
                      "indexExpression": {
                        "id": 5213,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "5261:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5248:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5215,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "5281:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "5248:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5217,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5219,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "5330:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5220,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "5351:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5218,
                      "name": "ERC20TokenExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4899,
                      "src": "5304:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5222,
                  "nodeType": "EmitStatement",
                  "src": "5299:69:20"
                }
              ]
            },
            "documentation": {
              "id": 5065,
              "nodeType": "StructuredDocumentation",
              "src": "3634:276:20",
              "text": " @dev Owner of token can create Exchange of ERC20\n @dev exchangeTokenAddress address of exchangeToken(ERC20) \n @dev offerTokenAddress address of exchangeToken(ERC20) \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d56aa3b4",
            "id": 5224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateERC20TokenExchange",
            "nameLocation": "3925:24:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5068,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3989:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5224,
                  "src": "3950:44:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                  },
                  "typeName": {
                    "id": 5067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5066,
                      "name": "CreateERC20TokenExchangeRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4860,
                      "src": "3950:31:20"
                    },
                    "referencedDeclaration": 4860,
                    "src": "3950:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5070,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4004:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5224,
                  "src": "3996:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3949:62:20"
            },
            "returnParameters": {
              "id": 5072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4021:0:20"
            },
            "scope": 5909,
            "src": "3916:1460:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5339,
              "nodeType": "Block",
              "src": "5697:957:20",
              "statements": [
                {
                  "assignments": [
                    5235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5235,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5715:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5339,
                      "src": "5708:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5233,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "5708:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "5708:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5243,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5237,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "5730:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5240,
                          "indexExpression": {
                            "expression": {
                              "id": 5238,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "5746:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 5239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4862,
                            "src": "5746:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5730:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "5730:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5236,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "5723:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5247,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5230,
                              "src": "5831:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5245,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5235,
                              "src": "5815:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "5815:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5249,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5228,
                                  "src": "5843:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 5250,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4866,
                                "src": "5843:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5251,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5228,
                                  "src": "5857:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 5252,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4864,
                                "src": "5857:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5843:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5254,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5842:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5815:55:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5793:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5793:177:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5258,
                  "nodeType": "ExpressionStatement",
                  "src": "5793:177:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5260,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "5989:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "5989:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6003:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5989:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6006:81:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5981:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5981:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5266,
                  "nodeType": "ExpressionStatement",
                  "src": "5981:107:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5270,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5230,
                        "src": "6120:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5273,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6136:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5275,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "6143:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "6143:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5277,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "6157:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4864,
                          "src": "6157:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6143:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5267,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5235,
                        "src": "6101:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "6101:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5281,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:69:20"
                },
                {
                  "assignments": [
                    5285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5285,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "6261:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5339,
                      "src": "6243:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5283,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "6243:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "6243:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store buying offer",
                  "id": 5286,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:23:20"
                },
                {
                  "expression": {
                    "id": 5292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5287,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6277:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "6277:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5290,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6296:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4862,
                      "src": "6296:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6277:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5293,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:35:20"
                },
                {
                  "expression": {
                    "id": 5298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5294,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6323:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "6323:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "425559",
                      "id": 5297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6341:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                        "typeString": "literal_string \"BUY\""
                      },
                      "value": "BUY"
                    },
                    "src": "6323:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5299,
                  "nodeType": "ExpressionStatement",
                  "src": "6323:23:20"
                },
                {
                  "expression": {
                    "id": 5304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5300,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6357:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "6357:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5303,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5230,
                      "src": "6380:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6357:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5305,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:29:20"
                },
                {
                  "expression": {
                    "id": 5311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5306,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6397:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "6397:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5309,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6412:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5310,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4864,
                      "src": "6412:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6397:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5312,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:27:20"
                },
                {
                  "expression": {
                    "id": 5318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5313,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6435:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "6435:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5316,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6449:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4866,
                      "src": "6449:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6435:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5319,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:25:20"
                },
                {
                  "expression": {
                    "id": 5321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6473:18:20",
                    "subExpression": {
                      "id": 5320,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "6473:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5322,
                  "nodeType": "ExpressionStatement",
                  "src": "6473:18:20"
                },
                {
                  "expression": {
                    "id": 5327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5323,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6502:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "6502:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5326,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "6518:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6502:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5328,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:32:20"
                },
                {
                  "expression": {
                    "id": 5333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5329,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "6545:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5331,
                      "indexExpression": {
                        "id": 5330,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "6558:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6545:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5332,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5285,
                      "src": "6578:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "6545:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5334,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5336,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "6629:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5335,
                      "name": "ERC20TokenBuyingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4903,
                      "src": "6601:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5338,
                  "nodeType": "EmitStatement",
                  "src": "6596:50:20"
                }
              ]
            },
            "documentation": {
              "id": 5225,
              "nodeType": "StructuredDocumentation",
              "src": "5384:204:20",
              "text": " @dev someone can create buying offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "5f881441",
            "id": 5340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenBuyingOffer",
            "nameLocation": "5603:26:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5228,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "5665:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "5630:40:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 5227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5226,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4867,
                      "src": "5630:27:20"
                    },
                    "referencedDeclaration": 4867,
                    "src": "5630:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5230,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5680:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "5672:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5672:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:58:20"
            },
            "returnParameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:20"
            },
            "scope": 5909,
            "src": "5594:1060:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "6984:935:20",
              "statements": [
                {
                  "assignments": [
                    5351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5351,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7002:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5448,
                      "src": "6995:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5350,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5349,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "6995:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "6995:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5359,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5353,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "7017:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5356,
                          "indexExpression": {
                            "expression": {
                              "id": 5354,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5344,
                              "src": "7033:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 5355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4862,
                            "src": "7033:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7017:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "7017:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5352,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "7010:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6995:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5363,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5346,
                              "src": "7121:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5361,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5351,
                              "src": "7105:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "7105:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7105:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5365,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5344,
                            "src": "7132:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4864,
                          "src": "7132:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7105:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7083:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7083:162:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5370,
                  "nodeType": "ExpressionStatement",
                  "src": "7083:162:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5372,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5344,
                            "src": "7264:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "7264:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7278:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7264:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7256:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:108:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5378,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:108:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5382,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5346,
                        "src": "7396:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5385,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7412:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7404:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7404:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7404:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5387,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5344,
                          "src": "7419:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                          }
                        },
                        "id": 5388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4864,
                        "src": "7419:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5379,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5351,
                        "src": "7377:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "7377:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5390,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:55:20"
                },
                {
                  "assignments": [
                    5394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5394,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "7524:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5448,
                      "src": "7506:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5393,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5392,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "7506:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "7506:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store selling offer",
                  "id": 5395,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7506:23:20"
                },
                {
                  "expression": {
                    "id": 5401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5396,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7540:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "7540:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5399,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7559:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4862,
                      "src": "7559:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7540:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5402,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:35:20"
                },
                {
                  "expression": {
                    "id": 5407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5403,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7586:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "7586:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 5406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7604:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "7586:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5408,
                  "nodeType": "ExpressionStatement",
                  "src": "7586:24:20"
                },
                {
                  "expression": {
                    "id": 5413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5409,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7621:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "7621:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5412,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5346,
                      "src": "7644:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7621:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5414,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:29:20"
                },
                {
                  "expression": {
                    "id": 5420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5415,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7661:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "7661:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5418,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7676:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4864,
                      "src": "7676:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7661:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5421,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:27:20"
                },
                {
                  "expression": {
                    "id": 5427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5422,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7699:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "7699:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5425,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7713:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4866,
                      "src": "7713:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7699:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5428,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:25:20"
                },
                {
                  "expression": {
                    "id": 5430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7737:18:20",
                    "subExpression": {
                      "id": 5429,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "7737:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5431,
                  "nodeType": "ExpressionStatement",
                  "src": "7737:18:20"
                },
                {
                  "expression": {
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5432,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7766:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "7766:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5435,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "7782:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7766:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:32:20"
                },
                {
                  "expression": {
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5438,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "7809:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5440,
                      "indexExpression": {
                        "id": 5439,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "7822:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7809:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5441,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5394,
                      "src": "7842:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "7809:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5443,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5445,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "7894:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5444,
                      "name": "ERC20TokenSellingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4907,
                      "src": "7865:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5447,
                  "nodeType": "EmitStatement",
                  "src": "7860:51:20"
                }
              ]
            },
            "documentation": {
              "id": 5341,
              "nodeType": "StructuredDocumentation",
              "src": "6662:212:20",
              "text": " @dev owner of token can create selling offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d50853e8",
            "id": 5449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenSellingOffer",
            "nameLocation": "6889:27:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5344,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "6952:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "6917:40:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 5343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5342,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4867,
                      "src": "6917:27:20"
                    },
                    "referencedDeclaration": 4867,
                    "src": "6917:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5346,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "6967:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "6959:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6959:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6916:58:20"
            },
            "returnParameters": {
              "id": 5348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6984:0:20"
            },
            "scope": 5909,
            "src": "6880:1039:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5552,
              "nodeType": "Block",
              "src": "8188:1001:20",
              "statements": [
                {
                  "assignments": [
                    5460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5460,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "8217:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5552,
                      "src": "8199:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5458,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "8199:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "8199:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5465,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5461,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "8225:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5464,
                    "indexExpression": {
                      "expression": {
                        "id": 5462,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5453,
                        "src": "8238:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 5463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4871,
                      "src": "8238:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8225:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8199:53:20"
                },
                {
                  "assignments": [
                    5468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5468,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "8270:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5552,
                      "src": "8263:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5467,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5466,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "8263:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "8263:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5476,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5470,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "8285:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5473,
                          "indexExpression": {
                            "expression": {
                              "id": 5471,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5453,
                              "src": "8301:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 5472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4869,
                            "src": "8301:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8285:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5474,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "8285:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5469,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "8278:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8278:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8263:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5478,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "8356:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4844,
                          "src": "8356:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5480,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5455,
                          "src": "8380:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8356:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 5482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8388:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        }
                      ],
                      "id": 5477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8348:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:101:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5484,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:101:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5486,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "8468:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "8468:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5488,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5453,
                            "src": "8488:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 5489,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4869,
                          "src": "8488:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8468:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8506:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8460:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:121:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5493,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:121:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5498,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5460,
                                    "src": "8641:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5499,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "8641:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5496,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8624:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8624:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8624:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5495,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8614:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8614:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 5505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8689:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 5503,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8672:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8672:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8672:23:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5502,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8662:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8662:34:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8614:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 5509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:71:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        }
                      ],
                      "id": 5494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8592:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8592:202:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5511,
                  "nodeType": "ExpressionStatement",
                  "src": "8592:202:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5517,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8853:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8845:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5515,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8845:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8845:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5513,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5468,
                              "src": "8829:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "8829:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5520,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5460,
                                  "src": "8864:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5521,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "8864:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5522,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5460,
                                  "src": "8878:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5523,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "8878:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8864:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5525,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8863:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8829:62:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8906:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8807:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8807:184:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5529,
                  "nodeType": "ExpressionStatement",
                  "src": "8807:184:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5533,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5455,
                        "src": "9027:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5534,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "9035:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5535,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "9035:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5536,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "9049:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5537,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "9049:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9035:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5530,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5468,
                        "src": "9012:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "9012:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5540,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:50:20"
                },
                {
                  "expression": {
                    "id": 5545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9085:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5541,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "9092:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5544,
                      "indexExpression": {
                        "expression": {
                          "id": 5542,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5453,
                          "src": "9105:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "9105:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9092:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5546,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5548,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5453,
                          "src": "9167:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "9167:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5547,
                      "name": "ERC20TokenBuyingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4911,
                      "src": "9137:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9137:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5551,
                  "nodeType": "EmitStatement",
                  "src": "9132:49:20"
                }
              ]
            },
            "documentation": {
              "id": 5450,
              "nodeType": "StructuredDocumentation",
              "src": "7927:161:20",
              "text": " @dev creator of buying offer can cancel his ERC20Token BuyingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "2584fab6",
            "id": 5553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenBuyingOffer",
            "nameLocation": "8103:27:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5453,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "8157:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "8131:31:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 5452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5451,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4872,
                      "src": "8131:18:20"
                    },
                    "referencedDeclaration": 4872,
                    "src": "8131:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5455,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "8172:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "8164:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:49:20"
            },
            "returnParameters": {
              "id": 5457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:20"
            },
            "scope": 5909,
            "src": "8094:1095:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5649,
              "nodeType": "Block",
              "src": "9456:968:20",
              "statements": [
                {
                  "assignments": [
                    5564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5564,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "9485:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5649,
                      "src": "9467:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5563,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5562,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "9467:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "9467:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5569,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5565,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "9493:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5568,
                    "indexExpression": {
                      "expression": {
                        "id": 5566,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5557,
                        "src": "9506:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 5567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4871,
                      "src": "9506:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9493:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9467:53:20"
                },
                {
                  "assignments": [
                    5572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5572,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9538:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5649,
                      "src": "9531:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5570,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "9531:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "9531:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5580,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5574,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "9553:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5577,
                          "indexExpression": {
                            "expression": {
                              "id": 5575,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5557,
                              "src": "9569:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 5576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4869,
                            "src": "9569:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9553:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5578,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "9553:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5573,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "9546:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9531:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5582,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "9627:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4844,
                          "src": "9627:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5584,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5559,
                          "src": "9651:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9627:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 5586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9659:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        }
                      ],
                      "id": 5581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9619:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9619:102:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5588,
                  "nodeType": "ExpressionStatement",
                  "src": "9619:102:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5590,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "9740:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5591,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "9740:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5592,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5557,
                            "src": "9760:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 5593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4869,
                          "src": "9760:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9740:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:75:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9732:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:122:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5597,
                  "nodeType": "ExpressionStatement",
                  "src": "9732:122:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5602,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5564,
                                    "src": "9914:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "9914:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5600,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9897:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9897:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9897:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5599,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9887:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 5609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9962:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 5607,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9945:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9945:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9945:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5606,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9935:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9935:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9887:83:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 5613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9986:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        }
                      ],
                      "id": 5598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9865:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:205:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5615,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:205:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5621,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "10127:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10119:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5619,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10119:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5617,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5572,
                              "src": "10103:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "10103:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10103:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5624,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "10137:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "10137:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10103:46:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10165:75:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:170:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5629,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:170:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5633,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5559,
                        "src": "10287:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5634,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "10295:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5635,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "10295:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5630,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5572,
                        "src": "10272:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "10272:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5637,
                  "nodeType": "ExpressionStatement",
                  "src": "10272:36:20"
                },
                {
                  "expression": {
                    "id": 5642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10319:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5638,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "10326:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5641,
                      "indexExpression": {
                        "expression": {
                          "id": 5639,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5557,
                          "src": "10339:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "10339:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10326:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5643,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5645,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5557,
                          "src": "10402:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "10402:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5644,
                      "name": "ERC20TokenSellingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4915,
                      "src": "10371:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10371:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5648,
                  "nodeType": "EmitStatement",
                  "src": "10366:50:20"
                }
              ]
            },
            "documentation": {
              "id": 5554,
              "nodeType": "StructuredDocumentation",
              "src": "9197:158:20",
              "text": " @dev creator of selling offer can cancel his ERC20 SellingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "5415b227",
            "id": 5650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenSellingOffer",
            "nameLocation": "9370:28:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5557,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "9425:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5650,
                  "src": "9399:31:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 5556,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5555,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4872,
                      "src": "9399:18:20"
                    },
                    "referencedDeclaration": 4872,
                    "src": "9399:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5559,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "9440:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5650,
                  "src": "9432:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9398:49:20"
            },
            "returnParameters": {
              "id": 5561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9456:0:20"
            },
            "scope": 5909,
            "src": "9361:1063:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5777,
              "nodeType": "Block",
              "src": "10668:1222:20",
              "statements": [
                {
                  "assignments": [
                    5661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5661,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "10697:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10679:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5659,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "10679:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "10679:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5666,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5662,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "10705:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5665,
                    "indexExpression": {
                      "expression": {
                        "id": 5663,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5654,
                        "src": "10718:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 5664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4876,
                      "src": "10718:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10705:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:53:20"
                },
                {
                  "assignments": [
                    5669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5669,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "10750:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10743:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5668,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5667,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "10743:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "10743:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5677,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5671,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "10770:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5674,
                          "indexExpression": {
                            "expression": {
                              "id": 5672,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5654,
                              "src": "10786:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "10786:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10770:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "10770:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5670,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "10763:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10763:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:79:20"
                },
                {
                  "assignments": [
                    5680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5680,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "10840:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10833:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5679,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5678,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "10833:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "10833:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5688,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5682,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "10863:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5685,
                          "indexExpression": {
                            "expression": {
                              "id": 5683,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5654,
                              "src": "10879:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "10879:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10863:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "10863:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5681,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "10856:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10833:85:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5690,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "10939:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "10939:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5692,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5654,
                            "src": "10959:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 5693,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4874,
                          "src": "10959:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10939:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10977:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10931:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10931:116:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5697,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:116:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5702,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5661,
                                    "src": "11107:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5703,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "11107:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5700,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11090:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11090:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11090:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5699,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11080:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11080:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 5709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11155:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 5707,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11138:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11138:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11138:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5706,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11128:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11128:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11080:83:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 5713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        }
                      ],
                      "id": 5698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11058:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:199:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5715,
                  "nodeType": "ExpressionStatement",
                  "src": "11058:199:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5719,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5656,
                              "src": "11311:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5717,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5669,
                              "src": "11290:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "11290:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11290:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5721,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5661,
                                  "src": "11323:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5722,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "11323:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5723,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5661,
                                  "src": "11337:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5724,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "11337:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11323:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5726,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11322:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11290:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11365:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11268:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11268:177:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5730,
                  "nodeType": "ExpressionStatement",
                  "src": "11268:177:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5736,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "11512:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11504:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5734,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11504:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11504:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5732,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5680,
                              "src": "11480:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "11480:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11480:38:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5739,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11522:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5740,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "11522:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11480:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11549:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11458:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11458:171:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5744,
                  "nodeType": "ExpressionStatement",
                  "src": "11458:171:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5748,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5656,
                        "src": "11666:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5749,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5661,
                          "src": "11674:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "11674:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5751,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11696:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "11696:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5753,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11710:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5754,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "11710:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11696:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5745,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5669,
                        "src": "11642:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "11642:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5757,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5761,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5656,
                        "src": "11758:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5762,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5661,
                          "src": "11766:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5763,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "11766:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5758,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5680,
                        "src": "11735:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "11735:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11735:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5765,
                  "nodeType": "ExpressionStatement",
                  "src": "11735:44:20"
                },
                {
                  "expression": {
                    "id": 5770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11790:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5766,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "11797:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5769,
                      "indexExpression": {
                        "expression": {
                          "id": 5767,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5654,
                          "src": "11810:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5768,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "11810:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11797:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5771,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5773,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5654,
                          "src": "11868:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "11868:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5772,
                      "name": "ERC20TokenFromOfferBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4919,
                      "src": "11842:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5776,
                  "nodeType": "EmitStatement",
                  "src": "11837:45:20"
                }
              ]
            },
            "documentation": {
              "id": 5651,
              "nodeType": "StructuredDocumentation",
              "src": "10432:147:20",
              "text": " @dev someone can buy token(ERC20) from selling offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "969de53b",
            "id": 5778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyERC20TokenFromOffer",
            "nameLocation": "10594:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5654,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "10637:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "10617:25:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 5653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5652,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4877,
                      "src": "10617:12:20"
                    },
                    "referencedDeclaration": 4877,
                    "src": "10617:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$4877_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5656,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "10652:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "10644:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10644:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10616:43:20"
            },
            "returnParameters": {
              "id": 5658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10668:0:20"
            },
            "scope": 5909,
            "src": "10585:1305:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5907,
              "nodeType": "Block",
              "src": "12140:1250:20",
              "statements": [
                {
                  "assignments": [
                    5789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5789,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "12169:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12151:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5788,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5787,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "12151:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "12151:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5794,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5790,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "12177:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5793,
                    "indexExpression": {
                      "expression": {
                        "id": 5791,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5782,
                        "src": "12190:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 5792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4876,
                      "src": "12190:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12177:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12151:53:20"
                },
                {
                  "assignments": [
                    5797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5797,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "12222:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12215:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5796,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5795,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "12215:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "12215:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5805,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5799,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "12242:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5802,
                          "indexExpression": {
                            "expression": {
                              "id": 5800,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5782,
                              "src": "12258:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5801,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "12258:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12242:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "12242:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5798,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "12235:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12235:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12215:79:20"
                },
                {
                  "assignments": [
                    5808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5808,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "12312:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12305:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5806,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "12305:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "12305:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5816,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5810,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "12335:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5813,
                          "indexExpression": {
                            "expression": {
                              "id": 5811,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5782,
                              "src": "12351:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "12351:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12335:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "12335:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5809,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "12328:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12328:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:85:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5818,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "12411:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5819,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "12411:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5820,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5782,
                            "src": "12431:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 5821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4874,
                          "src": "12431:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12411:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12403:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12403:117:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5825,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:117:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5830,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5789,
                                    "src": "12580:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5831,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "12580:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5828,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12563:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12563:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12563:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5827,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12553:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12553:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 5837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12628:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 5835,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12611:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12611:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12611:23:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5834,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12601:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12601:34:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12553:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 5841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12651:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        }
                      ],
                      "id": 5826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12531:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12531:198:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5843,
                  "nodeType": "ExpressionStatement",
                  "src": "12531:198:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5849,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "12791:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12783:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5847,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12783:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12783:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5845,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5797,
                              "src": "12762:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "12762:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12762:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5852,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5789,
                                  "src": "12802:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5853,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "12802:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5854,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5789,
                                  "src": "12816:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5855,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "12816:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12802:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5857,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12801:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12762:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12844:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12740:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12740:185:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5861,
                  "nodeType": "ExpressionStatement",
                  "src": "12740:185:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5865,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5789,
                                "src": "12984:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                  "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                }
                              },
                              "id": 5866,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creatorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4844,
                              "src": "12984:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5863,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5808,
                              "src": "12960:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "12960:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12960:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5868,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13009:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "13009:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12960:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13036:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12938:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12938:179:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5873,
                  "nodeType": "ExpressionStatement",
                  "src": "12938:179:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5877,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13150:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5878,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "13150:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5879,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13172:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "13172:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5881,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13186:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5882,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "13186:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13172:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5874,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5797,
                        "src": "13130:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "13130:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13130:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5885,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:69:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5889,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13238:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "13238:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5891,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5784,
                        "src": "13260:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5892,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13268:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5893,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "13268:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5886,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5808,
                        "src": "13211:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "13211:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5895,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:70:20"
                },
                {
                  "expression": {
                    "id": 5900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "13292:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5896,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "13299:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5899,
                      "indexExpression": {
                        "expression": {
                          "id": 5897,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5782,
                          "src": "13312:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "13312:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13299:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5901,
                  "nodeType": "ExpressionStatement",
                  "src": "13292:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5903,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5782,
                          "src": "13368:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "13368:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5902,
                      "name": "ERC20TokenFromOfferSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4923,
                      "src": "13344:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13344:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5906,
                  "nodeType": "EmitStatement",
                  "src": "13339:43:20"
                }
              ]
            },
            "documentation": {
              "id": 5779,
              "nodeType": "StructuredDocumentation",
              "src": "11896:154:20",
              "text": " @dev owner of token can sell token(ERC20) from buying offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "e9851111",
            "id": 5908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SellERC20TokenFromOffer",
            "nameLocation": "12065:23:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5782,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "12109:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "12089:25:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 5781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5780,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4877,
                      "src": "12089:12:20"
                    },
                    "referencedDeclaration": 4877,
                    "src": "12089:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$4877_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5784,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12124:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "12116:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12116:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12088:43:20"
            },
            "returnParameters": {
              "id": 5786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12140:0:20"
            },
            "scope": 5909,
            "src": "12056:1334:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5910,
        "src": "180:13213:20",
        "usedErrors": []
      }
    ],
    "src": "42:13351:20"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ERC20TokenExchange.sol",
    "exportedSymbols": {
      "ERC20TokenExchange": [
        5909
      ],
      "IERC20": [
        2071
      ]
    },
    "id": 5910,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4821,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5910,
        "sourceUnit": 2072,
        "src": "67:56:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4823,
          "nodeType": "StructuredDocumentation",
          "src": "127:51:20",
          "text": " @dev Exchange Contract for ERC20 Token"
        },
        "fullyImplemented": true,
        "id": 5909,
        "linearizedBaseContracts": [
          5909
        ],
        "name": "ERC20TokenExchange",
        "nameLocation": "189:18:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20TokenExchange.ERC20Exchange",
            "id": 4836,
            "members": [
              {
                "constant": false,
                "id": 4825,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "314:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "307:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4824,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "307:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4827,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "345:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "337:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4826,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4829,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "378:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "370:28:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4828,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4831,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "417:17:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "409:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4830,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4833,
                "mutability": "mutable",
                "name": "initialAmount",
                "nameLocation": "450:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "445:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4832,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "445:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4835,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "479:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4836,
                "src": "474:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4834,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Exchange",
            "nameLocation": "282:13:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "275:217:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.ERC20Offer",
            "id": 4849,
            "members": [
              {
                "constant": false,
                "id": 4838,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "592:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "587:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4837,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4840,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "618:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "613:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4839,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4842,
                "mutability": "mutable",
                "name": "offerType",
                "nameLocation": "643:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "636:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4841,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4844,
                "mutability": "mutable",
                "name": "creatorAddress",
                "nameLocation": "671:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "663:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4843,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4846,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "701:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "696:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4845,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4848,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "723:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4849,
                "src": "718:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4847,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Offer",
            "nameLocation": "565:10:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "558:178:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CreateERC20TokenExchangeRequest",
            "id": 4860,
            "members": [
              {
                "constant": false,
                "id": 4851,
                "mutability": "mutable",
                "name": "exchangeName",
                "nameLocation": "877:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "870:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4850,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4853,
                "mutability": "mutable",
                "name": "exchangeTokenAddress",
                "nameLocation": "908:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "900:28:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4852,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4855,
                "mutability": "mutable",
                "name": "offerTokenAddress",
                "nameLocation": "947:17:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "939:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4854,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4857,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "980:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "975:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4856,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "975:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4859,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1002:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4860,
                "src": "997:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4858,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20TokenExchangeRequest",
            "nameLocation": "827:31:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "820:195:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.PlaceERC20TokenOfferRequest",
            "id": 4867,
            "members": [
              {
                "constant": false,
                "id": 4862,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1145:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1140:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4861,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1140:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4864,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1171:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1166:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4863,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4866,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1193:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4867,
                "src": "1188:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4865,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PlaceERC20TokenOfferRequest",
            "nameLocation": "1101:27:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1094:112:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.CancelOfferRequest",
            "id": 4872,
            "members": [
              {
                "constant": false,
                "id": 4869,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1320:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4872,
                "src": "1315:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4868,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1315:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4871,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1346:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4872,
                "src": "1341:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4870,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CancelOfferRequest",
            "nameLocation": "1285:18:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1278:83:20",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20TokenExchange.OfferRequest",
            "id": 4877,
            "members": [
              {
                "constant": false,
                "id": 4874,
                "mutability": "mutable",
                "name": "exchangeId",
                "nameLocation": "1467:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4877,
                "src": "1462:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4873,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1462:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4876,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "1493:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4877,
                "src": "1488:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4875,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OfferRequest",
            "nameLocation": "1438:12:20",
            "nodeType": "StructDefinition",
            "scope": 5909,
            "src": "1431:77:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4878,
              "nodeType": "StructuredDocumentation",
              "src": "1516:81:20",
              "text": " @dev count variables for ERC20Token exchange and offer mapping"
            },
            "id": 4880,
            "mutability": "mutable",
            "name": "_erc20ExchangeCount",
            "nameLocation": "1617:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1603:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4879,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1603:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4882,
            "mutability": "mutable",
            "name": "_erc20OfferCount",
            "nameLocation": "1657:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1643:30:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4881,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1643:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4883,
              "nodeType": "StructuredDocumentation",
              "src": "1682:75:20",
              "text": " @dev variables for storing ERC20TOken Exchange and Offer"
            },
            "id": 4888,
            "mutability": "mutable",
            "name": "_erc20Exchanges",
            "nameLocation": "1803:15:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1763:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
            },
            "typeName": {
              "id": 4887,
              "keyType": {
                "id": 4884,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1771:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1763:30:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange)"
              },
              "valueType": {
                "id": 4886,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4885,
                  "name": "ERC20Exchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4836,
                  "src": "1779:13:20"
                },
                "referencedDeclaration": 4836,
                "src": "1779:13:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4893,
            "mutability": "mutable",
            "name": "_erc20Offers",
            "nameLocation": "1862:12:20",
            "nodeType": "VariableDeclaration",
            "scope": 5909,
            "src": "1825:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
            },
            "typeName": {
              "id": 4892,
              "keyType": {
                "id": 4889,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1833:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1825:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer)"
              },
              "valueType": {
                "id": 4891,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4890,
                  "name": "ERC20Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4849,
                  "src": "1841:10:20"
                },
                "referencedDeclaration": 4849,
                "src": "1841:10:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                  "typeString": "struct ERC20TokenExchange.ERC20Offer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 4899,
            "name": "ERC20TokenExchangeCreated",
            "nameLocation": "1919:25:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4895,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "1950:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "1945:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4897,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialOfferId",
                  "nameLocation": "1967:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "1962:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4896,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:38:20"
            },
            "src": "1913:70:20"
          },
          {
            "anonymous": false,
            "id": 4903,
            "name": "ERC20TokenBuyingOfferPlaced",
            "nameLocation": "1995:27:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4901,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2028:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "2023:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4900,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2022:14:20"
            },
            "src": "1989:48:20"
          },
          {
            "anonymous": false,
            "id": 4907,
            "name": "ERC20TokenSellingOfferPlaced",
            "nameLocation": "2049:28:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2083:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4907,
                  "src": "2078:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4904,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:14:20"
            },
            "src": "2043:49:20"
          },
          {
            "anonymous": false,
            "id": 4911,
            "name": "ERC20TokenBuyingOfferCanceled",
            "nameLocation": "2104:29:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4909,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2139:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4911,
                  "src": "2134:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4908,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:14:20"
            },
            "src": "2098:50:20"
          },
          {
            "anonymous": false,
            "id": 4915,
            "name": "ERC20TokenSellingOfferCanceled",
            "nameLocation": "2160:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4913,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2196:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "2191:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4912,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:14:20"
            },
            "src": "2154:51:20"
          },
          {
            "anonymous": false,
            "id": 4919,
            "name": "ERC20TokenFromOfferBought",
            "nameLocation": "2217:25:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4917,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2248:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "2243:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4916,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:14:20"
            },
            "src": "2211:46:20"
          },
          {
            "anonymous": false,
            "id": 4923,
            "name": "ERC20TokenFromOfferSold",
            "nameLocation": "2269:23:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4921,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2298:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "2293:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4920,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:14:20"
            },
            "src": "2263:44:20"
          },
          {
            "body": {
              "id": 4935,
              "nodeType": "Block",
              "src": "2379:73:20",
              "statements": [
                {
                  "expression": {
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4927,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2390:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2412:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2390:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4930,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:23:20"
                },
                {
                  "expression": {
                    "id": 4933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4931,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "2424:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2424:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4934,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:20:20"
                }
              ]
            },
            "documentation": {
              "id": 4924,
              "nodeType": "StructuredDocumentation",
              "src": "2315:44:20",
              "text": " @dev Constructor Function"
            },
            "id": 4936,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:2:20"
            },
            "returnParameters": {
              "id": 4926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:20"
            },
            "scope": 5909,
            "src": "2365:87:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4943,
              "nodeType": "Block",
              "src": "2553:45:20",
              "statements": [
                {
                  "expression": {
                    "id": 4941,
                    "name": "_erc20ExchangeCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4880,
                    "src": "2571:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4940,
                  "id": 4942,
                  "nodeType": "Return",
                  "src": "2564:26:20"
                }
              ]
            },
            "functionSelector": "fd6683aa",
            "id": 4944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeCount",
            "nameLocation": "2502:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:20"
            },
            "returnParameters": {
              "id": 4940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4944,
                  "src": "2548:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4938,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:6:20"
            },
            "scope": 5909,
            "src": "2493:105:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4951,
              "nodeType": "Block",
              "src": "2663:42:20",
              "statements": [
                {
                  "expression": {
                    "id": 4949,
                    "name": "_erc20OfferCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4882,
                    "src": "2681:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4948,
                  "id": 4950,
                  "nodeType": "Return",
                  "src": "2674:23:20"
                }
              ]
            },
            "functionSelector": "1eb582da",
            "id": 4952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferCount",
            "nameLocation": "2615:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:2:20"
            },
            "returnParameters": {
              "id": 4948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4952,
                  "src": "2658:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:6:20"
            },
            "scope": 5909,
            "src": "2606:99:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4994,
              "nodeType": "Block",
              "src": "2789:227:20",
              "statements": [
                {
                  "assignments": [
                    4963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4963,
                      "mutability": "mutable",
                      "name": "exchanges",
                      "nameLocation": "2823:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4994,
                      "src": "2800:32:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4961,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4960,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4836,
                            "src": "2800:13:20"
                          },
                          "referencedDeclaration": 4836,
                          "src": "2800:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 4962,
                        "nodeType": "ArrayTypeName",
                        "src": "2800:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4970,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4968,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "2855:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2835:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Exchange memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4965,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4964,
                            "name": "ERC20Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4836,
                            "src": "2839:13:20"
                          },
                          "referencedDeclaration": 4836,
                          "src": "2839:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                          }
                        },
                        "id": 4966,
                        "nodeType": "ArrayTypeName",
                        "src": "2839:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                        }
                      }
                    },
                    "id": 4969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2800:75:20"
                },
                {
                  "body": {
                    "expression": {
                      "id": 4989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 4981,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4963,
                          "src": "2946:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                          }
                        },
                        "id": 4985,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4982,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4972,
                            "src": "2956:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 4983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2958:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2956:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2946:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 4986,
                          "name": "_erc20Exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4888,
                          "src": "2963:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                          }
                        },
                        "id": 4988,
                        "indexExpression": {
                          "id": 4987,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4972,
                          "src": "2979:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2963:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                        }
                      },
                      "src": "2946:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "id": 4990,
                    "nodeType": "ExpressionStatement",
                    "src": "2946:35:20"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4975,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4972,
                      "src": "2902:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 4976,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2907:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4991,
                  "initializationExpression": {
                    "assignments": [
                      4972
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4972,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2895:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 4991,
                        "src": "2890:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4971,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2890:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4974,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 4973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2899:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2890:10:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2928:3:20",
                      "subExpression": {
                        "id": 4978,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4972,
                        "src": "2928:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4980,
                    "nodeType": "ExpressionStatement",
                    "src": "2928:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "2886:95:20"
                },
                {
                  "expression": {
                    "id": 4992,
                    "name": "exchanges",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4963,
                    "src": "2999:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange memory[] memory"
                    }
                  },
                  "functionReturnParameters": 4958,
                  "id": 4993,
                  "nodeType": "Return",
                  "src": "2992:16:20"
                }
              ]
            },
            "functionSelector": "1431975b",
            "id": 4995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeAll",
            "nameLocation": "2722:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:20"
            },
            "returnParameters": {
              "id": 4958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4995,
                  "src": "2766:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4955,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4954,
                        "name": "ERC20Exchange",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4836,
                        "src": "2766:13:20"
                      },
                      "referencedDeclaration": 4836,
                      "src": "2766:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      }
                    },
                    "id": 4956,
                    "nodeType": "ArrayTypeName",
                    "src": "2766:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Exchange_$4836_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:24:20"
            },
            "scope": 5909,
            "src": "2713:303:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5037,
              "nodeType": "Block",
              "src": "3094:203:20",
              "statements": [
                {
                  "assignments": [
                    5006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5006,
                      "mutability": "mutable",
                      "name": "offers",
                      "nameLocation": "3125:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5037,
                      "src": "3105:26:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5004,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5003,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4849,
                            "src": "3105:10:20"
                          },
                          "referencedDeclaration": 4849,
                          "src": "3105:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 5005,
                        "nodeType": "ArrayTypeName",
                        "src": "3105:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5013,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5011,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "3151:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3134:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct ERC20TokenExchange.ERC20Offer memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5007,
                            "name": "ERC20Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4849,
                            "src": "3138:10:20"
                          },
                          "referencedDeclaration": 4849,
                          "src": "3138:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer"
                          }
                        },
                        "id": 5009,
                        "nodeType": "ArrayTypeName",
                        "src": "3138:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                        }
                      }
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3105:63:20"
                },
                {
                  "body": {
                    "expression": {
                      "id": 5032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 5024,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5006,
                          "src": "3236:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                          }
                        },
                        "id": 5028,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5025,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5015,
                            "src": "3243:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 5026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3245:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3243:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "3236:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 5029,
                          "name": "_erc20Offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4893,
                          "src": "3250:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                          }
                        },
                        "id": 5031,
                        "indexExpression": {
                          "id": 5030,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5015,
                          "src": "3263:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3250:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                        }
                      },
                      "src": "3236:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "id": 5033,
                    "nodeType": "ExpressionStatement",
                    "src": "3236:29:20"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5018,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5015,
                      "src": "3195:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 5019,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "3200:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3195:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5034,
                  "initializationExpression": {
                    "assignments": [
                      5015
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5015,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3188:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 5034,
                        "src": "3183:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5014,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5017,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 5016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3192:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3183:10:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3218:3:20",
                      "subExpression": {
                        "id": 5021,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5015,
                        "src": "3218:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5023,
                    "nodeType": "ExpressionStatement",
                    "src": "3218:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "3179:86:20"
                },
                {
                  "expression": {
                    "id": 5035,
                    "name": "offers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5006,
                    "src": "3283:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5001,
                  "id": 5036,
                  "nodeType": "Return",
                  "src": "3276:13:20"
                }
              ]
            },
            "functionSelector": "28069dfd",
            "id": 5038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferAll",
            "nameLocation": "3033:16:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:20"
            },
            "returnParameters": {
              "id": 5001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "3074:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4998,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4997,
                        "name": "ERC20Offer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4849,
                        "src": "3074:10:20"
                      },
                      "referencedDeclaration": 4849,
                      "src": "3074:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      }
                    },
                    "id": 4999,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ERC20Offer_$4849_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:21:20"
            },
            "scope": 5909,
            "src": "3024:273:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5050,
              "nodeType": "Block",
              "src": "3396:54:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5046,
                      "name": "_erc20Exchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4888,
                      "src": "3414:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                      }
                    },
                    "id": 5048,
                    "indexExpression": {
                      "id": 5047,
                      "name": "_exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5040,
                      "src": "3430:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3414:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "functionReturnParameters": 5045,
                  "id": 5049,
                  "nodeType": "Return",
                  "src": "3407:35:20"
                }
              ]
            },
            "functionSelector": "6f2663d4",
            "id": 5051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20ExchangeById",
            "nameLocation": "3314:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5040,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "3340:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5051,
                  "src": "3335:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5039,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:18:20"
            },
            "returnParameters": {
              "id": 5045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5051,
                  "src": "3375:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                  },
                  "typeName": {
                    "id": 5043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5042,
                      "name": "ERC20Exchange",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4836,
                      "src": "3375:13:20"
                    },
                    "referencedDeclaration": 4836,
                    "src": "3375:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:22:20"
            },
            "scope": 5909,
            "src": "3305:145:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5063,
              "nodeType": "Block",
              "src": "3540:48:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5059,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "3558:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5061,
                    "indexExpression": {
                      "id": 5060,
                      "name": "_offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5053,
                      "src": "3571:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3558:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "functionReturnParameters": 5058,
                  "id": 5062,
                  "nodeType": "Return",
                  "src": "3551:29:20"
                }
              ]
            },
            "functionSelector": "cddcc539",
            "id": 5064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20OfferById",
            "nameLocation": "3467:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5053,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3490:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5064,
                  "src": "3485:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5052,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:15:20"
            },
            "returnParameters": {
              "id": 5058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5064,
                  "src": "3522:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.ERC20Offer"
                  },
                  "typeName": {
                    "id": 5056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5055,
                      "name": "ERC20Offer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4849,
                      "src": "3522:10:20"
                    },
                    "referencedDeclaration": 4849,
                    "src": "3522:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:19:20"
            },
            "scope": 5909,
            "src": "3458:130:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5223,
              "nodeType": "Block",
              "src": "4021:1355:20",
              "statements": [
                {
                  "assignments": [
                    5075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5075,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4039:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4032:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5074,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5073,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "4032:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "4032:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5080,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5077,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5068,
                          "src": "4054:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 5078,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4853,
                        "src": "4054:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5076,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "4047:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5084,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5070,
                              "src": "4116:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5082,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5075,
                              "src": "4100:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "4100:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4100:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5086,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5068,
                            "src": "4127:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 5087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4857,
                          "src": "4127:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4100:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a20596f75722062616c616e6365206973206e6f7420656e6f756768",
                        "id": 5089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:68:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: Your balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae954a8ef9add18d1ad6a23a392cbd0eacb94351d7aa5e6a4eb38e5943668a5f",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: Your balance is not enough\""
                        }
                      ],
                      "id": 5081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4092:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:118:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5091,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:118:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5093,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5068,
                            "src": "4229:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                            }
                          },
                          "id": 5094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4859,
                          "src": "4229:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4243:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4229:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4372656174654552433230546f6b656e45786368616e67653a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:79:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a6a18b13ca29bd6a8983d733d31fc91cae6fbf49707b63cfff94c8a36235c23",
                          "typeString": "literal_string \"TokenExchange.CreateERC20TokenExchange: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4221:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:105:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5099,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:105:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5103,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "4366:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5106,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4382:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4374:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4374:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4374:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5108,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5068,
                          "src": "4389:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                          }
                        },
                        "id": 5109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4857,
                        "src": "4389:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5100,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "4347:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "4347:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5111,
                  "nodeType": "ExpressionStatement",
                  "src": "4347:55:20"
                },
                {
                  "assignments": [
                    5115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5115,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "4510:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4489:29:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                      },
                      "typeName": {
                        "id": 5114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5113,
                          "name": "ERC20Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4836,
                          "src": "4489:13:20"
                        },
                        "referencedDeclaration": 4836,
                        "src": "4489:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store exchange and initial offer",
                  "id": 5116,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4489:29:20"
                },
                {
                  "expression": {
                    "id": 5122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5117,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4529:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "4529:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5120,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4553:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4851,
                      "src": "4553:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4529:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5123,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:42:20"
                },
                {
                  "expression": {
                    "id": 5128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5124,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4582:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4827,
                      "src": "4582:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5127,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5070,
                      "src": "4608:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4582:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5129,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:32:20"
                },
                {
                  "expression": {
                    "id": 5135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5130,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4625:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4829,
                      "src": "4625:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5133,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4657:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4853,
                      "src": "4657:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4625:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5136,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:58:20"
                },
                {
                  "expression": {
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5137,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4694:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4831,
                      "src": "4694:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5140,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4723:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "4723:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4694:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5143,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:52:20"
                },
                {
                  "expression": {
                    "id": 5149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5144,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4757:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4833,
                      "src": "4757:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5147,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4782:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "4782:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5150,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:37:20"
                },
                {
                  "expression": {
                    "id": 5156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5151,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "4805:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "4805:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5154,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "4822:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4859,
                      "src": "4822:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4805:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5157,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:28:20"
                },
                {
                  "expression": {
                    "id": 5159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4847:21:20",
                    "subExpression": {
                      "id": 5158,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "4847:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5160,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:21:20"
                },
                {
                  "expression": {
                    "id": 5165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5161,
                        "name": "_erc20Exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4888,
                        "src": "4879:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                        }
                      },
                      "id": 5163,
                      "indexExpression": {
                        "id": 5162,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "4895:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4879:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5164,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5115,
                      "src": "4918:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                      }
                    },
                    "src": "4879:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                    }
                  },
                  "id": 5166,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:20"
                },
                {
                  "assignments": [
                    5169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5169,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "4957:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5223,
                      "src": "4939:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5167,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "4939:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "4939:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5170,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4939:23:20"
                },
                {
                  "expression": {
                    "id": 5175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5171,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "4973:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "4973:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5174,
                      "name": "_erc20ExchangeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "4992:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4973:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5176,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:38:20"
                },
                {
                  "expression": {
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5177,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5022:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "5022:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 5180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5040:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "5022:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5182,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:24:20"
                },
                {
                  "expression": {
                    "id": 5187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5183,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5057:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "5057:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5186,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5070,
                      "src": "5080:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5057:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5188,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:29:20"
                },
                {
                  "expression": {
                    "id": 5194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5189,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5097:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "5097:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5192,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "5112:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest memory"
                        }
                      },
                      "id": 5193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "5112:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5097:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5195,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:27:20"
                },
                {
                  "expression": {
                    "id": 5201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5196,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5135:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "5135:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5199,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "5149:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Exchange_$4836_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Exchange memory"
                        }
                      },
                      "id": 5200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "5149:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5135:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5202,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:28:20"
                },
                {
                  "expression": {
                    "id": 5204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5176:18:20",
                    "subExpression": {
                      "id": 5203,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "5176:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5205,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:18:20"
                },
                {
                  "expression": {
                    "id": 5210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5206,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "5205:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "5205:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5209,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "5221:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5211,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:32:20"
                },
                {
                  "expression": {
                    "id": 5216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5212,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "5248:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5214,
                      "indexExpression": {
                        "id": 5213,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "5261:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5248:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5215,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5169,
                      "src": "5281:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "5248:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5217,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5219,
                        "name": "_erc20ExchangeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4880,
                        "src": "5330:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5220,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "5351:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5218,
                      "name": "ERC20TokenExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4899,
                      "src": "5304:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5222,
                  "nodeType": "EmitStatement",
                  "src": "5299:69:20"
                }
              ]
            },
            "documentation": {
              "id": 5065,
              "nodeType": "StructuredDocumentation",
              "src": "3634:276:20",
              "text": " @dev Owner of token can create Exchange of ERC20\n @dev exchangeTokenAddress address of exchangeToken(ERC20) \n @dev offerTokenAddress address of exchangeToken(ERC20) \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d56aa3b4",
            "id": 5224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateERC20TokenExchange",
            "nameLocation": "3925:24:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5068,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3989:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5224,
                  "src": "3950:44:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                  },
                  "typeName": {
                    "id": 5067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5066,
                      "name": "CreateERC20TokenExchangeRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4860,
                      "src": "3950:31:20"
                    },
                    "referencedDeclaration": 4860,
                    "src": "3950:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20TokenExchangeRequest_$4860_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CreateERC20TokenExchangeRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5070,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4004:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5224,
                  "src": "3996:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3949:62:20"
            },
            "returnParameters": {
              "id": 5072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4021:0:20"
            },
            "scope": 5909,
            "src": "3916:1460:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5339,
              "nodeType": "Block",
              "src": "5697:957:20",
              "statements": [
                {
                  "assignments": [
                    5235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5235,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5715:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5339,
                      "src": "5708:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5233,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "5708:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "5708:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5243,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5237,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "5730:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5240,
                          "indexExpression": {
                            "expression": {
                              "id": 5238,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "5746:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 5239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4862,
                            "src": "5746:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5730:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "5730:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5236,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "5723:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5247,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5230,
                              "src": "5831:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5245,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5235,
                              "src": "5815:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "5815:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5249,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5228,
                                  "src": "5843:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 5250,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4866,
                                "src": "5843:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5251,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5228,
                                  "src": "5857:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                                  }
                                },
                                "id": 5252,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4864,
                                "src": "5857:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5843:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5254,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5842:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5815:55:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c87043e361d94a42ba13e65be4e62dfab0cf25d1ea3aa25c9a25d174a33b13e",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5793:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5793:177:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5258,
                  "nodeType": "ExpressionStatement",
                  "src": "5793:177:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5260,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "5989:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "5989:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6003:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5989:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e427579696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6006:81:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae4219f4d14d2504e3adb074227cd55420130d38e95a29f479a9b761b70fd569",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenBuyingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5981:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5981:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5266,
                  "nodeType": "ExpressionStatement",
                  "src": "5981:107:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5270,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5230,
                        "src": "6120:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5273,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6136:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5275,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "6143:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "6143:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5277,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5228,
                            "src": "6157:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4864,
                          "src": "6157:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6143:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5267,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5235,
                        "src": "6101:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "6101:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5281,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:69:20"
                },
                {
                  "assignments": [
                    5285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5285,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "6261:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5339,
                      "src": "6243:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5283,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "6243:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "6243:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store buying offer",
                  "id": 5286,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:23:20"
                },
                {
                  "expression": {
                    "id": 5292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5287,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6277:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "6277:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5290,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6296:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4862,
                      "src": "6296:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6277:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5293,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:35:20"
                },
                {
                  "expression": {
                    "id": 5298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5294,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6323:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "6323:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "425559",
                      "id": 5297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6341:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                        "typeString": "literal_string \"BUY\""
                      },
                      "value": "BUY"
                    },
                    "src": "6323:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5299,
                  "nodeType": "ExpressionStatement",
                  "src": "6323:23:20"
                },
                {
                  "expression": {
                    "id": 5304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5300,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6357:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "6357:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5303,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5230,
                      "src": "6380:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6357:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5305,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:29:20"
                },
                {
                  "expression": {
                    "id": 5311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5306,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6397:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "6397:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5309,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6412:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5310,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4864,
                      "src": "6412:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6397:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5312,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:27:20"
                },
                {
                  "expression": {
                    "id": 5318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5313,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6435:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "6435:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5316,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "6449:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4866,
                      "src": "6449:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6435:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5319,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:25:20"
                },
                {
                  "expression": {
                    "id": 5321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6473:18:20",
                    "subExpression": {
                      "id": 5320,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "6473:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5322,
                  "nodeType": "ExpressionStatement",
                  "src": "6473:18:20"
                },
                {
                  "expression": {
                    "id": 5327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5323,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "6502:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "6502:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5326,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "6518:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6502:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5328,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:32:20"
                },
                {
                  "expression": {
                    "id": 5333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5329,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "6545:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5331,
                      "indexExpression": {
                        "id": 5330,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "6558:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6545:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5332,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5285,
                      "src": "6578:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "6545:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5334,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5336,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "6629:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5335,
                      "name": "ERC20TokenBuyingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4903,
                      "src": "6601:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5338,
                  "nodeType": "EmitStatement",
                  "src": "6596:50:20"
                }
              ]
            },
            "documentation": {
              "id": 5225,
              "nodeType": "StructuredDocumentation",
              "src": "5384:204:20",
              "text": " @dev someone can create buying offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "5f881441",
            "id": 5340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenBuyingOffer",
            "nameLocation": "5603:26:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5228,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "5665:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "5630:40:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 5227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5226,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4867,
                      "src": "5630:27:20"
                    },
                    "referencedDeclaration": 4867,
                    "src": "5630:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5230,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5680:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "5672:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5672:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:58:20"
            },
            "returnParameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:20"
            },
            "scope": 5909,
            "src": "5594:1060:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "6984:935:20",
              "statements": [
                {
                  "assignments": [
                    5351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5351,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7002:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5448,
                      "src": "6995:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5350,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5349,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "6995:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "6995:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5359,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5353,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "7017:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5356,
                          "indexExpression": {
                            "expression": {
                              "id": 5354,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5344,
                              "src": "7033:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                              }
                            },
                            "id": 5355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4862,
                            "src": "7033:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7017:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "7017:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5352,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "7010:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6995:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5363,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5346,
                              "src": "7121:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5361,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5351,
                              "src": "7105:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "7105:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7105:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5365,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5344,
                            "src": "7132:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4864,
                          "src": "7132:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7105:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edc5351896e89e77ed782452f3e89b7e9016ed43692207973195b9d565a0427",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7083:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7083:162:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5370,
                  "nodeType": "ExpressionStatement",
                  "src": "7083:162:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5372,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5344,
                            "src": "7264:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                            }
                          },
                          "id": 5373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4866,
                          "src": "7264:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7278:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7264:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e506c6163654552433230546f6b656e53656c6c696e674f666665723a2070726963652063616e2774206265206c6f776572206f7220657175616c20746f207a65726f",
                        "id": 5376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        },
                        "value": "TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e0853ce9d6e105ecfcc38e96ac15a39a5c80ee5771f36d38c5da8fb00cdb57",
                          "typeString": "literal_string \"TokenExchange.PlaceERC20TokenSellingOffer: price can't be lower or equal to zero\""
                        }
                      ],
                      "id": 5371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7256:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:108:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5378,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:108:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5382,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5346,
                        "src": "7396:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5385,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7412:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                              "typeString": "contract ERC20TokenExchange"
                            }
                          ],
                          "id": 5384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7404:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7404:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7404:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5387,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5344,
                          "src": "7419:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                          }
                        },
                        "id": 5388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4864,
                        "src": "7419:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5379,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5351,
                        "src": "7377:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "7377:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5390,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:55:20"
                },
                {
                  "assignments": [
                    5394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5394,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "7524:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5448,
                      "src": "7506:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5393,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5392,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "7506:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "7506:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev store selling offer",
                  "id": 5395,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7506:23:20"
                },
                {
                  "expression": {
                    "id": 5401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5396,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7540:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "7540:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5399,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7559:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4862,
                      "src": "7559:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7540:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5402,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:35:20"
                },
                {
                  "expression": {
                    "id": 5407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5403,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7586:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4842,
                      "src": "7586:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "53454c4c",
                      "id": 5406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7604:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                        "typeString": "literal_string \"SELL\""
                      },
                      "value": "SELL"
                    },
                    "src": "7586:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 5408,
                  "nodeType": "ExpressionStatement",
                  "src": "7586:24:20"
                },
                {
                  "expression": {
                    "id": 5413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5409,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7621:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "7621:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5412,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5346,
                      "src": "7644:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7621:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5414,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:29:20"
                },
                {
                  "expression": {
                    "id": 5420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5415,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7661:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4846,
                      "src": "7661:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5418,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7676:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4864,
                      "src": "7676:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7661:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5421,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:27:20"
                },
                {
                  "expression": {
                    "id": 5427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5422,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7699:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4848,
                      "src": "7699:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5425,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "7713:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest memory"
                        }
                      },
                      "id": 5426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4866,
                      "src": "7713:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7699:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5428,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:25:20"
                },
                {
                  "expression": {
                    "id": 5430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7737:18:20",
                    "subExpression": {
                      "id": 5429,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "7737:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5431,
                  "nodeType": "ExpressionStatement",
                  "src": "7737:18:20"
                },
                {
                  "expression": {
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5432,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "7766:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                        }
                      },
                      "id": 5434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4840,
                      "src": "7766:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5435,
                      "name": "_erc20OfferCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "7782:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7766:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:32:20"
                },
                {
                  "expression": {
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5438,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "7809:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5440,
                      "indexExpression": {
                        "id": 5439,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "7822:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7809:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5441,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5394,
                      "src": "7842:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                      }
                    },
                    "src": "7809:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "id": 5443,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5445,
                        "name": "_erc20OfferCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "7894:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5444,
                      "name": "ERC20TokenSellingOfferPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4907,
                      "src": "7865:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5447,
                  "nodeType": "EmitStatement",
                  "src": "7860:51:20"
                }
              ]
            },
            "documentation": {
              "id": 5341,
              "nodeType": "StructuredDocumentation",
              "src": "6662:212:20",
              "text": " @dev owner of token can create selling offer for ERC20 token exchange\n @dev exchangeTokenId id of exchange \n @dev amount amount of Exchange\n @dev price token price of Exchange"
            },
            "functionSelector": "d50853e8",
            "id": 5449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceERC20TokenSellingOffer",
            "nameLocation": "6889:27:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5344,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "6952:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "6917:40:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                  },
                  "typeName": {
                    "id": 5343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5342,
                      "name": "PlaceERC20TokenOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4867,
                      "src": "6917:27:20"
                    },
                    "referencedDeclaration": 4867,
                    "src": "6917:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlaceERC20TokenOfferRequest_$4867_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.PlaceERC20TokenOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5346,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "6967:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "6959:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6959:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6916:58:20"
            },
            "returnParameters": {
              "id": 5348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6984:0:20"
            },
            "scope": 5909,
            "src": "6880:1039:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5552,
              "nodeType": "Block",
              "src": "8188:1001:20",
              "statements": [
                {
                  "assignments": [
                    5460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5460,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "8217:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5552,
                      "src": "8199:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5458,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "8199:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "8199:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5465,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5461,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "8225:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5464,
                    "indexExpression": {
                      "expression": {
                        "id": 5462,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5453,
                        "src": "8238:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 5463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4871,
                      "src": "8238:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8225:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8199:53:20"
                },
                {
                  "assignments": [
                    5468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5468,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "8270:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5552,
                      "src": "8263:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5467,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5466,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "8263:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "8263:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5476,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5470,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "8285:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5473,
                          "indexExpression": {
                            "expression": {
                              "id": 5471,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5453,
                              "src": "8301:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 5472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4869,
                            "src": "8301:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8285:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5474,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "8285:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5469,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "8278:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8278:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8263:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5478,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "8356:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4844,
                          "src": "8356:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5480,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5455,
                          "src": "8380:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8356:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 5482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8388:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e22ee6e3928d467d524ab4ddfee9b0056d59e1af9342e936349b96e97f4ffd13",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be owner\""
                        }
                      ],
                      "id": 5477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8348:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:101:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5484,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:101:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5486,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "8468:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "8468:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5488,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5453,
                            "src": "8488:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 5489,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4869,
                          "src": "8488:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8468:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8506:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19b51a5808d9cfd7816432b36e469672ae0a904c1207e45548bc8a0a0b6da6da",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8460:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:121:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5493,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:121:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5498,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5460,
                                    "src": "8641:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5499,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "8641:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5496,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8624:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8624:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8624:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5495,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8614:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8614:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 5505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8689:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 5503,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "8672:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8672:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8672:23:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5502,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8662:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8662:34:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8614:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 5509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:71:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30064855c646000bb9e68966e4b6b26c924e80d53e9bba7c3b4a9740f9477264",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: should be the buying offer\""
                        }
                      ],
                      "id": 5494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8592:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8592:202:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5511,
                  "nodeType": "ExpressionStatement",
                  "src": "8592:202:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5517,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8853:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8845:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5515,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8845:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8845:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5513,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5468,
                              "src": "8829:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "8829:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8829:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5520,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5460,
                                  "src": "8864:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5521,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "8864:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5522,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5460,
                                  "src": "8878:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5523,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "8878:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8864:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5525,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8863:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8829:62:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e427579696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8906:74:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35b23e3c990af711cf103309a08ebff00214cfad63035850ad1d5102dd3f4762",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenBuyingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8807:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8807:184:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5529,
                  "nodeType": "ExpressionStatement",
                  "src": "8807:184:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5533,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5455,
                        "src": "9027:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5534,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "9035:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5535,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "9035:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5536,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "9049:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5537,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "9049:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9035:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5530,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5468,
                        "src": "9012:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "9012:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5540,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:50:20"
                },
                {
                  "expression": {
                    "id": 5545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9085:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5541,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "9092:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5544,
                      "indexExpression": {
                        "expression": {
                          "id": 5542,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5453,
                          "src": "9105:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "9105:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9092:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5546,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5548,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5453,
                          "src": "9167:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "9167:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5547,
                      "name": "ERC20TokenBuyingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4911,
                      "src": "9137:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9137:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5551,
                  "nodeType": "EmitStatement",
                  "src": "9132:49:20"
                }
              ]
            },
            "documentation": {
              "id": 5450,
              "nodeType": "StructuredDocumentation",
              "src": "7927:161:20",
              "text": " @dev creator of buying offer can cancel his ERC20Token BuyingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "2584fab6",
            "id": 5553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenBuyingOffer",
            "nameLocation": "8103:27:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5453,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "8157:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "8131:31:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 5452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5451,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4872,
                      "src": "8131:18:20"
                    },
                    "referencedDeclaration": 4872,
                    "src": "8131:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5455,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "8172:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "8164:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:49:20"
            },
            "returnParameters": {
              "id": 5457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:20"
            },
            "scope": 5909,
            "src": "8094:1095:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5649,
              "nodeType": "Block",
              "src": "9456:968:20",
              "statements": [
                {
                  "assignments": [
                    5564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5564,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "9485:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5649,
                      "src": "9467:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5563,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5562,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "9467:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "9467:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5569,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5565,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "9493:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5568,
                    "indexExpression": {
                      "expression": {
                        "id": 5566,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5557,
                        "src": "9506:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                        }
                      },
                      "id": 5567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4871,
                      "src": "9506:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9493:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9467:53:20"
                },
                {
                  "assignments": [
                    5572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5572,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9538:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5649,
                      "src": "9531:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5570,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "9531:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "9531:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5580,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5574,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "9553:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5577,
                          "indexExpression": {
                            "expression": {
                              "id": 5575,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5557,
                              "src": "9569:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                              }
                            },
                            "id": 5576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4869,
                            "src": "9569:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9553:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5578,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "9553:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5573,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "9546:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9531:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5582,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "9627:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creatorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4844,
                          "src": "9627:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5584,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5559,
                          "src": "9651:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9627:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265206f776e6572",
                        "id": 5586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9659:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c29c2cc091733082af2a3095bdd31b2bca948913fe42c4beadb00a44818863ea",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be owner\""
                        }
                      ],
                      "id": 5581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9619:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9619:102:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5588,
                  "nodeType": "ExpressionStatement",
                  "src": "9619:102:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5590,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "9740:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5591,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "9740:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5592,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5557,
                            "src": "9760:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                            }
                          },
                          "id": 5593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4869,
                          "src": "9760:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9740:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9778:75:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c550f6ea97b3344f07d26f163b0e94e707e50bda3495770eaa4ee826aead3663",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9732:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:122:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5597,
                  "nodeType": "ExpressionStatement",
                  "src": "9732:122:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5602,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5564,
                                    "src": "9914:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "9914:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5600,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9897:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9897:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9897:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5599,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9887:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 5609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9962:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 5607,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "9945:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9945:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9945:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5606,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "9935:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9935:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9887:83:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 5613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9986:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_344e31d5fe7f71333d4f4d2ea6faa87013c124b157c9fa20ae9a3ed49a6caf04",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: should be the selling offer\""
                        }
                      ],
                      "id": 5598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9865:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:205:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5615,
                  "nodeType": "ExpressionStatement",
                  "src": "9865:205:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5621,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "10127:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10119:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5619,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10119:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5617,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5572,
                              "src": "10103:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "10103:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10103:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5624,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5564,
                            "src": "10137:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "10137:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10103:46:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e43616e63656c4552433230546f6b656e53656c6c696e674f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10165:75:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d340d543a60c7377bd91db15677c0123d1d6349a8552d80377b4812c1f08e4b5",
                          "typeString": "literal_string \"TokenExchange.CancelERC20TokenSellingOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:170:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5629,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:170:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5633,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5559,
                        "src": "10287:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5634,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "10295:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5635,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "10295:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5630,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5572,
                        "src": "10272:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "10272:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5637,
                  "nodeType": "ExpressionStatement",
                  "src": "10272:36:20"
                },
                {
                  "expression": {
                    "id": 5642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10319:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5638,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "10326:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5641,
                      "indexExpression": {
                        "expression": {
                          "id": 5639,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5557,
                          "src": "10339:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "10339:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10326:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5643,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5645,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5557,
                          "src": "10402:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.CancelOfferRequest memory"
                          }
                        },
                        "id": 5646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4871,
                        "src": "10402:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5644,
                      "name": "ERC20TokenSellingOfferCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4915,
                      "src": "10371:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10371:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5648,
                  "nodeType": "EmitStatement",
                  "src": "10366:50:20"
                }
              ]
            },
            "documentation": {
              "id": 5554,
              "nodeType": "StructuredDocumentation",
              "src": "9197:158:20",
              "text": " @dev creator of selling offer can cancel his ERC20 SellingOffer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "5415b227",
            "id": 5650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CancelERC20TokenSellingOffer",
            "nameLocation": "9370:28:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5557,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "9425:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5650,
                  "src": "9399:31:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                  },
                  "typeName": {
                    "id": 5556,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5555,
                      "name": "CancelOfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4872,
                      "src": "9399:18:20"
                    },
                    "referencedDeclaration": 4872,
                    "src": "9399:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CancelOfferRequest_$4872_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.CancelOfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5559,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "9440:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5650,
                  "src": "9432:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9398:49:20"
            },
            "returnParameters": {
              "id": 5561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9456:0:20"
            },
            "scope": 5909,
            "src": "9361:1063:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5777,
              "nodeType": "Block",
              "src": "10668:1222:20",
              "statements": [
                {
                  "assignments": [
                    5661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5661,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "10697:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10679:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5659,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "10679:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "10679:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5666,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5662,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "10705:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5665,
                    "indexExpression": {
                      "expression": {
                        "id": 5663,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5654,
                        "src": "10718:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 5664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4876,
                      "src": "10718:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10705:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:53:20"
                },
                {
                  "assignments": [
                    5669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5669,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "10750:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10743:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5668,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5667,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "10743:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "10743:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5677,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5671,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "10770:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5674,
                          "indexExpression": {
                            "expression": {
                              "id": 5672,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5654,
                              "src": "10786:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "10786:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10770:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "10770:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5670,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "10763:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10763:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:79:20"
                },
                {
                  "assignments": [
                    5680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5680,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "10840:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5777,
                      "src": "10833:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5679,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5678,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "10833:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "10833:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5688,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5682,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "10863:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5685,
                          "indexExpression": {
                            "expression": {
                              "id": 5683,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5654,
                              "src": "10879:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "10879:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10863:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "10863:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5681,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "10856:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10833:85:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5690,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "10939:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "10939:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5692,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5654,
                            "src": "10959:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 5693,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4874,
                          "src": "10959:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10939:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10977:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_febecd20a860286147bd66ee6e77dd5f69db24a2aca99d6b00cc51df61e040e0",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10931:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10931:116:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5697,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:116:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5702,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5661,
                                    "src": "11107:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5703,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "11107:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5700,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11090:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11090:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11090:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5699,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11080:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11080:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "53454c4c",
                                  "id": 5709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11155:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  },
                                  "value": "SELL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_46e2aa85b4ea4837644e46fe22acb44743da12e349006c0093a61f6bf0967602",
                                    "typeString": "literal_string \"SELL\""
                                  }
                                ],
                                "expression": {
                                  "id": 5707,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "11138:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11138:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11138:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5706,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "11128:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11128:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11080:83:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073656c6c696e67206f66666572",
                        "id": 5713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: should be the selling offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab365fd8d28d5de85258d23f539ddcf9ff426b62d2f0b6e3f6ca17e0d5ba1942",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: should be the selling offer\""
                        }
                      ],
                      "id": 5698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11058:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:199:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5715,
                  "nodeType": "ExpressionStatement",
                  "src": "11058:199:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5719,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5656,
                              "src": "11311:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5717,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5669,
                              "src": "11290:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "11290:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11290:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5721,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5661,
                                  "src": "11323:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5722,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "11323:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5723,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5661,
                                  "src": "11337:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5724,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "11337:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11323:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5726,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11322:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11290:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11365:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11268:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11268:177:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5730,
                  "nodeType": "ExpressionStatement",
                  "src": "11268:177:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5736,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "11512:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11504:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5734,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11504:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11504:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5732,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5680,
                              "src": "11480:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "11480:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11480:38:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5739,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11522:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5740,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "11522:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11480:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e4275794552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11549:69:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b953031b6bb62365e8882db87de58c8dfea16ba698765b7c9ac82bd1f11ee4af",
                          "typeString": "literal_string \"TokenExchange.BuyERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11458:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11458:171:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5744,
                  "nodeType": "ExpressionStatement",
                  "src": "11458:171:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5748,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5656,
                        "src": "11666:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5749,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5661,
                          "src": "11674:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "11674:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5751,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11696:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "11696:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5753,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5661,
                            "src": "11710:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5754,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "11710:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11696:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5745,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5669,
                        "src": "11642:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "11642:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5757,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5761,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5656,
                        "src": "11758:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5762,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5661,
                          "src": "11766:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5763,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "11766:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5758,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5680,
                        "src": "11735:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "11735:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11735:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5765,
                  "nodeType": "ExpressionStatement",
                  "src": "11735:44:20"
                },
                {
                  "expression": {
                    "id": 5770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11790:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5766,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "11797:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5769,
                      "indexExpression": {
                        "expression": {
                          "id": 5767,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5654,
                          "src": "11810:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5768,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "11810:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11797:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5771,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5773,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5654,
                          "src": "11868:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "11868:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5772,
                      "name": "ERC20TokenFromOfferBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4919,
                      "src": "11842:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5776,
                  "nodeType": "EmitStatement",
                  "src": "11837:45:20"
                }
              ]
            },
            "documentation": {
              "id": 5651,
              "nodeType": "StructuredDocumentation",
              "src": "10432:147:20",
              "text": " @dev someone can buy token(ERC20) from selling offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "969de53b",
            "id": 5778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyERC20TokenFromOffer",
            "nameLocation": "10594:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5654,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "10637:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "10617:25:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 5653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5652,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4877,
                      "src": "10617:12:20"
                    },
                    "referencedDeclaration": 4877,
                    "src": "10617:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$4877_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5656,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "10652:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "10644:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10644:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10616:43:20"
            },
            "returnParameters": {
              "id": 5658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10668:0:20"
            },
            "scope": 5909,
            "src": "10585:1305:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5907,
              "nodeType": "Block",
              "src": "12140:1250:20",
              "statements": [
                {
                  "assignments": [
                    5789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5789,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "12169:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12151:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer"
                      },
                      "typeName": {
                        "id": 5788,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5787,
                          "name": "ERC20Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4849,
                          "src": "12151:10:20"
                        },
                        "referencedDeclaration": 4849,
                        "src": "12151:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage_ptr",
                          "typeString": "struct ERC20TokenExchange.ERC20Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5794,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5790,
                      "name": "_erc20Offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "12177:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                        "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                      }
                    },
                    "id": 5793,
                    "indexExpression": {
                      "expression": {
                        "id": 5791,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5782,
                        "src": "12190:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                          "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                        }
                      },
                      "id": 5792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4876,
                      "src": "12190:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12177:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                      "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12151:53:20"
                },
                {
                  "assignments": [
                    5797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5797,
                      "mutability": "mutable",
                      "name": "offerToken",
                      "nameLocation": "12222:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12215:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5796,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5795,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "12215:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "12215:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5805,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5799,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "12242:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5802,
                          "indexExpression": {
                            "expression": {
                              "id": 5800,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5782,
                              "src": "12258:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5801,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "12258:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12242:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4831,
                        "src": "12242:51:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5798,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "12235:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12235:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12215:79:20"
                },
                {
                  "assignments": [
                    5808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5808,
                      "mutability": "mutable",
                      "name": "exchangeToken",
                      "nameLocation": "12312:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 5907,
                      "src": "12305:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2071",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 5807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5806,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2071,
                          "src": "12305:6:20"
                        },
                        "referencedDeclaration": 2071,
                        "src": "12305:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5816,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 5810,
                            "name": "_erc20Exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4888,
                            "src": "12335:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Exchange_$4836_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Exchange storage ref)"
                            }
                          },
                          "id": 5813,
                          "indexExpression": {
                            "expression": {
                              "id": 5811,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5782,
                              "src": "12351:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                                "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                              }
                            },
                            "id": 5812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4874,
                            "src": "12351:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12335:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Exchange_$4836_storage",
                            "typeString": "struct ERC20TokenExchange.ERC20Exchange storage ref"
                          }
                        },
                        "id": 5814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4829,
                        "src": "12335:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5809,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "12328:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12328:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2071",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:85:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5818,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "12411:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5819,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4838,
                          "src": "12411:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5820,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5782,
                            "src": "12431:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                            }
                          },
                          "id": 5821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exchangeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4874,
                          "src": "12431:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12411:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c64206265207468652073616d652065786368616e67654964",
                        "id": 5823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12449:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22c1119af838bf0371e76a74bf95c937a3a96cd74d49a0b3722a83e8d5ed398f",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the same exchangeId\""
                        }
                      ],
                      "id": 5817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12403:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12403:117:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5825,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:117:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5830,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5789,
                                    "src": "12580:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                      "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                    }
                                  },
                                  "id": 5831,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4842,
                                  "src": "12580:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5828,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12563:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12563:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12563:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5827,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12553:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12553:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "425559",
                                  "id": 5837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12628:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  },
                                  "value": "BUY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8e9b148654316179bd45e9ec5f0b575ae8288e79df16d7be748ec9a9bdca8b4c",
                                    "typeString": "literal_string \"BUY\""
                                  }
                                ],
                                "expression": {
                                  "id": 5835,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "12611:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12611:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12611:23:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5834,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "12601:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12601:34:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12553:82:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a2073686f756c642062652074686520627579696e67206f66666572",
                        "id": 5841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12651:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: should be the buying offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd87efe3153ebe5b2a882cc2954c98ce51b8a0429928b0c7f4541386348fac2",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: should be the buying offer\""
                        }
                      ],
                      "id": 5826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12531:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12531:198:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5843,
                  "nodeType": "ExpressionStatement",
                  "src": "12531:198:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5849,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "12791:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20TokenExchange_$5909",
                                    "typeString": "contract ERC20TokenExchange"
                                  }
                                ],
                                "id": 5848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12783:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5847,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12783:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12783:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5845,
                              "name": "offerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5797,
                              "src": "12762:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "12762:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12762:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5852,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5789,
                                  "src": "12802:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5853,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4848,
                                "src": "12802:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 5854,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5789,
                                  "src": "12816:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                    "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                  }
                                },
                                "id": 5855,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4846,
                                "src": "12816:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12802:26:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5857,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12801:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12762:67:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12844:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12740:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12740:185:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5861,
                  "nodeType": "ExpressionStatement",
                  "src": "12740:185:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5865,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5789,
                                "src": "12984:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                                  "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                                }
                              },
                              "id": 5866,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creatorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4844,
                              "src": "12984:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5863,
                              "name": "exchangeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5808,
                              "src": "12960:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2071",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2010,
                            "src": "12960:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12960:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5868,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13009:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "13009:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12960:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e45786368616e67652e53656c6c4552433230546f6b656e46726f6d4f666665723a20796f7520646f6e2774206861766520656e6f7567682062616c616e6365",
                        "id": 5871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13036:70:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        },
                        "value": "TokenExchange.SellERC20TokenFromOffer: you don't have enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a4b85bf89de31433f59678448a3d141158de26dce6dc5ad68e9ea2850bb6677",
                          "typeString": "literal_string \"TokenExchange.SellERC20TokenFromOffer: you don't have enough balance\""
                        }
                      ],
                      "id": 5862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12938:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12938:179:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5873,
                  "nodeType": "ExpressionStatement",
                  "src": "12938:179:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5877,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13150:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5878,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "13150:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5879,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13172:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4848,
                          "src": "13172:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 5881,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
                            "src": "13186:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                              "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                            }
                          },
                          "id": 5882,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4846,
                          "src": "13186:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13172:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5874,
                        "name": "offerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5797,
                        "src": "13130:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "13130:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13130:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5885,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:69:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5889,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13238:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4844,
                        "src": "13238:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5891,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5784,
                        "src": "13260:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5892,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
                          "src": "13268:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Offer_$4849_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.ERC20Offer memory"
                          }
                        },
                        "id": 5893,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4846,
                        "src": "13268:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5886,
                        "name": "exchangeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5808,
                        "src": "13211:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2071",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2052,
                      "src": "13211:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5895,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:70:20"
                },
                {
                  "expression": {
                    "id": 5900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "13292:34:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5896,
                        "name": "_erc20Offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "13299:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ERC20Offer_$4849_storage_$",
                          "typeString": "mapping(uint256 => struct ERC20TokenExchange.ERC20Offer storage ref)"
                        }
                      },
                      "id": 5899,
                      "indexExpression": {
                        "expression": {
                          "id": 5897,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5782,
                          "src": "13312:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "13312:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13299:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Offer_$4849_storage",
                        "typeString": "struct ERC20TokenExchange.ERC20Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5901,
                  "nodeType": "ExpressionStatement",
                  "src": "13292:34:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5903,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5782,
                          "src": "13368:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                            "typeString": "struct ERC20TokenExchange.OfferRequest memory"
                          }
                        },
                        "id": 5904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4876,
                        "src": "13368:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5902,
                      "name": "ERC20TokenFromOfferSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4923,
                      "src": "13344:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13344:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5906,
                  "nodeType": "EmitStatement",
                  "src": "13339:43:20"
                }
              ]
            },
            "documentation": {
              "id": 5779,
              "nodeType": "StructuredDocumentation",
              "src": "11896:154:20",
              "text": " @dev owner of token can sell token(ERC20) from buying offer\n @dev exchangeTokenId id of exchange \n @dev offerId id of offer"
            },
            "functionSelector": "e9851111",
            "id": 5908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SellERC20TokenFromOffer",
            "nameLocation": "12065:23:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5782,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "12109:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "12089:25:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferRequest_$4877_memory_ptr",
                    "typeString": "struct ERC20TokenExchange.OfferRequest"
                  },
                  "typeName": {
                    "id": 5781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5780,
                      "name": "OfferRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4877,
                      "src": "12089:12:20"
                    },
                    "referencedDeclaration": 4877,
                    "src": "12089:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferRequest_$4877_storage_ptr",
                      "typeString": "struct ERC20TokenExchange.OfferRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5784,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12124:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5908,
                  "src": "12116:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12116:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12088:43:20"
            },
            "returnParameters": {
              "id": 5786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12140:0:20"
            },
            "scope": 5909,
            "src": "12056:1334:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5910,
        "src": "180:13213:20",
        "usedErrors": []
      }
    ],
    "src": "42:13351:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xC08438AF46a53d56E14b5E74F089411b50Df55da",
      "transactionHash": "0x178e844884cc6b3fd67aa6f0164fd0e344ac42b8b1896c1b9a30aaa6dad33d68"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-02T16:13:36.890Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Exchange Contract for ERC20 Token",
    "kind": "dev",
    "methods": {
      "BuyERC20TokenFromOffer((uint256,uint256),address)": {
        "details": "someone can buy token(ERC20) from selling offerexchangeTokenId id of exchange offerId id of offer"
      },
      "CancelERC20TokenBuyingOffer((uint256,uint256),address)": {
        "details": "creator of buying offer can cancel his ERC20Token BuyingOfferexchangeTokenId id of exchange offerId id of offer"
      },
      "CancelERC20TokenSellingOffer((uint256,uint256),address)": {
        "details": "creator of selling offer can cancel his ERC20 SellingOfferexchangeTokenId id of exchange offerId id of offer"
      },
      "CreateERC20TokenExchange((string,address,address,uint256,uint256),address)": {
        "details": "Owner of token can create Exchange of ERC20exchangeTokenAddress address of exchangeToken(ERC20) offerTokenAddress address of exchangeToken(ERC20) amount amount of Exchangeprice token price of Exchange"
      },
      "PlaceERC20TokenBuyingOffer((uint256,uint256,uint256),address)": {
        "details": "someone can create buying offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange"
      },
      "PlaceERC20TokenSellingOffer((uint256,uint256,uint256),address)": {
        "details": "owner of token can create selling offer for ERC20 token exchangeexchangeTokenId id of exchange amount amount of Exchangeprice token price of Exchange"
      },
      "SellERC20TokenFromOffer((uint256,uint256),address)": {
        "details": "owner of token can sell token(ERC20) from buying offerexchangeTokenId id of exchange offerId id of offer"
      },
      "constructor": {
        "details": "Constructor Function"
      }
    },
    "stateVariables": {
      "_erc20ExchangeCount": {
        "details": "count variables for ERC20Token exchange and offer mapping"
      },
      "_erc20Exchanges": {
        "details": "variables for storing ERC20TOken Exchange and Offer"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}